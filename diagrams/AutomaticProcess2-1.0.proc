<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:connectorconfiguration="http://wwww.bonitasoft.org/model/connector/configuration" xmlns:decision="http://www.bonitasoft.org/ns/studio/process/decision" xmlns:definition="http://www.bonitasoft.org/ns/connector/definition/6.1" xmlns:expression="http://www.bonitasoft.org/ns/studio/expression" xmlns:notation="http://www.eclipse.org/gmf/runtime/1.0.2/notation" xmlns:parameter="http://www.bonitasoft.org/ns/studio/parameter" xmlns:process="http://www.bonitasoft.org/ns/studio/process" xsi:schemaLocation="http://www.bonitasoft.org/ns/studio/process/decision http://www.bonitasoft.org/ns/studio/process#//decision">
  <process:MainProcess xmi:id="_Tpj_MI6OEei8kvcpw0fSig" name="AutomaticProcess2" author="Personal" bonitaVersion="7.7.2" bonitaModelVersion="7.6.0-002" configId="ACED00057400214175746F6D6174696350726F6365737332372E362E302D303032372E372E327370">
    <elements xmi:type="process:Pool" xmi:id="_Tpj_MY6OEei8kvcpw0fSig" name="DECISION_CREDITO">
      <elements xmi:type="process:Lane" xmi:id="_Tpj_Mo6OEei8kvcpw0fSig" name="System">
        <elements xmi:type="process:StartEvent" xmi:id="_Tpj_M46OEei8kvcpw0fSig" name="Start" outgoing="_TpknMY6OEei8kvcpw0fSig">
          <viewPageFlowRedirectionURL xmi:type="expression:Expression" xmi:id="_Tpj_NI6OEei8kvcpw0fSig" name="" content="" returnTypeFixed="true"/>
          <dynamicLabel xmi:type="expression:Expression" xmi:id="_Tpj_NY6OEei8kvcpw0fSig" name="" content="" returnTypeFixed="true"/>
          <dynamicDescription xmi:type="expression:Expression" xmi:id="_Tpj_No6OEei8kvcpw0fSig" name="" content="" returnTypeFixed="true"/>
          <stepSummary xmi:type="expression:Expression" xmi:id="_Tpj_N46OEei8kvcpw0fSig" name="" content="" returnTypeFixed="true"/>
        </elements>
        <elements xmi:type="process:ServiceTask" xmi:id="_Tpj_OI6OEei8kvcpw0fSig" name="Operaciones" outgoing="_TpknN46OEei8kvcpw0fSig" incoming="_TpknMY6OEei8kvcpw0fSig">
          <viewPageFlowRedirectionURL xmi:type="expression:Expression" xmi:id="_Tpj_OY6OEei8kvcpw0fSig" name="" content="" returnTypeFixed="true"/>
          <dynamicLabel xmi:type="expression:Expression" xmi:id="_Tpj_Oo6OEei8kvcpw0fSig" name="" content="" returnTypeFixed="true"/>
          <dynamicDescription xmi:type="expression:Expression" xmi:id="_Tpj_O46OEei8kvcpw0fSig" name="" content="" returnTypeFixed="true"/>
          <stepSummary xmi:type="expression:Expression" xmi:id="_Tpj_PI6OEei8kvcpw0fSig" name="" content="" returnTypeFixed="true"/>
          <connectors xmi:type="process:Connector" xmi:id="_M608wJBDEeiNZ7jJpWh7Pw" name="riskProfilesCliente()" definitionId="scripting-groovy-script" event="ON_ENTER" definitionVersion="1.0.1">
            <configuration xmi:type="connectorconfiguration:ConnectorConfiguration" xmi:id="_M608wZBDEeiNZ7jJpWh7Pw" definitionId="scripting-groovy-script" version="1.0.1" modelVersion="7.4.0-004">
              <parameters xmi:type="connectorconfiguration:ConnectorParameter" xmi:id="_M608wpBDEeiNZ7jJpWh7Pw" key="script">
                <expression xmi:type="expression:Expression" xmi:id="_M608w5BDEeiNZ7jJpWh7Pw" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnTypeFixed="true"/>
              </parameters>
              <parameters xmi:type="connectorconfiguration:ConnectorParameter" xmi:id="_M608xJBDEeiNZ7jJpWh7Pw" key="variables"/>
              <parameters xmi:type="connectorconfiguration:ConnectorParameter" xmi:id="_M608xZBDEeiNZ7jJpWh7Pw" key="fakeScriptExpression">
                <expression xmi:type="expression:Expression" xmi:id="_M608xpBDEeiNZ7jJpWh7Pw" name="riskProfilesCliente()" content="import com.bbva.cnmc.proxyaso.controller.ProxyASOController;&#xD;&#xA;import com.bbva.cnmc.proxyaso.dto.aso.AsoDTO;&#xD;&#xA;import com.bbva.cnmc.proxyaso.dto.aso.GrantingTicketDTO;&#xD;&#xA;import com.fasterxml.jackson.databind.ObjectMapper&#xD;&#xA;import com.fasterxml.jackson.databind.DeserializationFeature;&#xD;&#xA;import java.util.logging.Level;&#xD;&#xA;import java.util.logging.Logger;&#xD;&#xA;import javax.print.attribute.standard.MediaName;&#xD;&#xA;import org.apache.commons.lang.StringUtils;&#xD;&#xA;import org.springframework.context.ApplicationContext;&#xD;&#xA;import org.springframework.context.support.ClassPathXmlApplicationContext;&#xD;&#xA;import org.springframework.http.HttpEntity;&#xD;&#xA;import org.springframework.http.HttpHeaders;&#xD;&#xA;import org.springframework.http.HttpMethod;&#xD;&#xA;import org.springframework.http.MediaType;&#xD;&#xA;import org.springframework.http.ResponseEntity;&#xD;&#xA;import org.springframework.web.client.RestTemplate;&#xD;&#xA;&#xD;&#xA;//Logger and mapper configuration&#xD;&#xA;Logger LOGGER = Logger.getLogger(&quot;InfoLogging&quot;);&#xD;&#xA;LOGGER.info(&quot;Logging an INFO-level message: Operaciones Cliente&quot;);&#xD;&#xA;ApplicationContext context = new ClassPathXmlApplicationContext(&quot;applicationContext.xml&quot;);&#xD;&#xA;ObjectMapper mapper = new ObjectMapper()&#xD;&#xA;mapper.configure(DeserializationFeature.ACCEPT_SINGLE_VALUE_AS_ARRAY, true);&#xD;&#xA;&#xD;&#xA;//ASO configuration&#xD;&#xA;AsoDTO asoDto = (AsoDTO) context.getBean(&quot;asoDto&quot;);&#xD;&#xA;asoDto.setGrantingTicketDTO(grantingTicketDTO);&#xD;&#xA;asoDto.setAsoBaseUrl(decisionCredito.getExecutions()[0].getEndpoint());&#xD;&#xA;asoDto.setAsoMediaType(MediaType.APPLICATION_JSON);&#xD;&#xA;&#xD;&#xA;//Obtaining input payload from Risk-Profiles service&#xD;&#xA;ProxyASOController controller = (ProxyASOController) context.getBean(&quot;proxyASOController&quot;);&#xD;&#xA;asoDto.setOperacionHttpServicio(HttpMethod.GET);&#xD;&#xA;String peticionHttp = controller.procesarPeticionGetHTTP(asoDto);&#xD;&#xA;Map readValue = mapper.readValue(peticionHttp, Map.class);&#xD;&#xA;&#xD;&#xA;//Creating output payload&#xD;&#xA;Map&lt;Object, Object> outPayload = new LinkedHashMap&lt;Object, Object>();&#xD;&#xA;&#xD;&#xA;//Other variables&#xD;&#xA;Map&lt;Object, Object> opApproved = new LinkedHashMap&lt;Object, Object>();&#xD;&#xA;Map&lt;Object, Object> opDenied = new LinkedHashMap&lt;Object, Object>();&#xD;&#xA;Map&lt;Object, Object> opProcedure = new LinkedHashMap&lt;Object, Object>();&#xD;&#xA;String type = &quot;&quot;;&#xD;&#xA;Date todayDate = Date.parse(&quot;yyyy-MM-dd&quot;,new Date().format(&quot;yyyy-MM-dd&quot;));&#xD;&#xA;&#xD;&#xA;//Function for updating the map (approved, denied or procedure operations) according to the operation type&#xD;&#xA;public LinkedHashMap mapUpdate(LinkedHashMap map, LinkedHashMap operation, String type){&#xD;&#xA;&#x9;List&lt;Object> opType =  new ArrayList&lt;>();&#xD;&#xA;&#x9;if(map.get(type)){&#xD;&#xA;&#x9;&#x9;opType = map.get(type);&#xD;&#xA;&#x9;}&#xD;&#xA;&#x9;opType.add(operation);&#xD;&#xA;&#x9;map.put(type,opType);&#xD;&#xA;&#x9;return map;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;//Classification of operations according to status (APPROVED, DENIED, PROCEDURE) and type&#xD;&#xA;if(readValue.data){&#xD;&#xA;&#x9;for(int i = 0; i &lt; readValue.data.size(); i++){&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;Map&lt;Object, Object> operation = new LinkedHashMap&lt;Object, Object>();&#xD;&#xA;&#x9;&#x9;operation.numeroContrato = readValue.data[i].id;&#xD;&#xA;&#x9;&#x9;operation.tipoProducto = readValue.data[i].classification.classificationType.name;&#xD;&#xA;&#x9;&#x9;operation.fechaSolicitud = readValue.data[i].openingDate;&#xD;&#xA;&#x9;&#x9;operation.fechaFormalizacion = readValue.data[i].maturityDate;&#xD;&#xA;&#x9;&#x9;operation.valorAprobado = readValue.data[i].approvedAmount;&#xD;&#xA;&#x9;&#x9;operation.valorSolicitado = readValue.data[i].requestAmount;&#xD;&#xA;&#x9;&#x9;operation.saldoActual = readValue.data[i].pendingAmount;&#xD;&#xA;&#x9;&#x9;operation.participe = readValue.data[i].participant;&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;Date date = Date.parse(&quot;yyyy-MM-dd&quot;,readValue.data[i].openingDate);     &#x9;&#x9;&#x9;// Date of operation&#xD;&#xA;&#x9;&#x9;operation.diasHastaHoy = (todayDate.getTime() - date.getTime()) / 86400000;&#xD;&#xA;&#x9;&#x9;type = readValue.data[i].classification.firstLevel.id;&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;if(readValue.data[i].status.id.equals(&quot;APPROVED&quot;)){&#xD;&#xA;&#x9;&#x9;&#x9;opApproved = mapUpdate(opApproved, operation, type);&#xD;&#xA;&#x9;&#x9;&#x9;if(!outPayload.techo){&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;outPayload.techo = readValue.data[i].pendingAmount.amount;&#xD;&#xA;&#x9;&#x9;&#x9;}else{&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;outPayload.techo = outPayload.techo + readValue.data[i].pendingAmount.amount;&#xD;&#xA;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;if(readValue.data[i].status.id.equals(&quot;DENIED&quot;)){&#xD;&#xA;&#x9;&#x9;&#x9;opDenied = mapUpdate(opDenied, operation, type);&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;if(readValue.data[i].status.id.equals(&quot;PROCEDURE&quot;)){&#xD;&#xA;&#x9;&#x9;&#x9;opProcedure = mapUpdate(opProcedure, operation, type);&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;}&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;//Mapping of operations on the three possibles status to the output payload&#xD;&#xA;outPayload.put(&quot;aprobadas&quot;, opApproved);&#xD;&#xA;outPayload.put(&quot;negadas&quot;, opDenied);&#xD;&#xA;outPayload.put(&quot;proceso&quot;, opProcedure);&#xD;&#xA;&#xD;&#xA;String outPayloadStr = new ObjectMapper().writeValueAsString(outPayload);&#xD;&#xA;&#xD;&#xA;//Setting RiskProfiles service&#xD;&#xA;decisionCredito.getExecutions()[0].setOutputPayload(outPayloadStr);&#xD;&#xA;decisionCredito.getExecutions()[0].setDateEnd(new Date().getTime());&#xD;&#xA;decisionCredito.getExecutions()[0].setStatus(&quot;FINISHED&quot;);&#xD;&#xA;&#xD;&#xA;return decisionCredito;" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.lang.Object" returnTypeFixed="true">
                  <referencedElements xmi:type="process:JavaObjectData" xmi:id="_CX8bsZ_MEeiV_aNwidcLeQ" name="grantingTicketDTO" dataType="_TplNkY6OEei8kvcpw0fSig" className="com.bbva.cnmc.proxyaso.dto.aso.GrantingTicketDTO"/>
                  <referencedElements xmi:type="process:BusinessObjectData" xmi:id="_CX8bsp_MEeiV_aNwidcLeQ" name="decisionCredito" dataType="_TplNk46OEei8kvcpw0fSig" className="com.bbva.model.AutomaticProcessTask"/>
                </expression>
              </parameters>
            </configuration>
            <outputs xmi:type="expression:Operation" xmi:id="_M608yZBDEeiNZ7jJpWh7Pw">
              <leftOperand xmi:type="expression:Expression" xmi:id="_M608ypBDEeiNZ7jJpWh7Pw" name="decisionCredito" content="decisionCredito" type="TYPE_VARIABLE" returnType="com.bbva.model.AutomaticProcessTask">
                <referencedElements xmi:type="process:BusinessObjectData" xmi:id="_CX9Cyp_MEeiV_aNwidcLeQ" name="decisionCredito" dataType="_TplNk46OEei8kvcpw0fSig" className="com.bbva.model.AutomaticProcessTask"/>
              </leftOperand>
              <rightOperand xmi:type="expression:Expression" xmi:id="_M608zJBDEeiNZ7jJpWh7Pw" name="result" content="result" type="CONNECTOR_OUTPUT_TYPE" returnType="java.lang.Object">
                <referencedElements xmi:type="definition:Output" xmi:id="_M608zZBDEeiNZ7jJpWh7Pw" name="result" type="java.lang.Object"/>
              </rightOperand>
              <operator xmi:type="expression:Operator" xmi:id="_M608zpBDEeiNZ7jJpWh7Pw" type="ASSIGNMENT"/>
            </outputs>
          </connectors>
          <connectors xmi:type="process:Connector" xmi:id="_aNlCgJASEeiFubttvGmCkQ" name="riskProfilesConyuge()" definitionId="scripting-groovy-script" event="ON_ENTER" definitionVersion="1.0.1">
            <configuration xmi:type="connectorconfiguration:ConnectorConfiguration" xmi:id="_aNlCgZASEeiFubttvGmCkQ" definitionId="scripting-groovy-script" version="1.0.1" modelVersion="7.4.0-004">
              <parameters xmi:type="connectorconfiguration:ConnectorParameter" xmi:id="_aNlCgpASEeiFubttvGmCkQ" key="script">
                <expression xmi:type="expression:Expression" xmi:id="_aNlCg5ASEeiFubttvGmCkQ" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnTypeFixed="true"/>
              </parameters>
              <parameters xmi:type="connectorconfiguration:ConnectorParameter" xmi:id="_aNlChJASEeiFubttvGmCkQ" key="variables"/>
              <parameters xmi:type="connectorconfiguration:ConnectorParameter" xmi:id="_aNlChZASEeiFubttvGmCkQ" key="fakeScriptExpression">
                <expression xmi:type="expression:Expression" xmi:id="_aNlChpASEeiFubttvGmCkQ" name="riskProfilesConyuge()" content="import com.bbva.cnmc.proxyaso.controller.ProxyASOController;&#xD;&#xA;import com.bbva.cnmc.proxyaso.dto.aso.AsoDTO;&#xD;&#xA;import com.bbva.cnmc.proxyaso.dto.aso.GrantingTicketDTO;&#xD;&#xA;import com.fasterxml.jackson.databind.ObjectMapper&#xD;&#xA;import com.fasterxml.jackson.databind.DeserializationFeature;&#xD;&#xA;import java.util.logging.Level;&#xD;&#xA;import java.util.logging.Logger;&#xD;&#xA;import javax.print.attribute.standard.MediaName;&#xD;&#xA;import org.apache.commons.lang.StringUtils;&#xD;&#xA;import org.springframework.context.ApplicationContext;&#xD;&#xA;import org.springframework.context.support.ClassPathXmlApplicationContext;&#xD;&#xA;import org.springframework.http.HttpEntity;&#xD;&#xA;import org.springframework.http.HttpHeaders;&#xD;&#xA;import org.springframework.http.HttpMethod;&#xD;&#xA;import org.springframework.http.MediaType;&#xD;&#xA;import org.springframework.http.ResponseEntity;&#xD;&#xA;import org.springframework.web.client.RestTemplate;&#xD;&#xA;&#xD;&#xA;//Logger and mapper configuration&#xD;&#xA;Logger LOGGER = Logger.getLogger(&quot;InfoLogging&quot;);&#xD;&#xA;LOGGER.info(&quot;Logging an INFO-level message: Operaciones Conyuge&quot;);&#xD;&#xA;ApplicationContext context = new ClassPathXmlApplicationContext(&quot;applicationContext.xml&quot;);&#xD;&#xA;ObjectMapper mapper = new ObjectMapper()&#xD;&#xA;mapper.configure(DeserializationFeature.ACCEPT_SINGLE_VALUE_AS_ARRAY, true);&#xD;&#xA;&#xD;&#xA;//ASO configuration&#xD;&#xA;AsoDTO asoDto = (AsoDTO) context.getBean(&quot;asoDto&quot;);&#xD;&#xA;asoDto.setGrantingTicketDTO(grantingTicketDTO);&#xD;&#xA;asoDto.setAsoBaseUrl(decisionCredito.getExecutions()[1].getEndpoint());&#xD;&#xA;asoDto.setAsoMediaType(MediaType.APPLICATION_JSON);&#xD;&#xA;&#xD;&#xA;//Obtaining input payload from Risk-Profiles service&#xD;&#xA;ProxyASOController controller = (ProxyASOController) context.getBean(&quot;proxyASOController&quot;);&#xD;&#xA;asoDto.setOperacionHttpServicio(HttpMethod.GET);&#xD;&#xA;String peticionHttp = controller.procesarPeticionGetHTTP(asoDto);&#xD;&#xA;Map readValue = mapper.readValue(peticionHttp, Map.class);&#xD;&#xA;Map param = mapper.readValue(pOperations, Map.class);&#xD;&#xA;&#xD;&#xA;//Creating output payload&#xD;&#xA;Map&lt;Object, Object> outPayload = new LinkedHashMap&lt;Object, Object>();&#xD;&#xA;&#xD;&#xA;//Other variables&#xD;&#xA;Map&lt;Object, Object> opApproved = new LinkedHashMap&lt;Object, Object>();&#xD;&#xA;Map&lt;Object, Object> opDenied = new LinkedHashMap&lt;Object, Object>();&#xD;&#xA;Map&lt;Object, Object> opProcedure = new LinkedHashMap&lt;Object, Object>();&#xD;&#xA;&#xD;&#xA;//Classification of operations according to status (APPROVED, DENIED, PROCEDURE) and type&#xD;&#xA;if(readValue.data){&#xD;&#xA;&#x9;for(int i = 0; i &lt; readValue.data.size(); i++){&#xD;&#xA;&#x9;&#x9;if(readValue.data[i].status.id.equals(&quot;APPROVED&quot;)){&#xD;&#xA;&#x9;&#x9;&#x9;if(!outPayload.techo){&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;outPayload.techo = readValue.data[i].pendingAmount.amount;&#xD;&#xA;&#x9;&#x9;&#x9;}else{&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;outPayload.techo = outPayload.techo + readValue.data[i].pendingAmount.amount;&#xD;&#xA;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;}&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;String outPayloadStr = new ObjectMapper().writeValueAsString(outPayload);&#xD;&#xA;&#xD;&#xA;//Setting RiskProfiles service&#xD;&#xA;decisionCredito.getExecutions()[1].setOutputPayload(outPayloadStr);&#xD;&#xA;decisionCredito.getExecutions()[1].setDateEnd(new Date().getTime());&#xD;&#xA;decisionCredito.getExecutions()[1].setStatus(&quot;FINISHED&quot;);&#xD;&#xA;&#xD;&#xA;return decisionCredito;" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.lang.Object" returnTypeFixed="true">
                  <referencedElements xmi:type="parameter:Parameter" xmi:id="_aNlCiJASEeiFubttvGmCkQ" name="pOperations" typeClassname="java.lang.String"/>
                  <referencedElements xmi:type="process:JavaObjectData" xmi:id="_CX8btp_MEeiV_aNwidcLeQ" name="grantingTicketDTO" dataType="_TplNkY6OEei8kvcpw0fSig" className="com.bbva.cnmc.proxyaso.dto.aso.GrantingTicketDTO"/>
                  <referencedElements xmi:type="process:BusinessObjectData" xmi:id="_CX8bt5_MEeiV_aNwidcLeQ" name="decisionCredito" dataType="_TplNk46OEei8kvcpw0fSig" className="com.bbva.model.AutomaticProcessTask"/>
                </expression>
              </parameters>
            </configuration>
            <outputs xmi:type="expression:Operation" xmi:id="_aNlCipASEeiFubttvGmCkQ">
              <leftOperand xmi:type="expression:Expression" xmi:id="_aNlCi5ASEeiFubttvGmCkQ" name="decisionCredito" content="decisionCredito" type="TYPE_VARIABLE" returnType="com.bbva.model.AutomaticProcessTask">
                <referencedElements xmi:type="process:BusinessObjectData" xmi:id="_CX9Cz5_MEeiV_aNwidcLeQ" name="decisionCredito" dataType="_TplNk46OEei8kvcpw0fSig" className="com.bbva.model.AutomaticProcessTask"/>
              </leftOperand>
              <rightOperand xmi:type="expression:Expression" xmi:id="_aNlCjZASEeiFubttvGmCkQ" name="result" content="result" type="CONNECTOR_OUTPUT_TYPE" returnType="java.lang.Object">
                <referencedElements xmi:type="definition:Output" xmi:id="_aNlCjpASEeiFubttvGmCkQ" name="result" type="java.lang.Object"/>
              </rightOperand>
              <operator xmi:type="expression:Operator" xmi:id="_aNlCj5ASEeiFubttvGmCkQ" type="ASSIGNMENT"/>
            </outputs>
          </connectors>
          <loopCondition xmi:type="expression:Expression" xmi:id="_Tpj_XI6OEei8kvcpw0fSig" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
          <loopMaximum xmi:type="expression:Expression" xmi:id="_Tpj_XY6OEei8kvcpw0fSig" name="" content="" returnType="java.lang.Integer" returnTypeFixed="true"/>
          <cardinalityExpression xmi:type="expression:Expression" xmi:id="_Tpj_Xo6OEei8kvcpw0fSig" name="" content="" returnType="java.lang.Integer" returnTypeFixed="true"/>
          <iteratorExpression xmi:type="expression:Expression" xmi:id="_Tpj_X46OEei8kvcpw0fSig" name="multiInstanceIterator" content="multiInstanceIterator" type="MULTIINSTANCE_ITERATOR_TYPE" returnType="java.lang.Object" returnTypeFixed="true"/>
          <completionCondition xmi:type="expression:Expression" xmi:id="_Tpj_YI6OEei8kvcpw0fSig" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
        </elements>
        <elements xmi:type="process:EndTerminatedEvent" xmi:id="_Tpj_YY6OEei8kvcpw0fSig" name="End" incoming="_LXvnEI6bEeiCd4A7RChmhg">
          <viewPageFlowRedirectionURL xmi:type="expression:Expression" xmi:id="_Tpj_Yo6OEei8kvcpw0fSig" name="" content="" returnTypeFixed="true"/>
          <dynamicLabel xmi:type="expression:Expression" xmi:id="_Tpj_Y46OEei8kvcpw0fSig" name="" content="" returnTypeFixed="true"/>
          <dynamicDescription xmi:type="expression:Expression" xmi:id="_Tpj_ZI6OEei8kvcpw0fSig" name="" content="" returnTypeFixed="true"/>
          <stepSummary xmi:type="expression:Expression" xmi:id="_Tpj_ZY6OEei8kvcpw0fSig" name="" content="" returnTypeFixed="true"/>
        </elements>
        <elements xmi:type="process:ServiceTask" xmi:id="_Tpj_Zo6OEei8kvcpw0fSig" name="Drools " outgoing="_LXvnEI6bEeiCd4A7RChmhg" incoming="_TplNU46OEei8kvcpw0fSig">
          <viewPageFlowRedirectionURL xmi:type="expression:Expression" xmi:id="_Tpj_Z46OEei8kvcpw0fSig" name="" content="" returnTypeFixed="true"/>
          <dynamicLabel xmi:type="expression:Expression" xmi:id="_Tpj_aI6OEei8kvcpw0fSig" name="" content="" returnTypeFixed="true"/>
          <dynamicDescription xmi:type="expression:Expression" xmi:id="_Tpj_aY6OEei8kvcpw0fSig" name="" content="" returnTypeFixed="true"/>
          <stepSummary xmi:type="expression:Expression" xmi:id="_Tpj_ao6OEei8kvcpw0fSig" name="" content="" returnTypeFixed="true"/>
          <connectors xmi:type="process:Connector" xmi:id="_1MlCwJT4EeimyMrxtKzKVw" name="rulesImpagos()" definitionId="scripting-groovy-script" event="ON_ENTER" definitionVersion="1.0.1">
            <configuration xmi:type="connectorconfiguration:ConnectorConfiguration" xmi:id="_1MlCwZT4EeimyMrxtKzKVw" definitionId="scripting-groovy-script" version="1.0.1" modelVersion="7.4.0-004">
              <parameters xmi:type="connectorconfiguration:ConnectorParameter" xmi:id="_1MlCwpT4EeimyMrxtKzKVw" key="script">
                <expression xmi:type="expression:Expression" xmi:id="_1MlCw5T4EeimyMrxtKzKVw" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnTypeFixed="true"/>
              </parameters>
              <parameters xmi:type="connectorconfiguration:ConnectorParameter" xmi:id="_1MlCxJT4EeimyMrxtKzKVw" key="variables"/>
              <parameters xmi:type="connectorconfiguration:ConnectorParameter" xmi:id="_1MlCxZT4EeimyMrxtKzKVw" key="fakeScriptExpression">
                <expression xmi:type="expression:Expression" xmi:id="_1MlCxpT4EeimyMrxtKzKVw" name="rulesImpagos()" content="import com.fasterxml.jackson.databind.ObjectMapper&#xD;&#xA;import com.fasterxml.jackson.databind.DeserializationFeature;&#xD;&#xA;import java.util.logging.Level;&#xD;&#xA;import java.util.logging.Logger;&#xD;&#xA;import org.apache.commons.lang.StringUtils;&#xD;&#xA;import org.springframework.context.ApplicationContext;&#xD;&#xA;import org.springframework.context.support.ClassPathXmlApplicationContext;&#xD;&#xA;import org.kie.api.KieServices;&#xD;&#xA;import org.kie.api.runtime.KieContainer;&#xD;&#xA;import org.kie.api.runtime.KieSession;&#xD;&#xA;import com.bbva.drools.dto.ArrearsDTO;&#xD;&#xA;import com.bbva.drools.reglas.validacion.dto.reglas.ReglaNegocioDTO;&#xD;&#xA; &#xD;&#xA;//Logger and mapper configuration&#xD;&#xA;Logger LOGGER = Logger.getLogger(&quot;InfoLogging&quot;);&#xD;&#xA;LOGGER.info(&quot;Logging an INFO-level message: Rules execution Impagos&quot;);&#xD;&#xA;ApplicationContext context = new ClassPathXmlApplicationContext(&quot;applicationContext.xml&quot;);&#xD;&#xA;ObjectMapper mapper = new ObjectMapper();&#xD;&#xA;mapper.configure(DeserializationFeature.ACCEPT_SINGLE_VALUE_AS_ARRAY, true);&#xD;&#xA;&#xD;&#xA;//Function to get rule, response and message for a particular rule&#xD;&#xA;public Map printRule(int numberRule){&#xD;&#xA;&#x9;Logger LOGGER1 = Logger.getLogger(&quot;Rule:&quot;);&#xD;&#xA;&#x9;try {&#xD;&#xA;&#x9;&#x9;KieServices ks = KieServices.Factory.get();&#xD;&#xA;&#x9;&#x9;KieContainer kContainer = ks.getKieClasspathContainer();&#xD;&#xA;&#x9;&#x9;KieSession kSession = kContainer.newKieSession(&quot;ksession-rules&quot;);&#xD;&#xA;&#x9;&#x9;arrearDTO.setReglasNegocioDTO([]);&#xD;&#xA;&#x9;&#x9;kSession.insert(arrearDTO);&#xD;&#xA;&#x9;&#x9;kSession.fireAllRules();&#xD;&#xA;&#x9;&#x9;ReglaNegocioDTO rule = arrearDTO.getReglasNegocioDTO().get(numberRule);&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;//Map with rule, response and message for rule located in (numberRule)&#xD;&#xA;&#x9;&#x9;Map&lt;Object, Object> response = new LinkedHashMap&lt;Object, Object>();&#xD;&#xA;&#x9;&#x9;response.regla = rule.getRespuestaObtenida().getRegla();&#xD;&#xA;&#x9;&#x9;response.respuesta = rule.getRespuestaObtenida().isRespuesta();&#xD;&#xA;&#x9;&#x9;response.mensaje = rule.getRespuestaObtenida().getMensajeRespuesta();&#xD;&#xA;&#x9;&#x9;return response;&#xD;&#xA;&#x9;} catch (Exception e) {&#xD;&#xA;&#x9;&#x9;LOGGER1.info(&quot;Error: &quot; + e.message);&#xD;&#xA;&#x9;}&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;//Obtaining inputPayload from execution2 output (arrears service)&#xD;&#xA;String inputPayload2 = decisionCredito.getExecutions()[2].getOutputPayload();&#xD;&#xA;Map readValue2 = mapper.readValue(inputPayload2, Map.class);&#xD;&#xA;&#xD;&#xA;//Setting parameters Impagos&#xD;&#xA;Map p = mapper.readValue(pImpagos,Map.class);&#xD;&#xA;arrearDTO.setParametroValorImpagos(p.valor);&#xD;&#xA;arrearDTO.setParametroDiasImpagos(p.dias);&#xD;&#xA;&#xD;&#xA;//Creating list for the output&#xD;&#xA;List&lt;Object> output = new ArrayList&lt;>();&#xD;&#xA;Map&lt;Object, Object> outPayload = new LinkedHashMap&lt;Object, Object>();&#xD;&#xA;&#xD;&#xA;//Execution of rules for Impagos&#xD;&#xA;if(readValue2.sumValoresImpagos){&#xD;&#xA;&#x9;arrearDTO.setValorImpagos(readValue2.sumValoresImpagos);&#xD;&#xA;&#x9;output.add(printRule(0));&#xD;&#xA;}&#xD;&#xA;if(readValue2.maxDiasImpagos){&#xD;&#xA;&#x9;arrearDTO.setDiasImpagos(readValue2.maxDiasImpagos);&#xD;&#xA;&#x9;output.add(printRule(1));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;//Configuration of output payload&#xD;&#xA;outPayload.reglas = output;&#xD;&#xA;String outPayloadStr = new ObjectMapper().writeValueAsString(outPayload);&#xD;&#xA;decisionCredito.getExecutions()[7].setOutputPayload(outPayloadStr);&#xD;&#xA;&#xD;&#xA;return decisionCredito;" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.lang.Object" returnTypeFixed="true">
                  <referencedElements xmi:type="parameter:Parameter" xmi:id="_1MlCx5T4EeimyMrxtKzKVw" name="pImpagos" typeClassname="java.lang.String"/>
                  <referencedElements xmi:type="process:BusinessObjectData" xmi:id="_CX8bu5_MEeiV_aNwidcLeQ" name="decisionCredito" dataType="_TplNk46OEei8kvcpw0fSig" className="com.bbva.model.AutomaticProcessTask"/>
                  <referencedElements xmi:type="process:JavaObjectData" xmi:id="_CX8bvJ_MEeiV_aNwidcLeQ" name="arrearDTO" dataType="_TplNkY6OEei8kvcpw0fSig" className="com.bbva.drools.dto.ArrearsDTO"/>
                </expression>
              </parameters>
            </configuration>
            <outputs xmi:type="expression:Operation" xmi:id="_1MlCypT4EeimyMrxtKzKVw">
              <leftOperand xmi:type="expression:Expression" xmi:id="_1MlCy5T4EeimyMrxtKzKVw" name="decisionCredito" content="decisionCredito" type="TYPE_VARIABLE" returnType="com.bbva.model.AutomaticProcessTask">
                <referencedElements xmi:type="process:BusinessObjectData" xmi:id="_CX9C1J_MEeiV_aNwidcLeQ" name="decisionCredito" dataType="_TplNk46OEei8kvcpw0fSig" className="com.bbva.model.AutomaticProcessTask"/>
              </leftOperand>
              <rightOperand xmi:type="expression:Expression" xmi:id="_1MlCzZT4EeimyMrxtKzKVw" name="result" content="result" type="CONNECTOR_OUTPUT_TYPE" returnType="java.lang.Object">
                <referencedElements xmi:type="definition:Output" xmi:id="_1MlCzpT4EeimyMrxtKzKVw" name="result" type="java.lang.Object"/>
              </rightOperand>
              <operator xmi:type="expression:Operator" xmi:id="_1MlCz5T4EeimyMrxtKzKVw" type="ASSIGNMENT"/>
            </outputs>
          </connectors>
          <connectors xmi:type="process:Connector" xmi:id="_3rq7YJT4EeimyMrxtKzKVw" name="rulesOperaciones()" definitionId="scripting-groovy-script" event="ON_ENTER" definitionVersion="1.0.1">
            <configuration xmi:type="connectorconfiguration:ConnectorConfiguration" xmi:id="_3rq7YZT4EeimyMrxtKzKVw" definitionId="scripting-groovy-script" version="1.0.1" modelVersion="7.4.0-004">
              <parameters xmi:type="connectorconfiguration:ConnectorParameter" xmi:id="_3rq7YpT4EeimyMrxtKzKVw" key="script">
                <expression xmi:type="expression:Expression" xmi:id="_3rq7Y5T4EeimyMrxtKzKVw" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnTypeFixed="true"/>
              </parameters>
              <parameters xmi:type="connectorconfiguration:ConnectorParameter" xmi:id="_3rq7ZJT4EeimyMrxtKzKVw" key="variables"/>
              <parameters xmi:type="connectorconfiguration:ConnectorParameter" xmi:id="_3rq7ZZT4EeimyMrxtKzKVw" key="fakeScriptExpression">
                <expression xmi:type="expression:Expression" xmi:id="_3rq7ZpT4EeimyMrxtKzKVw" name="rulesOperaciones()" content="import com.fasterxml.jackson.databind.ObjectMapper&#xD;&#xA;import com.fasterxml.jackson.databind.DeserializationFeature;&#xD;&#xA;import java.util.logging.Level;&#xD;&#xA;import java.util.logging.Logger;&#xD;&#xA;import org.apache.commons.lang.StringUtils;&#xD;&#xA;import org.springframework.context.ApplicationContext;&#xD;&#xA;import org.springframework.context.support.ClassPathXmlApplicationContext;&#xD;&#xA;import org.kie.api.KieServices;&#xD;&#xA;import org.kie.api.runtime.KieContainer;&#xD;&#xA;import org.kie.api.runtime.KieSession;&#xD;&#xA;import com.bbva.drools.dto.RiskProfilesDTO;&#xD;&#xA;import com.bbva.drools.reglas.validacion.dto.reglas.ReglaNegocioDTO;&#xD;&#xA;&#xD;&#xA;//Logger and mapper configuration&#xD;&#xA;Logger LOGGER = Logger.getLogger(&quot;InfoLogging&quot;);&#xD;&#xA;LOGGER.info(&quot;Logging an INFO-level message: Rules execution Operations&quot;);&#xD;&#xA;ApplicationContext context = new ClassPathXmlApplicationContext(&quot;applicationContext.xml&quot;);&#xD;&#xA;ObjectMapper mapper = new ObjectMapper()&#xD;&#xA;mapper.configure(DeserializationFeature.ACCEPT_SINGLE_VALUE_AS_ARRAY, true);&#xD;&#xA;&#xD;&#xA;//Function to get rule, response and message for a particular rule&#xD;&#xA;public Map printRule(int numberRule){&#xD;&#xA;&#x9;Logger LOGGER1 = Logger.getLogger(&quot;Rule:&quot;);&#xD;&#xA;&#x9;try {&#xD;&#xA;&#x9;&#x9;KieServices ks = KieServices.Factory.get();&#xD;&#xA;&#x9;&#x9;KieContainer kContainer = ks.getKieClasspathContainer();&#xD;&#xA;&#x9;&#x9;KieSession kSession = kContainer.newKieSession(&quot;ksession-rules&quot;);&#xD;&#xA;&#x9;&#x9;riskDTO.setReglasNegocioDTO([]);&#xD;&#xA;&#x9;&#x9;kSession.insert(riskDTO);&#xD;&#xA;&#x9;&#x9;kSession.fireAllRules();&#xD;&#xA;&#x9;&#x9;ReglaNegocioDTO rule = riskDTO.getReglasNegocioDTO().get(numberRule);&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;//Map with rule, response and message for rule located in (numberRule)&#xD;&#xA;&#x9;&#x9;Map&lt;Object, Object> response = new LinkedHashMap&lt;Object, Object>();&#xD;&#xA;&#x9;&#x9;response.regla = rule.getRespuestaObtenida().getRegla();&#xD;&#xA;&#x9;&#x9;response.respuesta = rule.getRespuestaObtenida().isRespuesta();&#xD;&#xA;&#x9;&#x9;response.mensaje = rule.getRespuestaObtenida().getMensajeRespuesta();&#xD;&#xA;&#x9;&#x9;return response;&#xD;&#xA;&#x9;} catch (Exception e) {&#xD;&#xA;&#x9;&#x9;LOGGER1.info(&quot;Error: &quot; + e.message);&#xD;&#xA;&#x9;}&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;//Obtaining inputPayload from execution0 output (riskProfiles service for client)&#xD;&#xA;String inputPayload0 = decisionCredito.getExecutions()[0].getOutputPayload();&#xD;&#xA;Map readValue0 = mapper.readValue(inputPayload0, Map.class);&#xD;&#xA;&#xD;&#xA;//Obtaining inputPayload from execution7 output (drools)&#xD;&#xA;String inputPayload7 = decisionCredito.getExecutions()[7].getOutputPayload();&#xD;&#xA;Map readValue7 = mapper.readValue(inputPayload7, Map.class);&#xD;&#xA;&#xD;&#xA;//Creating map and list for the output&#xD;&#xA;List&lt;Object> output = new ArrayList&lt;>();&#xD;&#xA;Map&lt;Object, Object> outPayload = new LinkedHashMap&lt;Object, Object>();&#xD;&#xA;output = readValue7.reglas;&#xD;&#xA;&#xD;&#xA;//Obtaining value of parameters for Operations rules&#xD;&#xA;Map p = mapper.readValue(pOperations,Map.class);&#xD;&#xA;&#xD;&#xA;int[] daysParam = new int[15];&#xD;&#xA;daysParam[0] = p.formalizadas.libranza;&#xD;&#xA;daysParam[1] = p.formalizadas.consumo;&#xD;&#xA;daysParam[2] = p.formalizadas.hipotecario;&#xD;&#xA;daysParam[3] = p.formalizadas.vehiculo;&#xD;&#xA;daysParam[4] = p.formalizadas.tdc;&#xD;&#xA;daysParam[5] = p.negadas.libranza;&#xD;&#xA;daysParam[6] = p.negadas.consumo;&#xD;&#xA;daysParam[7] = p.negadas.hipotecario;&#xD;&#xA;daysParam[8] = p.negadas.vehiculo;&#xD;&#xA;daysParam[9] = p.negadas.tdc;&#xD;&#xA;daysParam[10] = p.tramite.libranza;&#xD;&#xA;daysParam[11] = p.tramite.consumo;&#xD;&#xA;daysParam[12] = p.tramite.hipotecario;&#xD;&#xA;daysParam[13] = p.tramite.vehiculo;&#xD;&#xA;daysParam[14] = p.tramite.tdc;&#xD;&#xA;riskDTO.setParametrosDias(daysParam);&#xD;&#xA;&#xD;&#xA;double[] techosParam = new double[2];&#xD;&#xA;techosParam[0] = p.techoCliente;&#xD;&#xA;techosParam[1] = p.techoConyuge;&#xD;&#xA;riskDTO.setParametrosTechos(techosParam);&#xD;&#xA;&#xD;&#xA;//Execution of rules for Operaciones Aprobadas&#xD;&#xA;if(readValue0.aprobadas){&#xD;&#xA;&#x9;if(readValue0.aprobadas.LIBRANZA){&#xD;&#xA;&#x9;&#x9;for(int i = 0; i &lt; readValue0.aprobadas.LIBRANZA.size(); i++){&#xD;&#xA;&#x9;&#x9;&#x9;riskDTO.setDiasFormalizadaLibranza(readValue0.aprobadas.LIBRANZA[i].diasHastaHoy);&#xD;&#xA;&#x9;&#x9;&#x9;output.add(printRule(0));&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;}&#xD;&#xA;&#x9;if(readValue0.aprobadas.CONSUMO){&#xD;&#xA;&#x9;&#x9;for(int i = 0; i &lt; readValue0.aprobadas.CONSUMO.size(); i++){&#xD;&#xA;&#x9;&#x9;&#x9;riskDTO.setDiasFormalizadaConsumo(readValue0.aprobadas.CONSUMO[i].diasHastaHoy);&#xD;&#xA;&#x9;&#x9;&#x9;output.add(printRule(1));&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;}&#xD;&#xA;&#x9;if(readValue0.aprobadas.HIPOTECARIO){&#xD;&#xA;&#x9;&#x9;for(int i = 0; i &lt; readValue0.aprobadas.HIPOTECARIO.size(); i++){&#xD;&#xA;&#x9;&#x9;&#x9;riskDTO.setDiasFormalizadaHipotecario(readValue0.aprobadas.HIPOTECARIO[i].diasHastaHoy);&#xD;&#xA;&#x9;&#x9;&#x9;output.add(printRule(2));&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;}&#xD;&#xA;&#x9;if(readValue0.aprobadas.VEHICULO){&#xD;&#xA;&#x9;&#x9;for(int i = 0; i &lt; readValue0.aprobadas.VEHICULO.size(); i++){&#xD;&#xA;&#x9;&#x9;&#x9;riskDTO.setDiasFormalizadaVehiculo(readValue0.aprobadas.VEHICULO[i].diasHastaHoy);&#xD;&#xA;&#x9;&#x9;&#x9;output.add(printRule(3));&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;}&#xD;&#xA;&#x9;if(readValue0.aprobadas.TARJETA){&#xD;&#xA;&#x9;&#x9;for(int i = 0; i &lt; readValue0.aprobadas.TARJETA.size(); i++){&#xD;&#xA;&#x9;&#x9;&#x9;riskDTO.setDiasFormalizadaTarjeta(readValue0.aprobadas.TARJETA[i].diasHastaHoy);&#xD;&#xA;&#x9;&#x9;&#x9;output.add(printRule(4));&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;}&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;//Execution of rules for Operaciones Negadas&#xD;&#xA;if(readValue0.negadas){&#xD;&#xA;&#x9;if(readValue0.negadas.LIBRANZA){&#xD;&#xA;&#x9;&#x9;for(int i = 0; i &lt; readValue0.negadas.LIBRANZA.size(); i++){&#xD;&#xA;&#x9;&#x9;&#x9;riskDTO.setDiasNegadaLibranza(readValue0.negadas.LIBRANZA[i].diasHastaHoy);&#xD;&#xA;&#x9;&#x9;&#x9;output.add(printRule(5));&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;}&#xD;&#xA;&#x9;if(readValue0.negadas.CONSUMO){&#xD;&#xA;&#x9;&#x9;for(int i = 0; i &lt; readValue0.negadas.CONSUMO.size(); i++){&#xD;&#xA;&#x9;&#x9;&#x9;riskDTO.setDiasNegadaConsumo(readValue0.negadas.CONSUMO[i].diasHastaHoy);&#xD;&#xA;&#x9;&#x9;&#x9;output.add(printRule(6));&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;}&#xD;&#xA;&#x9;if(readValue0.negadas.HIPOTECARIO){&#xD;&#xA;&#x9;&#x9;for(int i = 0; i &lt; readValue0.negadas.HIPOTECARIO.size(); i++){&#xD;&#xA;&#x9;&#x9;&#x9;riskDTO.setDiasNegadaHipotecario(readValue0.negadas.HIPOTECARIO[i].diasHastaHoy);&#xD;&#xA;&#x9;&#x9;&#x9;output.add(printRule(7));&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;}&#xD;&#xA;&#x9;if(readValue0.negadas.VEHICULO){&#xD;&#xA;&#x9;&#x9;for(int i = 0; i &lt; readValue0.negadas.VEHICULO.size(); i++){&#xD;&#xA;&#x9;&#x9;&#x9;riskDTO.setDiasNegadaVehiculo(readValue0.negadas.VEHICULO[i].diasHastaHoy);&#xD;&#xA;&#x9;&#x9;&#x9;output.add(printRule(8));&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;}&#xD;&#xA;&#x9;if(readValue0.negadas.TARJETA){&#xD;&#xA;&#x9;&#x9;for(int i = 0; i &lt; readValue0.negadas.TARJETA.size(); i++){&#xD;&#xA;&#x9;&#x9;&#x9;riskDTO.setDiasNegadaTarjeta(readValue0.negadas.TARJETA[i].diasHastaHoy);&#xD;&#xA;&#x9;&#x9;&#x9;output.add(printRule(9));&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;}&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;//Execution of rules for Operaciones en tramite&#xD;&#xA;if(readValue0.proceso){&#xD;&#xA;&#x9;if(readValue0.proceso.LIBRANZA){&#xD;&#xA;&#x9;&#x9;for(int i = 0; i &lt; readValue0.proceso.LIBRANZA; i++){&#xD;&#xA;&#x9;&#x9;&#x9;riskDTO.setDiasTramiteLibranza(readValue0.proceso.LIBRANZA[i].diasHastaHoy);&#xD;&#xA;&#x9;&#x9;&#x9;output.add(printRule(10));&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;}&#xD;&#xA;&#x9;if(readValue0.proceso.CONSUMO){&#xD;&#xA;&#x9;&#x9;for(int i = 0; i &lt; readValue0.proceso.CONSUMO; i++){&#xD;&#xA;&#x9;&#x9;&#x9;riskDTO.setDiasTramiteConsumo(readValue0.proceso.CONSUMO[i].diasHastaHoy);&#xD;&#xA;&#x9;&#x9;&#x9;output.add(printRule(11));&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;}&#xD;&#xA;&#x9;if(readValue0.proceso.HIPOTECARIO){&#xD;&#xA;&#x9;&#x9;for(int i = 0; i &lt; readValue0.proceso.HIPOTECARIO; i++){&#xD;&#xA;&#x9;&#x9;&#x9;riskDTO.setDiasTramiteHipotecario(readValue0.proceso.HIPOTECARIO[i].diasHastaHoy);&#xD;&#xA;&#x9;&#x9;&#x9;output.add(printRule(12));&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;}&#xD;&#xA;&#x9;if(readValue0.proceso.VEHICULO){&#xD;&#xA;&#x9;&#x9;for(int i = 0; i &lt; readValue0.proceso.VEHICULO; i++){&#xD;&#xA;&#x9;&#x9;&#x9;riskDTO.setDiasTramiteVehiculo(readValue0.proceso.VEHICULO[i].diasHastaHoy);&#xD;&#xA;&#x9;&#x9;&#x9;output.add(printRule(13));&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;}&#xD;&#xA;&#x9;if(readValue0.proceso.TARJETA){&#xD;&#xA;&#x9;&#x9;for(int i = 0; i &lt; readValue0.proceso.TARJETA; i++){&#xD;&#xA;&#x9;&#x9;&#x9;riskDTO.setDiasTramiteTarjeta(readValue0.proceso.TARJETA[i].diasHastaHoy);&#xD;&#xA;&#x9;&#x9;&#x9;output.add(printRule(14));&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;}&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;//Configuration of output payload&#xD;&#xA;outPayload.reglas = output;&#xD;&#xA;String outPayloadStr = new ObjectMapper().writeValueAsString(outPayload);&#xD;&#xA;decisionCredito.getExecutions()[7].setOutputPayload(outPayloadStr);&#xD;&#xA; &#xD;&#xA;return decisionCredito;" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.lang.Object" returnTypeFixed="true">
                  <referencedElements xmi:type="parameter:Parameter" xmi:id="_3rq7Z5T4EeimyMrxtKzKVw" name="pOperations" typeClassname="java.lang.String"/>
                  <referencedElements xmi:type="process:BusinessObjectData" xmi:id="_CX8bwJ_MEeiV_aNwidcLeQ" name="decisionCredito" dataType="_TplNk46OEei8kvcpw0fSig" className="com.bbva.model.AutomaticProcessTask"/>
                  <referencedElements xmi:type="process:JavaObjectData" xmi:id="_CX8bwZ_MEeiV_aNwidcLeQ" name="riskDTO" dataType="_TplNkY6OEei8kvcpw0fSig" className="com.bbva.drools.dto.RiskProfilesDTO"/>
                </expression>
              </parameters>
            </configuration>
            <outputs xmi:type="expression:Operation" xmi:id="_3rq7apT4EeimyMrxtKzKVw">
              <leftOperand xmi:type="expression:Expression" xmi:id="_3rq7a5T4EeimyMrxtKzKVw" name="decisionCredito" content="decisionCredito" type="TYPE_VARIABLE" returnType="com.bbva.model.AutomaticProcessTask">
                <referencedElements xmi:type="process:BusinessObjectData" xmi:id="_CX9C2Z_MEeiV_aNwidcLeQ" name="decisionCredito" dataType="_TplNk46OEei8kvcpw0fSig" className="com.bbva.model.AutomaticProcessTask"/>
              </leftOperand>
              <rightOperand xmi:type="expression:Expression" xmi:id="_3rq7bZT4EeimyMrxtKzKVw" name="result" content="result" type="CONNECTOR_OUTPUT_TYPE" returnType="java.lang.Object">
                <referencedElements xmi:type="definition:Output" xmi:id="_3rq7bpT4EeimyMrxtKzKVw" name="result" type="java.lang.Object"/>
              </rightOperand>
              <operator xmi:type="expression:Operator" xmi:id="_3rq7b5T4EeimyMrxtKzKVw" type="ASSIGNMENT"/>
            </outputs>
          </connectors>
          <connectors xmi:type="process:Connector" xmi:id="_2t5YwI6bEeiCd4A7RChmhg" name="decisionSancion()" definitionId="scripting-groovy-script" event="ON_FINISH" definitionVersion="1.0.1">
            <configuration xmi:type="connectorconfiguration:ConnectorConfiguration" xmi:id="_2t5YwY6bEeiCd4A7RChmhg" definitionId="scripting-groovy-script" version="1.0.1" modelVersion="7.4.0-004">
              <parameters xmi:type="connectorconfiguration:ConnectorParameter" xmi:id="_2t5Ywo6bEeiCd4A7RChmhg" key="script">
                <expression xmi:type="expression:Expression" xmi:id="_2t5Yw46bEeiCd4A7RChmhg" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnTypeFixed="true"/>
              </parameters>
              <parameters xmi:type="connectorconfiguration:ConnectorParameter" xmi:id="_2t5YxI6bEeiCd4A7RChmhg" key="variables"/>
              <parameters xmi:type="connectorconfiguration:ConnectorParameter" xmi:id="_2t5YxY6bEeiCd4A7RChmhg" key="fakeScriptExpression">
                <expression xmi:type="expression:Expression" xmi:id="_2t5Yxo6bEeiCd4A7RChmhg" name="decisionSancion()" content="import com.fasterxml.jackson.databind.ObjectMapper&#xD;&#xA;import com.fasterxml.jackson.databind.DeserializationFeature;&#xD;&#xA;import java.util.logging.Level;&#xD;&#xA;import java.util.logging.Logger;&#xD;&#xA;import org.apache.commons.lang.StringUtils;&#xD;&#xA;import org.springframework.context.ApplicationContext;&#xD;&#xA;import org.springframework.context.support.ClassPathXmlApplicationContext;&#xD;&#xA; &#xD;&#xA;//Logger and mapper configuration&#xD;&#xA;Logger LOGGER = Logger.getLogger(&quot;InfoLogging&quot;);&#xD;&#xA;LOGGER.info(&quot;Logging an INFO-level message: Decition&quot;);&#xD;&#xA;ApplicationContext context = new ClassPathXmlApplicationContext(&quot;applicationContext.xml&quot;);&#xD;&#xA;ObjectMapper mapper = new ObjectMapper();&#xD;&#xA;mapper.configure(DeserializationFeature.ACCEPT_SINGLE_VALUE_AS_ARRAY, true);&#xD;&#xA;&#xD;&#xA;//Obtaining inputPayload from execution7 output (drools)&#xD;&#xA;String inputPayload7 = decisionCredito.getExecutions()[7].getOutputPayload();&#xD;&#xA;Map readValue7 = mapper.readValue(inputPayload7, Map.class);&#xD;&#xA;&#xD;&#xA;String sancionType = &quot;Automática&quot;;&#xD;&#xA;&#xD;&#xA;for(int i = 0; i &lt; readValue7.reglas.size(); i++){&#xD;&#xA;&#x9;if((readValue7.reglas[i].respuesta == false) &amp;&amp; sancionType){&#xD;&#xA;&#x9;&#x9;sancionType = &quot;Manual&quot;;&#xD;&#xA;&#x9;}&#xD;&#xA;}&#xD;&#xA; &#xD;&#xA;return sancionType;" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.lang.Object" returnTypeFixed="true">
                  <referencedElements xmi:type="process:BusinessObjectData" xmi:id="_CX8bxJ_MEeiV_aNwidcLeQ" name="decisionCredito" dataType="_TplNk46OEei8kvcpw0fSig" className="com.bbva.model.AutomaticProcessTask"/>
                </expression>
              </parameters>
            </configuration>
            <outputs xmi:type="expression:Operation" xmi:id="_2t5YyI6bEeiCd4A7RChmhg">
              <leftOperand xmi:type="expression:Expression" xmi:id="_2t5YyY6bEeiCd4A7RChmhg" name="sancionAuto" content="sancionAuto" type="TYPE_VARIABLE">
                <referencedElements xmi:type="process:Data" xmi:id="_CX9C3p_MEeiV_aNwidcLeQ" name="sancionAuto" dataType="_TplNkI6OEei8kvcpw0fSig"/>
              </leftOperand>
              <rightOperand xmi:type="expression:Expression" xmi:id="_2t5Yy46bEeiCd4A7RChmhg" name="result" content="result" type="CONNECTOR_OUTPUT_TYPE" returnType="java.lang.Object">
                <referencedElements xmi:type="definition:Output" xmi:id="_2t5YzI6bEeiCd4A7RChmhg" name="result" type="java.lang.Object"/>
              </rightOperand>
              <operator xmi:type="expression:Operator" xmi:id="_2t5YzY6bEeiCd4A7RChmhg" type="ASSIGNMENT"/>
            </outputs>
          </connectors>
          <connectors xmi:type="process:Connector" xmi:id="_paWcwJT2EeimyMrxtKzKVw" name="rulesPrp()" definitionId="scripting-groovy-script" event="ON_ENTER" definitionVersion="1.0.1">
            <configuration xmi:type="connectorconfiguration:ConnectorConfiguration" xmi:id="_paWcwZT2EeimyMrxtKzKVw" definitionId="scripting-groovy-script" version="1.0.1" modelVersion="7.4.0-004">
              <parameters xmi:type="connectorconfiguration:ConnectorParameter" xmi:id="_paWcwpT2EeimyMrxtKzKVw" key="script">
                <expression xmi:type="expression:Expression" xmi:id="_paWcw5T2EeimyMrxtKzKVw" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnTypeFixed="true"/>
              </parameters>
              <parameters xmi:type="connectorconfiguration:ConnectorParameter" xmi:id="_paWcxJT2EeimyMrxtKzKVw" key="variables"/>
              <parameters xmi:type="connectorconfiguration:ConnectorParameter" xmi:id="_paWcxZT2EeimyMrxtKzKVw" key="fakeScriptExpression">
                <expression xmi:type="expression:Expression" xmi:id="_paWcxpT2EeimyMrxtKzKVw" name="rulesPrp()" content="import com.fasterxml.jackson.databind.ObjectMapper&#xD;&#xA;import com.fasterxml.jackson.databind.DeserializationFeature;&#xD;&#xA;import java.util.logging.Level;&#xD;&#xA;import java.util.logging.Logger;&#xD;&#xA;import org.apache.commons.lang.StringUtils;&#xD;&#xA;import org.springframework.context.ApplicationContext;&#xD;&#xA;import org.springframework.context.support.ClassPathXmlApplicationContext;&#xD;&#xA;import org.kie.api.KieServices;&#xD;&#xA;import org.kie.api.runtime.KieContainer;&#xD;&#xA;import org.kie.api.runtime.KieSession;&#xD;&#xA;import com.bbva.drools.dto.PublicResponsabilityDTO;&#xD;&#xA;import com.bbva.drools.reglas.validacion.dto.reglas.ReglaNegocioDTO;&#xD;&#xA; &#xD;&#xA;//Logger and mapper configuration&#xD;&#xA;Logger LOGGER = Logger.getLogger(&quot;InfoLogging&quot;);&#xD;&#xA;LOGGER.info(&quot;Logging an INFO-level message: Rules execution PRP&quot;);&#xD;&#xA;ApplicationContext context = new ClassPathXmlApplicationContext(&quot;applicationContext.xml&quot;);&#xD;&#xA;ObjectMapper mapper = new ObjectMapper()&#xD;&#xA;mapper.configure(DeserializationFeature.ACCEPT_SINGLE_VALUE_AS_ARRAY, true);&#xD;&#xA;&#xD;&#xA;//Function to get rule, response and message for a particular rule&#xD;&#xA;public Map printRule(int numberRule){&#xD;&#xA;&#x9;Logger LOGGER1 = Logger.getLogger(&quot;Rule:&quot;);&#xD;&#xA;&#x9;try {&#xD;&#xA;&#x9;&#x9;KieServices ks = KieServices.Factory.get();&#xD;&#xA;&#x9;&#x9;KieContainer kContainer = ks.getKieClasspathContainer();&#xD;&#xA;&#x9;&#x9;KieSession kSession = kContainer.newKieSession(&quot;ksession-rules&quot;);&#xD;&#xA;&#x9;&#x9;prpDTO.setReglasNegocioDTO([]);&#xD;&#xA;&#x9;&#x9;kSession.insert(prpDTO);&#xD;&#xA;&#x9;&#x9;kSession.fireAllRules();&#xD;&#xA;&#x9;&#x9;ReglaNegocioDTO rule = prpDTO.getReglasNegocioDTO().get(numberRule);&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;//Map with rule, response and message for rule located in (numberRule)&#xD;&#xA;&#x9;&#x9;Map&lt;Object, Object> response = new LinkedHashMap&lt;Object, Object>();&#xD;&#xA;&#x9;&#x9;response.regla = rule.getRespuestaObtenida().getRegla();&#xD;&#xA;&#x9;&#x9;response.respuesta = rule.getRespuestaObtenida().isRespuesta();&#xD;&#xA;&#x9;&#x9;response.mensaje = rule.getRespuestaObtenida().getMensajeRespuesta();&#xD;&#xA;&#x9;&#x9;return response;&#xD;&#xA;&#x9;} catch (Exception e) {&#xD;&#xA;&#x9;&#x9;LOGGER1.info(&quot;Error: &quot; + e.message);&#xD;&#xA;&#x9;}&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;//Obtaining inputPayload from execution6 output (publicResponsability service)&#xD;&#xA;String inputPayload6 = decisionCredito.getExecutions()[6].getOutputPayload();&#xD;&#xA;Map readValue6 = mapper.readValue(inputPayload6, Map.class);&#xD;&#xA;&#xD;&#xA;//Obtaining inputPayload from execution7 output (Drools)&#xD;&#xA;String inputPayload7 = decisionCredito.getExecutions()[7].getOutputPayload();&#xD;&#xA;Map readValue7 = mapper.readValue(inputPayload7, Map.class);&#xD;&#xA;&#xD;&#xA;//Creating map and list for the output&#xD;&#xA;List&lt;Object> output = new ArrayList&lt;>();&#xD;&#xA;Map&lt;Object, Object> outPayload = new LinkedHashMap&lt;Object, Object>();&#xD;&#xA;output = readValue7.reglas;&#xD;&#xA;&#xD;&#xA;//Execution of rules for Public Responsability Person&#xD;&#xA;if(readValue6.prp){&#xD;&#xA;&#x9;prpDTO.setPrpStatus(readValue6.prp)&#xD;&#xA;&#x9;output.add(printRule(0));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;//Configuration of output payload&#xD;&#xA;outPayload.reglas = output;&#xD;&#xA;String outPayloadStr = new ObjectMapper().writeValueAsString(outPayload);&#xD;&#xA;decisionCredito.getExecutions()[7].setOutputPayload(outPayloadStr);&#xD;&#xA;&#xD;&#xA;return decisionCredito;" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.lang.Object" returnTypeFixed="true">
                  <referencedElements xmi:type="process:BusinessObjectData" xmi:id="_CX8bx5_MEeiV_aNwidcLeQ" name="decisionCredito" dataType="_TplNk46OEei8kvcpw0fSig" className="com.bbva.model.AutomaticProcessTask"/>
                  <referencedElements xmi:type="process:JavaObjectData" xmi:id="_CX8byJ_MEeiV_aNwidcLeQ" name="prpDTO" dataType="_TplNkY6OEei8kvcpw0fSig" className="com.bbva.drools.dto.PublicResponsabilityDTO"/>
                </expression>
              </parameters>
            </configuration>
            <outputs xmi:type="expression:Operation" xmi:id="_paWcyZT2EeimyMrxtKzKVw">
              <leftOperand xmi:type="expression:Expression" xmi:id="_paWcypT2EeimyMrxtKzKVw" name="decisionCredito" content="decisionCredito" type="TYPE_VARIABLE" returnType="com.bbva.model.AutomaticProcessTask">
                <referencedElements xmi:type="process:BusinessObjectData" xmi:id="_CX9C45_MEeiV_aNwidcLeQ" name="decisionCredito" dataType="_TplNk46OEei8kvcpw0fSig" className="com.bbva.model.AutomaticProcessTask"/>
              </leftOperand>
              <rightOperand xmi:type="expression:Expression" xmi:id="_paWczJT2EeimyMrxtKzKVw" name="result" content="result" type="CONNECTOR_OUTPUT_TYPE" returnType="java.lang.Object">
                <referencedElements xmi:type="definition:Output" xmi:id="_paWczZT2EeimyMrxtKzKVw" name="result" type="java.lang.Object"/>
              </rightOperand>
              <operator xmi:type="expression:Operator" xmi:id="_paWczpT2EeimyMrxtKzKVw" type="ASSIGNMENT"/>
            </outputs>
          </connectors>
          <connectors xmi:type="process:Connector" xmi:id="_laNBEJT2EeimyMrxtKzKVw" name="rulesTechos()" definitionId="scripting-groovy-script" event="ON_ENTER" definitionVersion="1.0.1">
            <configuration xmi:type="connectorconfiguration:ConnectorConfiguration" xmi:id="_laNBEZT2EeimyMrxtKzKVw" definitionId="scripting-groovy-script" version="1.0.1" modelVersion="7.4.0-004">
              <parameters xmi:type="connectorconfiguration:ConnectorParameter" xmi:id="_laNBEpT2EeimyMrxtKzKVw" key="script">
                <expression xmi:type="expression:Expression" xmi:id="_laNBE5T2EeimyMrxtKzKVw" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnTypeFixed="true"/>
              </parameters>
              <parameters xmi:type="connectorconfiguration:ConnectorParameter" xmi:id="_laNBFJT2EeimyMrxtKzKVw" key="variables"/>
              <parameters xmi:type="connectorconfiguration:ConnectorParameter" xmi:id="_laNBFZT2EeimyMrxtKzKVw" key="fakeScriptExpression">
                <expression xmi:type="expression:Expression" xmi:id="_laNBFpT2EeimyMrxtKzKVw" name="rulesTechos()" content="import com.fasterxml.jackson.databind.ObjectMapper&#xD;&#xA;import com.fasterxml.jackson.databind.DeserializationFeature;&#xD;&#xA;import java.util.logging.Level;&#xD;&#xA;import java.util.logging.Logger;&#xD;&#xA;import org.apache.commons.lang.StringUtils;&#xD;&#xA;import org.springframework.context.ApplicationContext;&#xD;&#xA;import org.springframework.context.support.ClassPathXmlApplicationContext;&#xD;&#xA;import org.kie.api.KieServices;&#xD;&#xA;import org.kie.api.runtime.KieContainer;&#xD;&#xA;import org.kie.api.runtime.KieSession;&#xD;&#xA;import com.bbva.drools.dto.RiskProfilesDTO;&#xD;&#xA;import com.bbva.drools.reglas.validacion.dto.reglas.ReglaNegocioDTO;&#xD;&#xA;&#xD;&#xA;//Logger and mapper configuration&#xD;&#xA;Logger LOGGER = Logger.getLogger(&quot;InfoLogging&quot;);&#xD;&#xA;LOGGER.info(&quot;Logging an INFO-level message: Rules execution Techos&quot;);&#xD;&#xA;ApplicationContext context = new ClassPathXmlApplicationContext(&quot;applicationContext.xml&quot;);&#xD;&#xA;ObjectMapper mapper = new ObjectMapper()&#xD;&#xA;mapper.configure(DeserializationFeature.ACCEPT_SINGLE_VALUE_AS_ARRAY, true);&#xD;&#xA;&#xD;&#xA;//Function to get rule, response and message for a particular rule&#xD;&#xA;public Map printRule(int numberRule){&#xD;&#xA;&#x9;Logger LOGGER1 = Logger.getLogger(&quot;Rule:&quot;);&#xD;&#xA;&#x9;try {&#xD;&#xA;&#x9;&#x9;KieServices ks = KieServices.Factory.get();&#xD;&#xA;&#x9;&#x9;KieContainer kContainer = ks.getKieClasspathContainer();&#xD;&#xA;&#x9;&#x9;KieSession kSession = kContainer.newKieSession(&quot;ksession-rules&quot;);&#xD;&#xA;&#x9;&#x9;riskDTO.setReglasNegocioDTO([]);&#xD;&#xA;&#x9;&#x9;kSession.insert(riskDTO);&#xD;&#xA;&#x9;&#x9;kSession.fireAllRules();&#xD;&#xA;&#x9;&#x9;ReglaNegocioDTO rule = riskDTO.getReglasNegocioDTO().get(numberRule);&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;//Map with rule, response and message for rule located in (numberRule)&#xD;&#xA;&#x9;&#x9;Map&lt;Object, Object> response = new LinkedHashMap&lt;Object, Object>();&#xD;&#xA;&#x9;&#x9;response.regla = rule.getRespuestaObtenida().getRegla();&#xD;&#xA;&#x9;&#x9;response.respuesta = rule.getRespuestaObtenida().isRespuesta();&#xD;&#xA;&#x9;&#x9;response.mensaje = rule.getRespuestaObtenida().getMensajeRespuesta();&#xD;&#xA;&#x9;&#x9;return response;&#xD;&#xA;&#x9;} catch (Exception e) {&#xD;&#xA;&#x9;&#x9;LOGGER1.info(&quot;Error: &quot; + e.message);&#xD;&#xA;&#x9;}&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;//Obtaining inputPayload from execution0 and execution1 output (riskProfiles service)&#xD;&#xA;String inputPayload0 = decisionCredito.getExecutions()[0].getOutputPayload();&#xD;&#xA;Map readValue0 = mapper.readValue(inputPayload0, Map.class);&#xD;&#xA;String inputPayload1 = decisionCredito.getExecutions()[1].getOutputPayload();&#xD;&#xA;Map readValue1 = mapper.readValue(inputPayload1, Map.class);&#xD;&#xA;&#xD;&#xA;//Obtaining inputPayload from execution7 output (Drools)&#xD;&#xA;String inputPayload7 = decisionCredito.getExecutions()[7].getOutputPayload();&#xD;&#xA;Map readValue7 = mapper.readValue(inputPayload7, Map.class);&#xD;&#xA;&#xD;&#xA;//Creating map and list for the output&#xD;&#xA;List&lt;Object> output = new ArrayList&lt;>();&#xD;&#xA;Map&lt;Object, Object> outPayload = new LinkedHashMap&lt;Object, Object>();&#xD;&#xA;output = readValue7.reglas;&#xD;&#xA;&#xD;&#xA;//Obtaining value of parameters for rules from Parametros&#xD;&#xA;Map p = mapper.readValue(pOperations,Map.class);&#xD;&#xA;&#xD;&#xA;int[] daysParam = new int[15];&#xD;&#xA;daysParam[0] = p.formalizadas.libranza;&#xD;&#xA;daysParam[1] = p.formalizadas.consumo;&#xD;&#xA;daysParam[2] = p.formalizadas.hipotecario;&#xD;&#xA;daysParam[3] = p.formalizadas.vehiculo;&#xD;&#xA;daysParam[4] = p.formalizadas.tdc;&#xD;&#xA;daysParam[5] = p.negadas.libranza;&#xD;&#xA;daysParam[6] = p.negadas.consumo;&#xD;&#xA;daysParam[7] = p.negadas.hipotecario;&#xD;&#xA;daysParam[8] = p.negadas.vehiculo;&#xD;&#xA;daysParam[9] = p.negadas.tdc;&#xD;&#xA;daysParam[10] = p.tramite.libranza;&#xD;&#xA;daysParam[11] = p.tramite.consumo;&#xD;&#xA;daysParam[12] = p.tramite.hipotecario;&#xD;&#xA;daysParam[13] = p.tramite.vehiculo;&#xD;&#xA;daysParam[14] = p.tramite.tdc;&#xD;&#xA;riskDTO.setParametrosDias(daysParam);&#xD;&#xA;&#xD;&#xA;double[] techosParam = new double[2];&#xD;&#xA;techosParam[0] = p.techoCliente;&#xD;&#xA;techosParam[1] = p.techoConyuge;&#xD;&#xA;riskDTO.setParametrosTechos(techosParam);&#xD;&#xA;&#xD;&#xA;if(readValue0.tech){&#xD;&#xA;&#x9;riskDTO.setTechoCliente(readValue0.techo);&#xD;&#xA;&#x9;output.add(printRule(15));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;if(readValue1.techo){&#xD;&#xA;&#x9;riskDTO.setTechoConyuge(readValue1.techo);&#xD;&#xA;&#x9;output.add(printRule(16));&#xD;&#xA;}&#xD;&#xA; &#xD;&#xA;//Configuration of output payload&#xD;&#xA;outPayload.reglas = output;&#xD;&#xA;String outPayloadStr = new ObjectMapper().writeValueAsString(outPayload);&#xD;&#xA;decisionCredito.getExecutions()[7].setOutputPayload(outPayloadStr);&#xD;&#xA;&#xD;&#xA;return decisionCredito;" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.lang.Object" returnTypeFixed="true">
                  <referencedElements xmi:type="parameter:Parameter" xmi:id="_laNBF5T2EeimyMrxtKzKVw" name="pOperations" typeClassname="java.lang.String"/>
                  <referencedElements xmi:type="process:BusinessObjectData" xmi:id="_CX8bzJ_MEeiV_aNwidcLeQ" name="decisionCredito" dataType="_TplNk46OEei8kvcpw0fSig" className="com.bbva.model.AutomaticProcessTask"/>
                  <referencedElements xmi:type="process:JavaObjectData" xmi:id="_CX8bzZ_MEeiV_aNwidcLeQ" name="riskDTO" dataType="_TplNkY6OEei8kvcpw0fSig" className="com.bbva.drools.dto.RiskProfilesDTO"/>
                </expression>
              </parameters>
            </configuration>
            <outputs xmi:type="expression:Operation" xmi:id="_laNBGpT2EeimyMrxtKzKVw">
              <leftOperand xmi:type="expression:Expression" xmi:id="_laNBG5T2EeimyMrxtKzKVw" name="decisionCredito" content="decisionCredito" type="TYPE_VARIABLE" returnType="com.bbva.model.AutomaticProcessTask">
                <referencedElements xmi:type="process:BusinessObjectData" xmi:id="_CX9C6J_MEeiV_aNwidcLeQ" name="decisionCredito" dataType="_TplNk46OEei8kvcpw0fSig" className="com.bbva.model.AutomaticProcessTask"/>
              </leftOperand>
              <rightOperand xmi:type="expression:Expression" xmi:id="_laNBHZT2EeimyMrxtKzKVw" name="result" content="result" type="CONNECTOR_OUTPUT_TYPE" returnType="java.lang.Object">
                <referencedElements xmi:type="definition:Output" xmi:id="_laNBHpT2EeimyMrxtKzKVw" name="result" type="java.lang.Object"/>
              </rightOperand>
              <operator xmi:type="expression:Operator" xmi:id="_laNBH5T2EeimyMrxtKzKVw" type="ASSIGNMENT"/>
            </outputs>
          </connectors>
          <connectors xmi:type="process:Connector" xmi:id="_jqfW8JT2EeimyMrxtKzKVw" name="rulesInforma()" definitionId="scripting-groovy-script" event="ON_ENTER" definitionVersion="1.0.1">
            <configuration xmi:type="connectorconfiguration:ConnectorConfiguration" xmi:id="_jqfW8ZT2EeimyMrxtKzKVw" definitionId="scripting-groovy-script" version="1.0.1" modelVersion="7.4.0-004">
              <parameters xmi:type="connectorconfiguration:ConnectorParameter" xmi:id="_jqfW8pT2EeimyMrxtKzKVw" key="script">
                <expression xmi:type="expression:Expression" xmi:id="_jqfW85T2EeimyMrxtKzKVw" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnTypeFixed="true"/>
              </parameters>
              <parameters xmi:type="connectorconfiguration:ConnectorParameter" xmi:id="_jqfW9JT2EeimyMrxtKzKVw" key="variables"/>
              <parameters xmi:type="connectorconfiguration:ConnectorParameter" xmi:id="_jqfW9ZT2EeimyMrxtKzKVw" key="fakeScriptExpression">
                <expression xmi:type="expression:Expression" xmi:id="_jqfW9pT2EeimyMrxtKzKVw" name="rulesInforma()" content="import com.fasterxml.jackson.databind.ObjectMapper&#xD;&#xA;import com.fasterxml.jackson.databind.DeserializationFeature;&#xD;&#xA;import java.util.logging.Level;&#xD;&#xA;import java.util.logging.Logger;&#xD;&#xA;import org.apache.commons.lang.StringUtils;&#xD;&#xA;import org.springframework.context.ApplicationContext;&#xD;&#xA;import org.springframework.context.support.ClassPathXmlApplicationContext;&#xD;&#xA;import org.kie.api.KieServices;&#xD;&#xA;import org.kie.api.runtime.KieContainer;&#xD;&#xA;import org.kie.api.runtime.KieSession;&#xD;&#xA;import com.bbva.drools.dto.ArrearsDTO;&#xD;&#xA;import com.bbva.drools.reglas.validacion.dto.reglas.ReglaNegocioDTO;&#xD;&#xA; &#xD;&#xA;//Logger and mapper configuration&#xD;&#xA;Logger LOGGER = Logger.getLogger(&quot;InfoLogging&quot;);&#xD;&#xA;LOGGER.info(&quot;Logging an INFO-level message: Rules execution Informa&quot;);&#xD;&#xA;ApplicationContext context = new ClassPathXmlApplicationContext(&quot;applicationContext.xml&quot;);&#xD;&#xA;ObjectMapper mapper = new ObjectMapper();&#xD;&#xA;mapper.configure(DeserializationFeature.ACCEPT_SINGLE_VALUE_AS_ARRAY, true);&#xD;&#xA;&#xD;&#xA;//Function to get rule, response and message for a particular rule&#xD;&#xA;public Map printRule(int numberRule){&#xD;&#xA;&#x9;Logger LOGGER1 = Logger.getLogger(&quot;Rule:&quot;);&#xD;&#xA;&#x9;try {&#xD;&#xA;&#x9;&#x9;KieServices ks = KieServices.Factory.get();&#xD;&#xA;&#x9;&#x9;KieContainer kContainer = ks.getKieClasspathContainer();&#xD;&#xA;&#x9;&#x9;KieSession kSession = kContainer.newKieSession(&quot;ksession-rules&quot;);&#xD;&#xA;&#x9;&#x9;commercialDTO.setReglasNegocioDTO([]);&#xD;&#xA;&#x9;&#x9;kSession.insert(commercialDTO);&#xD;&#xA;&#x9;&#x9;kSession.fireAllRules();&#xD;&#xA;&#x9;&#x9;ReglaNegocioDTO rule = commercialDTO.getReglasNegocioDTO().get(numberRule);&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;//Map with rule, response and message for rule located in (numberRule)&#xD;&#xA;&#x9;&#x9;Map&lt;Object, Object> response = new LinkedHashMap&lt;Object, Object>();&#xD;&#xA;&#x9;&#x9;response.regla = rule.getRespuestaObtenida().getRegla();&#xD;&#xA;&#x9;&#x9;response.respuesta = rule.getRespuestaObtenida().isRespuesta();&#xD;&#xA;&#x9;&#x9;response.mensaje = rule.getRespuestaObtenida().getMensajeRespuesta();&#xD;&#xA;&#x9;&#x9;return response;&#xD;&#xA;&#x9;} catch (Exception e) {&#xD;&#xA;&#x9;&#x9;LOGGER1.info(&quot;Error: &quot; + e.message);&#xD;&#xA;&#x9;}&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;//Obtaining inputPayload from execution3 output (commercialReport Nit1 service)&#xD;&#xA;String inputPayload3 = decisionCredito.getExecutions()[3].getOutputPayload();&#xD;&#xA;Map readValue3 = mapper.readValue(inputPayload3, Map.class);&#xD;&#xA;&#xD;&#xA;//Obtaining inputPayload from execution4 output (commercialReport Nit2 service)&#xD;&#xA;String inputPayload4 = decisionCredito.getExecutions()[4].getOutputPayload();&#xD;&#xA;Map readValue4 = mapper.readValue(inputPayload4, Map.class);&#xD;&#xA;&#xD;&#xA;//Obtaining inputPayload from execution5 output (commercialReport Nit3 service)&#xD;&#xA;String inputPayload5 = decisionCredito.getExecutions()[5].getOutputPayload();&#xD;&#xA;Map readValue5 = mapper.readValue(inputPayload5, Map.class);&#xD;&#xA;&#xD;&#xA;//Obtaining inputPayload from execution5 output (commercialReport Nit3 service)&#xD;&#xA;String inputPayload7 = decisionCredito.getExecutions()[7].getOutputPayload();&#xD;&#xA;Map readValue7 = mapper.readValue(inputPayload7, Map.class);&#xD;&#xA;&#xD;&#xA;//Creating map and list for the output&#xD;&#xA;List&lt;Object> output = new ArrayList&lt;>();&#xD;&#xA;Map&lt;Object, Object> outPayload = new LinkedHashMap&lt;Object, Object>();&#xD;&#xA;output = readValue7.reglas;&#xD;&#xA;&#x9;&#xD;&#xA;//Execution of rules for Informa&#xD;&#xA;if(readValue3.estado){&#xD;&#xA;&#x9;commercialDTO.setEstadoEmpresa1(readValue3.estado);&#xD;&#xA;&#x9;output.add(printRule(0));&#xD;&#xA;}&#xD;&#xA;if(readValue4.estado){&#xD;&#xA;&#x9;commercialDTO.setEstadoEmpresa2(readValue4.estado);&#xD;&#xA;&#x9;output.add(printRule(1));&#xD;&#xA;}&#xD;&#xA;if(readValue5.estado){&#xD;&#xA;&#x9;commercialDTO.setEstadoEmpresa3(readValue5.estado);&#xD;&#xA;&#x9;output.add(printRule(2));&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;//Configuration of output payload&#xD;&#xA;outPayload.reglas = output;&#xD;&#xA;String outPayloadStr = new ObjectMapper().writeValueAsString(outPayload);&#xD;&#xA;decisionCredito.getExecutions()[7].setOutputPayload(outPayloadStr);&#xD;&#xA;&#xD;&#xA;return decisionCredito;" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.lang.Object" returnTypeFixed="true">
                  <referencedElements xmi:type="process:BusinessObjectData" xmi:id="_CX8b0J_MEeiV_aNwidcLeQ" name="decisionCredito" dataType="_TplNk46OEei8kvcpw0fSig" className="com.bbva.model.AutomaticProcessTask"/>
                  <referencedElements xmi:type="process:JavaObjectData" xmi:id="_CX8b0Z_MEeiV_aNwidcLeQ" name="commercialDTO" dataType="_TplNkY6OEei8kvcpw0fSig" className="com.bbva.drools.dto.CommercialReportDTO"/>
                </expression>
              </parameters>
            </configuration>
            <outputs xmi:type="expression:Operation" xmi:id="_jqfW-ZT2EeimyMrxtKzKVw">
              <leftOperand xmi:type="expression:Expression" xmi:id="_jqfW-pT2EeimyMrxtKzKVw" name="decisionCredito" content="decisionCredito" type="TYPE_VARIABLE" returnType="com.bbva.model.AutomaticProcessTask">
                <referencedElements xmi:type="process:BusinessObjectData" xmi:id="_CX9C7Z_MEeiV_aNwidcLeQ" name="decisionCredito" dataType="_TplNk46OEei8kvcpw0fSig" className="com.bbva.model.AutomaticProcessTask"/>
              </leftOperand>
              <rightOperand xmi:type="expression:Expression" xmi:id="_jqfW_JT2EeimyMrxtKzKVw" name="result" content="result" type="CONNECTOR_OUTPUT_TYPE" returnType="java.lang.Object">
                <referencedElements xmi:type="definition:Output" xmi:id="_jqfW_ZT2EeimyMrxtKzKVw" name="result" type="java.lang.Object"/>
              </rightOperand>
              <operator xmi:type="expression:Operator" xmi:id="_jqfW_pT2EeimyMrxtKzKVw" type="ASSIGNMENT"/>
            </outputs>
          </connectors>
          <connectors xmi:type="process:Connector" xmi:id="_bb7dcJA9EeiFubttvGmCkQ" name="rulesEnd()" definitionId="scripting-groovy-script" event="ON_FINISH" definitionVersion="1.0.1">
            <configuration xmi:type="connectorconfiguration:ConnectorConfiguration" xmi:id="_bb7dcZA9EeiFubttvGmCkQ" definitionId="scripting-groovy-script" version="1.0.1" modelVersion="7.4.0-004">
              <parameters xmi:type="connectorconfiguration:ConnectorParameter" xmi:id="_bb7dcpA9EeiFubttvGmCkQ" key="script">
                <expression xmi:type="expression:Expression" xmi:id="_bb7dc5A9EeiFubttvGmCkQ" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnTypeFixed="true"/>
              </parameters>
              <parameters xmi:type="connectorconfiguration:ConnectorParameter" xmi:id="_bb7ddJA9EeiFubttvGmCkQ" key="variables"/>
              <parameters xmi:type="connectorconfiguration:ConnectorParameter" xmi:id="_bb7ddZA9EeiFubttvGmCkQ" key="fakeScriptExpression">
                <expression xmi:type="expression:Expression" xmi:id="_bb7ddpA9EeiFubttvGmCkQ" name="rulesEnd()" content="import com.bbva.cnmc.proxyaso.controller.ProxyASOController;&#xD;&#xA;import com.bbva.cnmc.proxyaso.dto.aso.AsoDTO;&#xD;&#xA;import com.bbva.cnmc.proxyaso.dto.aso.GrantingTicketDTO;&#xD;&#xA;import com.fasterxml.jackson.databind.ObjectMapper&#xD;&#xA;import com.fasterxml.jackson.databind.DeserializationFeature;&#xD;&#xA;import java.util.logging.Level;&#xD;&#xA;import java.util.logging.Logger;&#xD;&#xA;import javax.print.attribute.standard.MediaName;&#xD;&#xA;import org.apache.commons.lang.StringUtils;&#xD;&#xA;import org.springframework.context.ApplicationContext;&#xD;&#xA;import org.springframework.context.support.ClassPathXmlApplicationContext;&#xD;&#xA;import org.springframework.http.HttpEntity;&#xD;&#xA;import org.springframework.http.HttpHeaders;&#xD;&#xA;import org.springframework.http.HttpMethod;&#xD;&#xA;import org.springframework.http.MediaType;&#xD;&#xA;import org.springframework.http.ResponseEntity;&#xD;&#xA;import org.springframework.web.client.RestTemplate;&#xD;&#xA; &#xD;&#xA;//Logger and mapper configuration&#xD;&#xA;Logger LOGGER = Logger.getLogger(&quot;InfoLogging&quot;);&#xD;&#xA;LOGGER.info(&quot;Logging an INFO-level message: Finishing AutomaticProccessTask&quot;);&#xD;&#xA;ApplicationContext context = new ClassPathXmlApplicationContext(&quot;applicationContext.xml&quot;);&#xD;&#xA;ObjectMapper mapper = new ObjectMapper();&#xD;&#xA;mapper.configure(DeserializationFeature.ACCEPT_SINGLE_VALUE_AS_ARRAY, true);&#xD;&#xA;&#xD;&#xA;//Obtaining inputPayload from execution7 output (arrears service)&#xD;&#xA;String inputPayload7 = decisionCredito.getExecutions()[7].getOutputPayload();&#xD;&#xA;Map readValue7 = mapper.readValue(inputPayload7, Map.class);&#xD;&#xA;&#xD;&#xA;//Configuration of output payload&#xD;&#xA;Map&lt;Object, Object> outPayload = new LinkedHashMap&lt;Object, Object>();&#xD;&#xA;outPayload.reglas = readValue7.reglas;&#xD;&#xA;outPayload.sancion = sancionAuto;&#xD;&#xA;String outPayloadStr = new ObjectMapper().writeValueAsString(outPayload);&#xD;&#xA;&#xD;&#xA;//Setting Drools subprocess&#xD;&#xA;decisionCredito.getExecutions()[7].setOutputPayload(outPayloadStr);&#xD;&#xA;decisionCredito.getExecutions()[7].setDateEnd(new Date().getTime());&#xD;&#xA;decisionCredito.getExecutions()[7].setStatus(&quot;FINISHED&quot;);&#xD;&#xA; &#xD;&#xA;//Setting automaticProccessTask&#xD;&#xA;decisionCredito.setStatus(&quot;FINISHED&quot;);&#xD;&#xA;decisionCredito.setEndDate(new Date().getTime());&#xD;&#xA; &#xD;&#xA;return decisionCredito;" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.lang.Object" returnTypeFixed="true">
                  <referencedElements xmi:type="process:BusinessObjectData" xmi:id="_CX8b1J_MEeiV_aNwidcLeQ" name="decisionCredito" dataType="_TplNk46OEei8kvcpw0fSig" className="com.bbva.model.AutomaticProcessTask"/>
                  <referencedElements xmi:type="process:Data" xmi:id="_CX8b1Z_MEeiV_aNwidcLeQ" name="sancionAuto" dataType="_TplNkI6OEei8kvcpw0fSig"/>
                </expression>
              </parameters>
            </configuration>
            <outputs xmi:type="expression:Operation" xmi:id="_bb7deZA9EeiFubttvGmCkQ">
              <leftOperand xmi:type="expression:Expression" xmi:id="_bb7depA9EeiFubttvGmCkQ" name="decisionCredito" content="decisionCredito" type="TYPE_VARIABLE" returnType="com.bbva.model.AutomaticProcessTask">
                <referencedElements xmi:type="process:BusinessObjectData" xmi:id="_CX9C8p_MEeiV_aNwidcLeQ" name="decisionCredito" dataType="_TplNk46OEei8kvcpw0fSig" className="com.bbva.model.AutomaticProcessTask"/>
              </leftOperand>
              <rightOperand xmi:type="expression:Expression" xmi:id="_bb7dfJA9EeiFubttvGmCkQ" name="result" content="result" type="CONNECTOR_OUTPUT_TYPE" returnType="java.lang.Object">
                <referencedElements xmi:type="definition:Output" xmi:id="_bb7dfZA9EeiFubttvGmCkQ" name="result" type="java.lang.Object"/>
              </rightOperand>
              <operator xmi:type="expression:Operator" xmi:id="_bb7dfpA9EeiFubttvGmCkQ" type="ASSIGNMENT"/>
            </outputs>
          </connectors>
          <loopCondition xmi:type="expression:Expression" xmi:id="_Tpj_1Y6OEei8kvcpw0fSig" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
          <loopMaximum xmi:type="expression:Expression" xmi:id="_Tpj_1o6OEei8kvcpw0fSig" name="" content="" returnType="java.lang.Integer" returnTypeFixed="true"/>
          <cardinalityExpression xmi:type="expression:Expression" xmi:id="_Tpj_146OEei8kvcpw0fSig" name="" content="" returnType="java.lang.Integer" returnTypeFixed="true"/>
          <iteratorExpression xmi:type="expression:Expression" xmi:id="_Tpj_2I6OEei8kvcpw0fSig" name="multiInstanceIterator" content="multiInstanceIterator" type="MULTIINSTANCE_ITERATOR_TYPE" returnType="java.lang.Object" returnTypeFixed="true"/>
          <completionCondition xmi:type="expression:Expression" xmi:id="_Tpj_2Y6OEei8kvcpw0fSig" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
        </elements>
        <elements xmi:type="process:ServiceTask" xmi:id="_Tpj_2o6OEei8kvcpw0fSig" name="PRP" outgoing="_TplNU46OEei8kvcpw0fSig" incoming="_TplNUI6OEei8kvcpw0fSig">
          <viewPageFlowRedirectionURL xmi:type="expression:Expression" xmi:id="_Tpj_246OEei8kvcpw0fSig" name="" content="" returnTypeFixed="true"/>
          <dynamicLabel xmi:type="expression:Expression" xmi:id="_Tpj_3I6OEei8kvcpw0fSig" name="" content="" returnTypeFixed="true"/>
          <dynamicDescription xmi:type="expression:Expression" xmi:id="_Tpj_3Y6OEei8kvcpw0fSig" name="" content="" returnTypeFixed="true"/>
          <stepSummary xmi:type="expression:Expression" xmi:id="_Tpj_3o6OEei8kvcpw0fSig" name="" content="" returnTypeFixed="true"/>
          <connectors xmi:type="process:Connector" xmi:id="_8OPusJT4EeimyMrxtKzKVw" name="publicResponsability()" definitionId="scripting-groovy-script" event="ON_ENTER" definitionVersion="1.0.1">
            <configuration xmi:type="connectorconfiguration:ConnectorConfiguration" xmi:id="_8OPusZT4EeimyMrxtKzKVw" definitionId="scripting-groovy-script" version="1.0.1" modelVersion="7.4.0-004">
              <parameters xmi:type="connectorconfiguration:ConnectorParameter" xmi:id="_8OPuspT4EeimyMrxtKzKVw" key="script">
                <expression xmi:type="expression:Expression" xmi:id="_8OPus5T4EeimyMrxtKzKVw" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnTypeFixed="true"/>
              </parameters>
              <parameters xmi:type="connectorconfiguration:ConnectorParameter" xmi:id="_8OPutJT4EeimyMrxtKzKVw" key="variables"/>
              <parameters xmi:type="connectorconfiguration:ConnectorParameter" xmi:id="_8OPutZT4EeimyMrxtKzKVw" key="fakeScriptExpression">
                <expression xmi:type="expression:Expression" xmi:id="_8OPutpT4EeimyMrxtKzKVw" name="publicResponsability()" content="import com.bbva.cnmc.proxyaso.controller.ProxyASOController;&#xD;&#xA;import com.bbva.cnmc.proxyaso.dto.aso.AsoDTO;&#xD;&#xA;import com.bbva.cnmc.proxyaso.dto.aso.GrantingTicketDTO;&#xD;&#xA;import com.fasterxml.jackson.databind.ObjectMapper&#xD;&#xA;import com.fasterxml.jackson.databind.DeserializationFeature;&#xD;&#xA;import java.util.logging.Level;&#xD;&#xA;import java.util.logging.Logger;&#xD;&#xA;import javax.print.attribute.standard.MediaName;&#xD;&#xA;import org.apache.commons.lang.StringUtils;&#xD;&#xA;import org.springframework.context.ApplicationContext;&#xD;&#xA;import org.springframework.context.support.ClassPathXmlApplicationContext;&#xD;&#xA;import org.springframework.http.HttpEntity;&#xD;&#xA;import org.springframework.http.HttpHeaders;&#xD;&#xA;import org.springframework.http.HttpMethod;&#xD;&#xA;import org.springframework.http.MediaType;&#xD;&#xA;import org.springframework.http.ResponseEntity;&#xD;&#xA;import org.springframework.web.client.RestTemplate;&#xD;&#xA;&#xD;&#xA;//Function to complete always the 15 digits needed for the consumption of the service&#xD;&#xA;public String fillDocument(String documentNumber){&#xD;&#xA;&#x9;int l = documentNumber.length();&#xD;&#xA;&#x9;while(l &lt; 15){&#xD;&#xA;&#x9;&#x9;documentNumber = &quot;0&quot; + documentNumber;&#xD;&#xA;&#x9;&#x9;l = documentNumber.length();&#xD;&#xA;&#x9;}&#xD;&#xA;&#x9;return documentNumber;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;//Logger and mapper configuration&#xD;&#xA;Logger LOGGER = Logger.getLogger(&quot;InfoLogging&quot;);&#xD;&#xA;LOGGER.info(&quot;Logging an INFO-level message: PRP&quot;);&#xD;&#xA;ApplicationContext context = new ClassPathXmlApplicationContext(&quot;applicationContext.xml&quot;);&#xD;&#xA;ObjectMapper mapper = new ObjectMapper()&#xD;&#xA;mapper.configure(DeserializationFeature.ACCEPT_SINGLE_VALUE_AS_ARRAY, true);&#xD;&#xA;&#xD;&#xA;//ASO configuration&#xD;&#xA;AsoDTO asoDto = (AsoDTO) context.getBean(&quot;asoDto&quot;);&#xD;&#xA;asoDto.setGrantingTicketDTO(grantingTicketDTO);&#xD;&#xA;asoDto.setAsoBaseUrl(decisionCredito.getExecutions()[6].getEndpoint());&#xD;&#xA;asoDto.setAsoMediaType(MediaType.APPLICATION_JSON);&#xD;&#xA;&#xD;&#xA;//Creatin inputPayload for consumtion of POST service&#xD;&#xA;Map&lt;Object, Object> inputPayload = new LinkedHashMap&lt;Object, Object>();&#xD;&#xA;Map&lt;Object, Object> idPayload = new LinkedHashMap&lt;Object, Object>();&#xD;&#xA;Map idType = [:];&#xD;&#xA;&#xD;&#xA;idPayload.documentNumber = fillDocument(mapContrato.cliente.documentNumber);&#xD;&#xA;idType.id = &quot;1&quot;;&#xD;&#xA;idPayload.put(&quot;documentType&quot;,idType);&#xD;&#xA;inputPayload.identityDocument = idPayload;&#xD;&#xA;inputPayload.name = mapContrato.cliente.firstName;&#xD;&#xA;inputPayload.lastName = mapContrato.cliente.lastName;&#xD;&#xA;inputPayload.secondLastName = mapContrato.cliente.secondLastName;&#xD;&#xA;String inPayloadStr = new ObjectMapper().writeValueAsString(inputPayload);&#xD;&#xA;asoDto.setBody(inPayloadStr);&#xD;&#xA;&#xD;&#xA;//Obtaining input payload from publicResponsability service&#xD;&#xA;ProxyASOController controller = (ProxyASOController) context.getBean(&quot;proxyASOController&quot;);&#xD;&#xA;asoDto.setOperacionHttpServicio(HttpMethod.POST);&#xD;&#xA;String peticionHttp = controller.procesarPeticionPostHTTP(asoDto);&#xD;&#xA;Map readValue = mapper.readValue(peticionHttp, Map.class);&#xD;&#xA;&#xD;&#xA;//Creating output payload&#xD;&#xA;Map&lt;Object, Object> outPayload = new LinkedHashMap&lt;Object, Object>();&#xD;&#xA;outPayload.prp = readValue.data.personsExposed[1].id;&#xD;&#xA;String outPayloadStr = new ObjectMapper().writeValueAsString(outPayload);&#xD;&#xA;&#xD;&#xA;//Setting publicResponsability service&#xD;&#xA;decisionCredito.getExecutions()[6].setInputPayload(inPayloadStr);&#xD;&#xA;decisionCredito.getExecutions()[6].setOutputPayload(outPayloadStr);&#xD;&#xA;decisionCredito.getExecutions()[6].setDateEnd(new Date().getTime());&#xD;&#xA;decisionCredito.getExecutions()[6].setStatus(&quot;FINISHED&quot;);&#xD;&#xA;&#xD;&#xA;return decisionCredito;" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.lang.Object" returnTypeFixed="true">
                  <referencedElements xmi:type="process:JavaObjectData" xmi:id="_CX8b2J_MEeiV_aNwidcLeQ" name="grantingTicketDTO" dataType="_TplNkY6OEei8kvcpw0fSig" className="com.bbva.cnmc.proxyaso.dto.aso.GrantingTicketDTO"/>
                  <referencedElements xmi:type="process:BusinessObjectData" xmi:id="_CX8b2Z_MEeiV_aNwidcLeQ" name="decisionCredito" dataType="_TplNk46OEei8kvcpw0fSig" className="com.bbva.model.AutomaticProcessTask"/>
                  <referencedElements xmi:type="process:JavaObjectData" xmi:id="_CX8b2p_MEeiV_aNwidcLeQ" name="mapContrato" dataType="_TplNkY6OEei8kvcpw0fSig" className="java.util.Map"/>
                </expression>
              </parameters>
            </configuration>
            <outputs xmi:type="expression:Operation" xmi:id="_8OPuupT4EeimyMrxtKzKVw">
              <leftOperand xmi:type="expression:Expression" xmi:id="_8OPuu5T4EeimyMrxtKzKVw" name="decisionCredito" content="decisionCredito" type="TYPE_VARIABLE" returnType="com.bbva.model.AutomaticProcessTask">
                <referencedElements xmi:type="process:BusinessObjectData" xmi:id="_CX9C95_MEeiV_aNwidcLeQ" name="decisionCredito" dataType="_TplNk46OEei8kvcpw0fSig" className="com.bbva.model.AutomaticProcessTask"/>
              </leftOperand>
              <rightOperand xmi:type="expression:Expression" xmi:id="_8OPuvZT4EeimyMrxtKzKVw" name="result" content="result" type="CONNECTOR_OUTPUT_TYPE" returnType="java.lang.Object">
                <referencedElements xmi:type="definition:Output" xmi:id="_8OPuvpT4EeimyMrxtKzKVw" name="result" type="java.lang.Object"/>
              </rightOperand>
              <operator xmi:type="expression:Operator" xmi:id="_8OPuv5T4EeimyMrxtKzKVw" type="ASSIGNMENT"/>
            </outputs>
          </connectors>
          <loopCondition xmi:type="expression:Expression" xmi:id="_Tpj_746OEei8kvcpw0fSig" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
          <loopMaximum xmi:type="expression:Expression" xmi:id="_Tpj_8I6OEei8kvcpw0fSig" name="" content="" returnType="java.lang.Integer" returnTypeFixed="true"/>
          <cardinalityExpression xmi:type="expression:Expression" xmi:id="_Tpj_8Y6OEei8kvcpw0fSig" name="" content="" returnType="java.lang.Integer" returnTypeFixed="true"/>
          <iteratorExpression xmi:type="expression:Expression" xmi:id="_Tpj_8o6OEei8kvcpw0fSig" name="multiInstanceIterator" content="multiInstanceIterator" type="MULTIINSTANCE_ITERATOR_TYPE" returnType="java.lang.Object" returnTypeFixed="true"/>
          <completionCondition xmi:type="expression:Expression" xmi:id="_Tpj_846OEei8kvcpw0fSig" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
        </elements>
        <elements xmi:type="process:ServiceTask" xmi:id="_TpkmQI6OEei8kvcpw0fSig" name="Impagos" outgoing="_TpknOo6OEei8kvcpw0fSig" incoming="_TpknN46OEei8kvcpw0fSig">
          <viewPageFlowRedirectionURL xmi:type="expression:Expression" xmi:id="_TpkmQY6OEei8kvcpw0fSig" name="" content="" returnTypeFixed="true"/>
          <dynamicLabel xmi:type="expression:Expression" xmi:id="_TpkmQo6OEei8kvcpw0fSig" name="" content="" returnTypeFixed="true"/>
          <dynamicDescription xmi:type="expression:Expression" xmi:id="_TpkmQ46OEei8kvcpw0fSig" name="" content="" returnTypeFixed="true"/>
          <stepSummary xmi:type="expression:Expression" xmi:id="_TpkmRI6OEei8kvcpw0fSig" name="" content="" returnTypeFixed="true"/>
          <connectors xmi:type="process:Connector" xmi:id="_Hv3ScJGxEeiQ17D2G25TzQ" name="arrears()" definitionId="scripting-groovy-script" event="ON_ENTER" definitionVersion="1.0.1">
            <configuration xmi:type="connectorconfiguration:ConnectorConfiguration" xmi:id="_Hv3ScZGxEeiQ17D2G25TzQ" definitionId="scripting-groovy-script" version="1.0.1" modelVersion="7.4.0-004">
              <parameters xmi:type="connectorconfiguration:ConnectorParameter" xmi:id="_Hv3ScpGxEeiQ17D2G25TzQ" key="script">
                <expression xmi:type="expression:Expression" xmi:id="_Hv3Sc5GxEeiQ17D2G25TzQ" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnTypeFixed="true"/>
              </parameters>
              <parameters xmi:type="connectorconfiguration:ConnectorParameter" xmi:id="_Hv3SdJGxEeiQ17D2G25TzQ" key="variables"/>
              <parameters xmi:type="connectorconfiguration:ConnectorParameter" xmi:id="_Hv3SdZGxEeiQ17D2G25TzQ" key="fakeScriptExpression">
                <expression xmi:type="expression:Expression" xmi:id="_Hv3SdpGxEeiQ17D2G25TzQ" name="arrears()" content="import com.bbva.cnmc.proxyaso.controller.ProxyASOController;&#xD;&#xA;import com.bbva.cnmc.proxyaso.dto.aso.AsoDTO;&#xD;&#xA;import com.bbva.cnmc.proxyaso.dto.aso.GrantingTicketDTO;&#xD;&#xA;import com.fasterxml.jackson.databind.ObjectMapper&#xD;&#xA;import com.fasterxml.jackson.databind.DeserializationFeature;&#xD;&#xA;import java.util.logging.Level;&#xD;&#xA;import java.util.logging.Logger;&#xD;&#xA;import javax.print.attribute.standard.MediaName;&#xD;&#xA;import org.apache.commons.lang.StringUtils;&#xD;&#xA;import org.springframework.context.ApplicationContext;&#xD;&#xA;import org.springframework.context.support.ClassPathXmlApplicationContext;&#xD;&#xA;import org.springframework.http.HttpEntity;&#xD;&#xA;import org.springframework.http.HttpHeaders;&#xD;&#xA;import org.springframework.http.HttpMethod;&#xD;&#xA;import org.springframework.http.MediaType;&#xD;&#xA;import org.springframework.http.ResponseEntity;&#xD;&#xA;import org.springframework.web.client.RestTemplate;&#xD;&#xA;&#xD;&#xA;//Logger and mapper configuration&#xD;&#xA;Logger LOGGER = Logger.getLogger(&quot;InfoLogging&quot;);&#xD;&#xA;LOGGER.info(&quot;Logging an INFO-level message: Impagos&quot;);&#xD;&#xA;ApplicationContext context = new ClassPathXmlApplicationContext(&quot;applicationContext.xml&quot;);&#xD;&#xA;ObjectMapper mapper = new ObjectMapper()&#xD;&#xA;mapper.configure(DeserializationFeature.ACCEPT_SINGLE_VALUE_AS_ARRAY, true);&#xD;&#xA;&#xD;&#xA;//ASO configuration&#xD;&#xA;AsoDTO asoDto = (AsoDTO) context.getBean(&quot;asoDto&quot;);&#xD;&#xA;asoDto.setGrantingTicketDTO(grantingTicketDTO);&#xD;&#xA;asoDto.setAsoBaseUrl(decisionCredito.getExecutions()[2].getEndpoint());&#xD;&#xA;asoDto.setAsoMediaType(MediaType.APPLICATION_JSON);&#xD;&#xA;&#xD;&#xA;//Obtaining input payload from Arrears service&#xD;&#xA;ProxyASOController controller = (ProxyASOController) context.getBean(&quot;proxyASOController&quot;);&#xD;&#xA;asoDto.setOperacionHttpServicio(HttpMethod.GET);&#xD;&#xA;String peticionHttp = controller.procesarPeticionGetHTTP(asoDto);&#xD;&#xA;Map readValue = mapper.readValue(peticionHttp, Map.class);&#xD;&#xA;&#xD;&#xA;//Creating output payload&#xD;&#xA;Map&lt;Object, Object> outPayload = new LinkedHashMap&lt;Object, Object>();&#xD;&#xA;Map&lt;Object, Object> operation = new LinkedHashMap&lt;Object, Object>();&#xD;&#xA;List&lt;Object> opArray = new ArrayList&lt;>();&#xD;&#xA;//Map&lt;Object, Object> opArray = new LinkedHashMap&lt;Object, Object>();&#xD;&#xA;outPayload.sumValoresImpagos = 0.0;&#xD;&#xA;outPayload.maxDiasImpagos = 0;&#xD;&#xA;int unpaidDays = 0;&#xD;&#xA;&#xD;&#xA;if(readValue.data){&#xD;&#xA;&#x9;for(int i = 0; i &lt; readValue.data.size(); i++){&#xD;&#xA;&#x9;&#x9;outPayload.sumValoresImpagos = outPayload.sumValoresImpagos + readValue.data[i].currentTotalAmount.amount;&#xD;&#xA;&#x9;&#x9;unpaidDays = readValue.data[i].unpaidDays;&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;if(outPayload.maxDiasImpagos &lt; unpaidDays){&#xD;&#xA;&#x9;&#x9;&#x9;outPayload.maxDiasImpagos = unpaidDays;&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;operation.tipoParticipe = readValue.data[i].contract.participantType.name;&#xD;&#xA;&#x9;&#x9;operation.numeroContrato = readValue.data[i].contract.number;&#xD;&#xA;&#x9;&#x9;operation.tipoProducto = readValue.data[i].contract.productClassification.classification.firstLevel.name;&#xD;&#xA;&#x9;&#x9;operation.diasImpagos = readValue.data[i].unpaidDays;&#xD;&#xA;&#x9;&#x9;operation.valorImpago = readValue.data[i].currentTotalAmount;&#xD;&#xA;&#x9;&#x9;opArray.add(operation);&#xD;&#xA;&#x9;}&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;outPayload.operations = opArray;&#xD;&#xA;String outPayloadStr = new ObjectMapper().writeValueAsString(outPayload);&#xD;&#xA;&#xD;&#xA;//Setting Arrears service&#xD;&#xA;decisionCredito.getExecutions()[2].setOutputPayload(outPayloadStr);&#xD;&#xA;decisionCredito.getExecutions()[2].setDateEnd(new Date().getTime());&#xD;&#xA;decisionCredito.getExecutions()[2].setStatus(&quot;FINISHED&quot;);&#xD;&#xA;&#xD;&#xA;return decisionCredito;" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.lang.Object" returnTypeFixed="true">
                  <referencedElements xmi:type="process:JavaObjectData" xmi:id="_CX8b3Z_MEeiV_aNwidcLeQ" name="grantingTicketDTO" dataType="_TplNkY6OEei8kvcpw0fSig" className="com.bbva.cnmc.proxyaso.dto.aso.GrantingTicketDTO"/>
                  <referencedElements xmi:type="process:BusinessObjectData" xmi:id="_CX8b3p_MEeiV_aNwidcLeQ" name="decisionCredito" dataType="_TplNk46OEei8kvcpw0fSig" className="com.bbva.model.AutomaticProcessTask"/>
                </expression>
              </parameters>
            </configuration>
            <outputs xmi:type="expression:Operation" xmi:id="_Hv3SeZGxEeiQ17D2G25TzQ">
              <leftOperand xmi:type="expression:Expression" xmi:id="_Hv3SepGxEeiQ17D2G25TzQ" name="decisionCredito" content="decisionCredito" type="TYPE_VARIABLE" returnType="com.bbva.model.AutomaticProcessTask">
                <referencedElements xmi:type="process:BusinessObjectData" xmi:id="_CX9C_J_MEeiV_aNwidcLeQ" name="decisionCredito" dataType="_TplNk46OEei8kvcpw0fSig" className="com.bbva.model.AutomaticProcessTask"/>
              </leftOperand>
              <rightOperand xmi:type="expression:Expression" xmi:id="_Hv3SfJGxEeiQ17D2G25TzQ" name="result" content="result" type="CONNECTOR_OUTPUT_TYPE" returnType="java.lang.Object">
                <referencedElements xmi:type="definition:Output" xmi:id="_Hv3SfZGxEeiQ17D2G25TzQ" name="result" type="java.lang.Object"/>
              </rightOperand>
              <operator xmi:type="expression:Operator" xmi:id="_Hv3SfpGxEeiQ17D2G25TzQ" type="ASSIGNMENT"/>
            </outputs>
          </connectors>
          <loopCondition xmi:type="expression:Expression" xmi:id="_TpkmVI6OEei8kvcpw0fSig" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
          <loopMaximum xmi:type="expression:Expression" xmi:id="_TpkmVY6OEei8kvcpw0fSig" name="" content="" returnType="java.lang.Integer" returnTypeFixed="true"/>
          <cardinalityExpression xmi:type="expression:Expression" xmi:id="_TpkmVo6OEei8kvcpw0fSig" name="" content="" returnType="java.lang.Integer" returnTypeFixed="true"/>
          <iteratorExpression xmi:type="expression:Expression" xmi:id="_TpkmV46OEei8kvcpw0fSig" name="multiInstanceIterator" content="multiInstanceIterator" type="MULTIINSTANCE_ITERATOR_TYPE" returnType="java.lang.Object" returnTypeFixed="true"/>
          <completionCondition xmi:type="expression:Expression" xmi:id="_TpkmWI6OEei8kvcpw0fSig" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
        </elements>
        <elements xmi:type="process:ServiceTask" xmi:id="_TpkmWY6OEei8kvcpw0fSig" name="Informa" outgoing="_TplNUI6OEei8kvcpw0fSig" incoming="_TpknOo6OEei8kvcpw0fSig">
          <viewPageFlowRedirectionURL xmi:type="expression:Expression" xmi:id="_TpkmWo6OEei8kvcpw0fSig" name="" content="" returnTypeFixed="true"/>
          <dynamicLabel xmi:type="expression:Expression" xmi:id="_TpkmW46OEei8kvcpw0fSig" name="" content="" returnTypeFixed="true"/>
          <dynamicDescription xmi:type="expression:Expression" xmi:id="_TpkmXI6OEei8kvcpw0fSig" name="" content="" returnTypeFixed="true"/>
          <stepSummary xmi:type="expression:Expression" xmi:id="_TpkmXY6OEei8kvcpw0fSig" name="" content="" returnTypeFixed="true"/>
          <connectors xmi:type="process:Connector" xmi:id="_KxZw0JGxEeiQ17D2G25TzQ" name="consultaNit1()" definitionId="scripting-groovy-script" event="ON_ENTER" definitionVersion="1.0.1">
            <configuration xmi:type="connectorconfiguration:ConnectorConfiguration" xmi:id="_KxZw0ZGxEeiQ17D2G25TzQ" definitionId="scripting-groovy-script" version="1.0.1" modelVersion="7.4.0-004">
              <parameters xmi:type="connectorconfiguration:ConnectorParameter" xmi:id="_KxaX4JGxEeiQ17D2G25TzQ" key="script">
                <expression xmi:type="expression:Expression" xmi:id="_KxaX4ZGxEeiQ17D2G25TzQ" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnTypeFixed="true"/>
              </parameters>
              <parameters xmi:type="connectorconfiguration:ConnectorParameter" xmi:id="_KxaX4pGxEeiQ17D2G25TzQ" key="variables"/>
              <parameters xmi:type="connectorconfiguration:ConnectorParameter" xmi:id="_KxaX45GxEeiQ17D2G25TzQ" key="fakeScriptExpression">
                <expression xmi:type="expression:Expression" xmi:id="_KxaX5JGxEeiQ17D2G25TzQ" name="consultaNit1()" content="import com.bbva.cnmc.proxyaso.controller.ProxyASOController;&#xD;&#xA;import com.bbva.cnmc.proxyaso.dto.aso.AsoDTO;&#xD;&#xA;import com.bbva.cnmc.proxyaso.dto.aso.GrantingTicketDTO;&#xD;&#xA;import com.fasterxml.jackson.databind.ObjectMapper;&#xD;&#xA;import com.fasterxml.jackson.databind.DeserializationFeature;&#xD;&#xA;import java.util.logging.Level;&#xD;&#xA;import java.util.logging.Logger;&#xD;&#xA;import javax.print.attribute.standard.MediaName;&#xD;&#xA;import org.apache.commons.lang.StringUtils;&#xD;&#xA;import org.springframework.context.ApplicationContext;&#xD;&#xA;import org.springframework.context.support.ClassPathXmlApplicationContext;&#xD;&#xA;import org.springframework.http.HttpEntity;&#xD;&#xA;import org.springframework.http.HttpHeaders;&#xD;&#xA;import org.springframework.http.HttpMethod;&#xD;&#xA;import org.springframework.http.MediaType;&#xD;&#xA;import org.springframework.http.ResponseEntity;&#xD;&#xA;import org.springframework.web.client.RestTemplate;&#xD;&#xA;&#xD;&#xA;//Logger and mapper configuration&#xD;&#xA;Logger LOGGER = Logger.getLogger(&quot;InfoLogging&quot;);&#xD;&#xA;LOGGER.info(&quot;Logging an INFO-level message: Consulta NIT1&quot;);&#xD;&#xA;ApplicationContext context = new ClassPathXmlApplicationContext(&quot;applicationContext.xml&quot;);&#xD;&#xA;ObjectMapper mapper = new ObjectMapper()&#xD;&#xA;mapper.configure(DeserializationFeature.ACCEPT_SINGLE_VALUE_AS_ARRAY, true);&#xD;&#xA;&#xD;&#xA;//ASO configuration&#xD;&#xA;AsoDTO asoDto = (AsoDTO) context.getBean(&quot;asoDto&quot;);&#xD;&#xA;asoDto.setGrantingTicketDTO(grantingTicketDTO);&#xD;&#xA;asoDto.setAsoBaseUrl(decisionCredito.getExecutions()[3].getEndpoint());&#xD;&#xA;asoDto.setAsoMediaType(MediaType.APPLICATION_JSON);&#xD;&#xA;&#xD;&#xA;//Obtaining input payload from Informa service&#xD;&#xA;ProxyASOController controller = (ProxyASOController) context.getBean(&quot;proxyASOController&quot;);&#xD;&#xA;asoDto.setOperacionHttpServicio(HttpMethod.GET);&#xD;&#xA;String peticionHttp = controller.procesarPeticionGetHTTP(asoDto);&#xD;&#xA;Map readValue = mapper.readValue(peticionHttp, Map.class);&#xD;&#xA;&#xD;&#xA;//Creating output payload&#xD;&#xA;Map&lt;Object, Object> outPayload = new LinkedHashMap&lt;Object, Object>();&#xD;&#xA;&#xD;&#xA;//Get state value&#xD;&#xA;if(readValue.data){&#xD;&#xA;&#x9;outPayload.nit = &quot;NIT1&quot;;&#xD;&#xA;&#x9;outPayload.nombreEmpresa = readValue.data[0].legalName;&#xD;&#xA;&#x9;outPayload.estado = readValue.data[0].formation.state.name;&#xD;&#xA;&#x9;outPayload.fechaRenovacion = readValue.data[0].formation.state.date;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;String outPayloadStr = new ObjectMapper().writeValueAsString(outPayload);&#xD;&#xA;&#xD;&#xA;//Setting Informa(Nit 1) service&#xD;&#xA;decisionCredito.getExecutions()[3].setOutputPayload(outPayloadStr);&#xD;&#xA;decisionCredito.getExecutions()[3].setDateEnd(new Date().getTime());&#xD;&#xA;decisionCredito.getExecutions()[3].setStatus(&quot;FINISHED&quot;);&#xD;&#xA;&#xD;&#xA;return decisionCredito;" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.lang.Object" returnTypeFixed="true">
                  <referencedElements xmi:type="process:JavaObjectData" xmi:id="_CX8b4Z_MEeiV_aNwidcLeQ" name="grantingTicketDTO" dataType="_TplNkY6OEei8kvcpw0fSig" className="com.bbva.cnmc.proxyaso.dto.aso.GrantingTicketDTO"/>
                  <referencedElements xmi:type="process:BusinessObjectData" xmi:id="_CX8b4p_MEeiV_aNwidcLeQ" name="decisionCredito" dataType="_TplNk46OEei8kvcpw0fSig" className="com.bbva.model.AutomaticProcessTask"/>
                </expression>
              </parameters>
            </configuration>
            <outputs xmi:type="expression:Operation" xmi:id="_KxaX55GxEeiQ17D2G25TzQ">
              <leftOperand xmi:type="expression:Expression" xmi:id="_KxaX6JGxEeiQ17D2G25TzQ" name="decisionCredito" content="decisionCredito" type="TYPE_VARIABLE" returnType="com.bbva.model.AutomaticProcessTask">
                <referencedElements xmi:type="process:BusinessObjectData" xmi:id="_CX9DAZ_MEeiV_aNwidcLeQ" name="decisionCredito" dataType="_TplNk46OEei8kvcpw0fSig" className="com.bbva.model.AutomaticProcessTask"/>
              </leftOperand>
              <rightOperand xmi:type="expression:Expression" xmi:id="_KxaX6pGxEeiQ17D2G25TzQ" name="result" content="result" type="CONNECTOR_OUTPUT_TYPE" returnType="java.lang.Object">
                <referencedElements xmi:type="definition:Output" xmi:id="_KxaX65GxEeiQ17D2G25TzQ" name="result" type="java.lang.Object"/>
              </rightOperand>
              <operator xmi:type="expression:Operator" xmi:id="_KxaX7JGxEeiQ17D2G25TzQ" type="ASSIGNMENT"/>
            </outputs>
          </connectors>
          <connectors xmi:type="process:Connector" xmi:id="_TpkmbY6OEei8kvcpw0fSig" name="consultaNit2()" definitionId="scripting-groovy-script" event="ON_ENTER" definitionVersion="1.0.1">
            <configuration xmi:type="connectorconfiguration:ConnectorConfiguration" xmi:id="_Tpkmbo6OEei8kvcpw0fSig" definitionId="scripting-groovy-script" version="1.0.1" modelVersion="7.4.0-004">
              <parameters xmi:type="connectorconfiguration:ConnectorParameter" xmi:id="_Tpkmb46OEei8kvcpw0fSig" key="script">
                <expression xmi:type="expression:Expression" xmi:id="_TpkmcI6OEei8kvcpw0fSig" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnTypeFixed="true"/>
              </parameters>
              <parameters xmi:type="connectorconfiguration:ConnectorParameter" xmi:id="_TpkmcY6OEei8kvcpw0fSig" key="variables"/>
              <parameters xmi:type="connectorconfiguration:ConnectorParameter" xmi:id="_Tpkmco6OEei8kvcpw0fSig" key="fakeScriptExpression">
                <expression xmi:type="expression:Expression" xmi:id="_Tpkmc46OEei8kvcpw0fSig" name="consultaNit2()" content="import com.bbva.cnmc.proxyaso.controller.ProxyASOController;&#xD;&#xA;import com.bbva.cnmc.proxyaso.dto.aso.AsoDTO;&#xD;&#xA;import com.bbva.cnmc.proxyaso.dto.aso.GrantingTicketDTO;&#xD;&#xA;import com.fasterxml.jackson.databind.ObjectMapper;&#xD;&#xA;import com.fasterxml.jackson.databind.DeserializationFeature;&#xD;&#xA;import java.util.logging.Level;&#xD;&#xA;import java.util.logging.Logger;&#xD;&#xA;import javax.print.attribute.standard.MediaName;&#xD;&#xA;import org.apache.commons.lang.StringUtils;&#xD;&#xA;import org.springframework.context.ApplicationContext;&#xD;&#xA;import org.springframework.context.support.ClassPathXmlApplicationContext;&#xD;&#xA;import org.springframework.http.HttpEntity;&#xD;&#xA;import org.springframework.http.HttpHeaders;&#xD;&#xA;import org.springframework.http.HttpMethod;&#xD;&#xA;import org.springframework.http.MediaType;&#xD;&#xA;import org.springframework.http.ResponseEntity;&#xD;&#xA;import org.springframework.web.client.RestTemplate;&#xD;&#xA;&#xD;&#xA;//Logger and mapper configuration&#xD;&#xA;Logger LOGGER = Logger.getLogger(&quot;InfoLogging&quot;);&#xD;&#xA;LOGGER.info(&quot;Logging an INFO-level message: Consulta NIT2&quot;);&#xD;&#xA;ApplicationContext context = new ClassPathXmlApplicationContext(&quot;applicationContext.xml&quot;);&#xD;&#xA;ObjectMapper mapper = new ObjectMapper()&#xD;&#xA;mapper.configure(DeserializationFeature.ACCEPT_SINGLE_VALUE_AS_ARRAY, true);&#xD;&#xA;&#xD;&#xA;//ASO configuration&#xD;&#xA;AsoDTO asoDto = (AsoDTO) context.getBean(&quot;asoDto&quot;);&#xD;&#xA;asoDto.setGrantingTicketDTO(grantingTicketDTO);&#xD;&#xA;asoDto.setAsoBaseUrl(decisionCredito.getExecutions()[4].getEndpoint());&#xD;&#xA;asoDto.setAsoMediaType(MediaType.APPLICATION_JSON);&#xD;&#xA;&#xD;&#xA;//Obtaining input payload from Informa service&#xD;&#xA;ProxyASOController controller = (ProxyASOController) context.getBean(&quot;proxyASOController&quot;);&#xD;&#xA;asoDto.setOperacionHttpServicio(HttpMethod.GET);&#xD;&#xA;String peticionHttp = controller.procesarPeticionGetHTTP(asoDto);&#xD;&#xA;Map readValue = mapper.readValue(peticionHttp, Map.class);&#xD;&#xA;&#xD;&#xA;//Creating output payload&#xD;&#xA;Map&lt;Object, Object> outPayload = new LinkedHashMap&lt;Object, Object>();&#xD;&#xA;&#xD;&#xA;//Get state value&#xD;&#xA;if(readValue.data){&#xD;&#xA;&#x9;outPayload.nit = &quot;NIT2&quot;;&#xD;&#xA;&#x9;outPayload.nombreEmpresa = readValue.data[0].legalName;&#xD;&#xA;&#x9;outPayload.estado = readValue.data[0].formation.state.name;&#xD;&#xA;&#x9;outPayload.fechaRenovacion = readValue.data[0].formation.state.date;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;String outPayloadStr = new ObjectMapper().writeValueAsString(outPayload);&#xD;&#xA;&#xD;&#xA;//Setting Informa(Nit 2) service&#xD;&#xA;decisionCredito.getExecutions()[4].setOutputPayload(outPayloadStr);&#xD;&#xA;decisionCredito.getExecutions()[4].setDateEnd(new Date().getTime());&#xD;&#xA;decisionCredito.getExecutions()[4].setStatus(&quot;FINISHED&quot;);&#xD;&#xA;&#xD;&#xA;return decisionCredito;" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.lang.Object" returnTypeFixed="true">
                  <referencedElements xmi:type="process:JavaObjectData" xmi:id="_CX8b5Z_MEeiV_aNwidcLeQ" name="grantingTicketDTO" dataType="_TplNkY6OEei8kvcpw0fSig" className="com.bbva.cnmc.proxyaso.dto.aso.GrantingTicketDTO"/>
                  <referencedElements xmi:type="process:BusinessObjectData" xmi:id="_CX8b5p_MEeiV_aNwidcLeQ" name="decisionCredito" dataType="_TplNk46OEei8kvcpw0fSig" className="com.bbva.model.AutomaticProcessTask"/>
                </expression>
              </parameters>
            </configuration>
            <outputs xmi:type="expression:Operation" xmi:id="_Tpkmdo6OEei8kvcpw0fSig">
              <leftOperand xmi:type="expression:Expression" xmi:id="_Tpkmd46OEei8kvcpw0fSig" name="decisionCredito" content="decisionCredito" type="TYPE_VARIABLE" returnType="com.bbva.model.AutomaticProcessTask">
                <referencedElements xmi:type="process:BusinessObjectData" xmi:id="_CX9DBp_MEeiV_aNwidcLeQ" name="decisionCredito" dataType="_TplNk46OEei8kvcpw0fSig" className="com.bbva.model.AutomaticProcessTask"/>
              </leftOperand>
              <rightOperand xmi:type="expression:Expression" xmi:id="_TpkmeY6OEei8kvcpw0fSig" name="result" content="result" type="CONNECTOR_OUTPUT_TYPE" returnType="java.lang.Object">
                <referencedElements xmi:type="definition:Output" xmi:id="_Tpkmeo6OEei8kvcpw0fSig" name="result" type="java.lang.Object"/>
              </rightOperand>
              <operator xmi:type="expression:Operator" xmi:id="_Tpkme46OEei8kvcpw0fSig" type="ASSIGNMENT"/>
            </outputs>
          </connectors>
          <connectors xmi:type="process:Connector" xmi:id="_TpkmfI6OEei8kvcpw0fSig" name="consultaNit3()" definitionId="scripting-groovy-script" event="ON_ENTER" definitionVersion="1.0.1">
            <configuration xmi:type="connectorconfiguration:ConnectorConfiguration" xmi:id="_TpkmfY6OEei8kvcpw0fSig" definitionId="scripting-groovy-script" version="1.0.1" modelVersion="7.4.0-004">
              <parameters xmi:type="connectorconfiguration:ConnectorParameter" xmi:id="_Tpkmfo6OEei8kvcpw0fSig" key="script">
                <expression xmi:type="expression:Expression" xmi:id="_Tpkmf46OEei8kvcpw0fSig" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnTypeFixed="true"/>
              </parameters>
              <parameters xmi:type="connectorconfiguration:ConnectorParameter" xmi:id="_TpkmgI6OEei8kvcpw0fSig" key="variables"/>
              <parameters xmi:type="connectorconfiguration:ConnectorParameter" xmi:id="_TpkmgY6OEei8kvcpw0fSig" key="fakeScriptExpression">
                <expression xmi:type="expression:Expression" xmi:id="_Tpkmgo6OEei8kvcpw0fSig" name="consultaNit3()" content="import com.bbva.cnmc.proxyaso.controller.ProxyASOController;&#xD;&#xA;import com.bbva.cnmc.proxyaso.dto.aso.AsoDTO;&#xD;&#xA;import com.bbva.cnmc.proxyaso.dto.aso.GrantingTicketDTO;&#xD;&#xA;import com.fasterxml.jackson.databind.ObjectMapper;&#xD;&#xA;import com.fasterxml.jackson.databind.DeserializationFeature;&#xD;&#xA;import java.util.logging.Level;&#xD;&#xA;import java.util.logging.Logger;&#xD;&#xA;import javax.print.attribute.standard.MediaName;&#xD;&#xA;import org.apache.commons.lang.StringUtils;&#xD;&#xA;import org.springframework.context.ApplicationContext;&#xD;&#xA;import org.springframework.context.support.ClassPathXmlApplicationContext;&#xD;&#xA;import org.springframework.http.HttpEntity;&#xD;&#xA;import org.springframework.http.HttpHeaders;&#xD;&#xA;import org.springframework.http.HttpMethod;&#xD;&#xA;import org.springframework.http.MediaType;&#xD;&#xA;import org.springframework.http.ResponseEntity;&#xD;&#xA;import org.springframework.web.client.RestTemplate;&#xD;&#xA;&#xD;&#xA;//Logger and mapper configuration&#xD;&#xA;Logger LOGGER = Logger.getLogger(&quot;InfoLogging&quot;);&#xD;&#xA;LOGGER.info(&quot;Logging an INFO-level message: Consulta NIT3&quot;);&#xD;&#xA;ApplicationContext context = new ClassPathXmlApplicationContext(&quot;applicationContext.xml&quot;);&#xD;&#xA;ObjectMapper mapper = new ObjectMapper()&#xD;&#xA;mapper.configure(DeserializationFeature.ACCEPT_SINGLE_VALUE_AS_ARRAY, true);&#xD;&#xA;&#xD;&#xA;//ASO configuration&#xD;&#xA;AsoDTO asoDto = (AsoDTO) context.getBean(&quot;asoDto&quot;);&#xD;&#xA;asoDto.setGrantingTicketDTO(grantingTicketDTO);&#xD;&#xA;asoDto.setAsoBaseUrl(decisionCredito.getExecutions()[5].getEndpoint());&#xD;&#xA;asoDto.setAsoMediaType(MediaType.APPLICATION_JSON);&#xD;&#xA;&#xD;&#xA;//Obtaining input payload from Informa service&#xD;&#xA;ProxyASOController controller = (ProxyASOController) context.getBean(&quot;proxyASOController&quot;);&#xD;&#xA;asoDto.setOperacionHttpServicio(HttpMethod.GET);&#xD;&#xA;String peticionHttp = controller.procesarPeticionGetHTTP(asoDto);&#xD;&#xA;Map readValue = mapper.readValue(peticionHttp, Map.class);&#xD;&#xA;&#xD;&#xA;//Creating output payload&#xD;&#xA;Map&lt;Object, Object> outPayload = new LinkedHashMap&lt;Object, Object>();&#xD;&#xA;&#xD;&#xA;//Get state value&#xD;&#xA;if(readValue.data){&#xD;&#xA;&#x9;outPayload.nit = &quot;NIT3&quot;;&#xD;&#xA;&#x9;outPayload.nombreEmpresa = readValue.data[0].legalName;&#xD;&#xA;&#x9;outPayload.estado = readValue.data[0].formation.state.name;&#xD;&#xA;&#x9;outPayload.fechaRenovacion = readValue.data[0].formation.state.date;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;String outPayloadStr = new ObjectMapper().writeValueAsString(outPayload);&#xD;&#xA;&#xD;&#xA;//Setting Informa(Nit 3) service&#xD;&#xA;decisionCredito.getExecutions()[5].setOutputPayload(outPayloadStr);&#xD;&#xA;decisionCredito.getExecutions()[5].setDateEnd(new Date().getTime());&#xD;&#xA;decisionCredito.getExecutions()[5].setStatus(&quot;FINISHED&quot;);&#xD;&#xA;&#xD;&#xA;return decisionCredito;" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.lang.Object" returnTypeFixed="true">
                  <referencedElements xmi:type="process:JavaObjectData" xmi:id="_CX8b6Z_MEeiV_aNwidcLeQ" name="grantingTicketDTO" dataType="_TplNkY6OEei8kvcpw0fSig" className="com.bbva.cnmc.proxyaso.dto.aso.GrantingTicketDTO"/>
                  <referencedElements xmi:type="process:BusinessObjectData" xmi:id="_CX8b6p_MEeiV_aNwidcLeQ" name="decisionCredito" dataType="_TplNk46OEei8kvcpw0fSig" className="com.bbva.model.AutomaticProcessTask"/>
                </expression>
              </parameters>
            </configuration>
            <outputs xmi:type="expression:Operation" xmi:id="_TpkmhY6OEei8kvcpw0fSig">
              <leftOperand xmi:type="expression:Expression" xmi:id="_Tpkmho6OEei8kvcpw0fSig" name="decisionCredito" content="decisionCredito" type="TYPE_VARIABLE" returnType="com.bbva.model.AutomaticProcessTask">
                <referencedElements xmi:type="process:BusinessObjectData" xmi:id="_CX9DC5_MEeiV_aNwidcLeQ" name="decisionCredito" dataType="_TplNk46OEei8kvcpw0fSig" className="com.bbva.model.AutomaticProcessTask"/>
              </leftOperand>
              <rightOperand xmi:type="expression:Expression" xmi:id="_TpkmiI6OEei8kvcpw0fSig" name="result" content="result" type="CONNECTOR_OUTPUT_TYPE" returnType="java.lang.Object">
                <referencedElements xmi:type="definition:Output" xmi:id="_TpkmiY6OEei8kvcpw0fSig" name="result" type="java.lang.Object"/>
              </rightOperand>
              <operator xmi:type="expression:Operator" xmi:id="_Tpkmio6OEei8kvcpw0fSig" type="ASSIGNMENT"/>
            </outputs>
          </connectors>
          <loopCondition xmi:type="expression:Expression" xmi:id="_Tpkmi46OEei8kvcpw0fSig" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
          <loopMaximum xmi:type="expression:Expression" xmi:id="_TpkmjI6OEei8kvcpw0fSig" name="" content="" returnType="java.lang.Integer" returnTypeFixed="true"/>
          <cardinalityExpression xmi:type="expression:Expression" xmi:id="_TpkmjY6OEei8kvcpw0fSig" name="" content="" returnType="java.lang.Integer" returnTypeFixed="true"/>
          <iteratorExpression xmi:type="expression:Expression" xmi:id="_Tpkmjo6OEei8kvcpw0fSig" name="multiInstanceIterator" content="multiInstanceIterator" type="MULTIINSTANCE_ITERATOR_TYPE" returnType="java.lang.Object" returnTypeFixed="true"/>
          <completionCondition xmi:type="expression:Expression" xmi:id="_Tpkmj46OEei8kvcpw0fSig" name="" content="" returnType="java.lang.Boolean" returnTypeFixed="true"/>
        </elements>
      </elements>
      <mandatorySymbol xmi:type="expression:Expression" xmi:id="_Tpkmyo6OEei8kvcpw0fSig" name="" content="" returnTypeFixed="true"/>
      <mandatoryLabel xmi:type="expression:Expression" xmi:id="_Tpkmy46OEei8kvcpw0fSig" name="" content="" returnTypeFixed="true"/>
      <data xmi:type="process:BusinessObjectData" xmi:id="_TpkmzI6OEei8kvcpw0fSig" name="decisionCredito" dataType="_TplNk46OEei8kvcpw0fSig" className="com.bbva.model.AutomaticProcessTask">
        <defaultValue xmi:type="expression:Expression" xmi:id="_TpkmzY6OEei8kvcpw0fSig" name="init()" content="import javax.print.attribute.AttributeSetUtilities;&#xD;&#xA;import org.bonitasoft.engine.bpm.flownode.ActivityInstance;&#xD;&#xA;import com.bbva.cnmc.proxyaso.dto.aso.AsoDTO;&#xD;&#xA;import com.bbva.model.AutomaticProcessExecution;&#xD;&#xA;import com.bbva.model.AutomaticProcessTask;&#xD;&#xA;&#xD;&#xA;AutomaticProcessTask rootTask = new AutomaticProcessTask();&#xD;&#xA;rootTask.setStartDate(new Date().getTime());&#xD;&#xA;rootTask.setStatus(&quot;READY&quot;);&#xD;&#xA;rootTask.setFlowName(apiAccessor.getProcessAPI().getProcessInstance(processInstanceId).getName());&#xD;&#xA;rootTask.setUserName(contrato.userName);&#xD;&#xA;ActivityInstance tarea = apiAccessor.getProcessAPI().getActivityInstance(Long.parseLong(contrato.taskId));&#xD;&#xA;rootTask.setTask(tarea.getDisplayName());&#xD;&#xA;rootTask.setTaskId(tarea.getId());&#xD;&#xA;rootTask.setProcess(apiAccessor.getProcessAPI().getProcessInstance(tarea.getRootContainerId()).getName());&#xD;&#xA;rootTask.setProcessId(tarea.getRootContainerId());&#xD;&#xA;&#xD;&#xA;List executions = new ArrayList&lt;AutomaticProcessExecution>();&#xD;&#xA;&#xD;&#xA;//Execution of service riskProfiles (Cliente)&#xD;&#xA;AutomaticProcessExecution a0 = new AutomaticProcessExecution();&#xD;&#xA;a0.setAutomaticProcessIdentifier(rootProcessInstanceId);&#xD;&#xA;a0.setAutomaticProcessName(apiAccessor.getProcessAPI().getProcessInstance(processInstanceId).getName());&#xD;&#xA;a0.setDescription(&quot;Risk Profiles Client&quot;);&#xD;&#xA;a0.setStatus(&quot;READY&quot;);&#xD;&#xA;a0.setEndpoint(urlRisk + &quot;/cliente&quot;);&#xD;&#xA;//a0.setEndpoint(urlRisk + &quot;?documentTypeId=&quot; + contrato.cliente.documentType + &quot;&amp;documentNumber=&quot; + contrato.cliente.documentNumber);&#xD;&#xA;a0.setDateStart(new Date().getTime());&#xD;&#xA;a0.setOperation(&quot;GET&quot;);&#xD;&#xA;executions.add(a0);&#xD;&#xA;&#xD;&#xA;//Execution of service riskProfiles (Conyuge)&#xD;&#xA;AutomaticProcessExecution a1 = new AutomaticProcessExecution();&#xD;&#xA;a1.setAutomaticProcessIdentifier(rootProcessInstanceId);&#xD;&#xA;a1.setAutomaticProcessName(apiAccessor.getProcessAPI().getProcessInstance(processInstanceId).getName());&#xD;&#xA;a1.setDescription(&quot;Risk Profiles Spouse&quot;);&#xD;&#xA;a1.setStatus(&quot;READY&quot;);&#xD;&#xA;a1.setEndpoint(urlRisk + &quot;/conyuge&quot;);&#xD;&#xA;//a1.setEndpoint(urlRisk + &quot;?documentTypeId=&quot; + contrato.conyuge.documentType + &quot;&amp;documentNumber=&quot; + contrato.conyuge.documentNumber);&#xD;&#xA;a1.setDateStart(new Date().getTime());&#xD;&#xA;a1.setOperation(&quot;GET&quot;);&#xD;&#xA;executions.add(a1);&#xD;&#xA;&#xD;&#xA;//Execution of service arrears&#xD;&#xA;AutomaticProcessExecution a2 = new AutomaticProcessExecution();&#xD;&#xA;a2.setAutomaticProcessIdentifier(rootProcessInstanceId);&#xD;&#xA;a2.setAutomaticProcessName(apiAccessor.getProcessAPI().getProcessInstance(processInstanceId).getName());&#xD;&#xA;a2.setDescription(&quot;Arrears&quot;);&#xD;&#xA;a2.setStatus(&quot;READY&quot;);&#xD;&#xA;a2.setEndpoint(urlImpagos);&#xD;&#xA;a2.setDateStart(new Date().getTime());&#xD;&#xA;a2.setOperation(&quot;GET&quot;);&#xD;&#xA;executions.add(a2);&#xD;&#xA;&#xD;&#xA;//Execution of service commercialReports (NIT 1)&#xD;&#xA;AutomaticProcessExecution a3 = new AutomaticProcessExecution();&#xD;&#xA;a3.setAutomaticProcessIdentifier(rootProcessInstanceId);&#xD;&#xA;a3.setAutomaticProcessName(apiAccessor.getProcessAPI().getProcessInstance(processInstanceId).getName());&#xD;&#xA;a3.setDescription(&quot;Commercial Report NIT1&quot;);&#xD;&#xA;a3.setStatus(&quot;READY&quot;);&#xD;&#xA;a3.setEndpoint(urlInforma + &quot;/nit1&quot;);&#xD;&#xA;a3.setDateStart(new Date().getTime());&#xD;&#xA;a3.setOperation(&quot;GET&quot;);&#xD;&#xA;executions.add(a3);&#xD;&#xA;&#xD;&#xA;//Execution of service commercialReports (NIT 2)&#xD;&#xA;AutomaticProcessExecution a4 = new AutomaticProcessExecution();&#xD;&#xA;a4.setAutomaticProcessIdentifier(rootProcessInstanceId);&#xD;&#xA;a4.setAutomaticProcessName(apiAccessor.getProcessAPI().getProcessInstance(processInstanceId).getName());&#xD;&#xA;a4.setDescription(&quot;Commercial Report NIT2&quot;);&#xD;&#xA;a4.setStatus(&quot;READY&quot;);&#xD;&#xA;a4.setEndpoint(urlInforma + &quot;/nit2&quot;);&#xD;&#xA;a4.setDateStart(new Date().getTime());&#xD;&#xA;a4.setOperation(&quot;GET&quot;);&#xD;&#xA;executions.add(a4);&#xD;&#xA;&#xD;&#xA;//Execution of service commercialReports (NIT 3)&#xD;&#xA;AutomaticProcessExecution a5 = new AutomaticProcessExecution();&#xD;&#xA;a5.setAutomaticProcessIdentifier(rootProcessInstanceId);&#xD;&#xA;a5.setAutomaticProcessName(apiAccessor.getProcessAPI().getProcessInstance(processInstanceId).getName());&#xD;&#xA;a5.setDescription(&quot;Commercial Report NIT3&quot;);&#xD;&#xA;a5.setStatus(&quot;READY&quot;);&#xD;&#xA;a5.setEndpoint(urlInforma + &quot;/nit3&quot;);&#xD;&#xA;a5.setDateStart(new Date().getTime());&#xD;&#xA;a5.setOperation(&quot;GET&quot;);&#xD;&#xA;executions.add(a5);&#xD;&#xA;&#xD;&#xA;//Execution of service publicResponsability&#xD;&#xA;AutomaticProcessExecution a6 = new AutomaticProcessExecution();&#xD;&#xA;a6.setAutomaticProcessIdentifier(rootProcessInstanceId);&#xD;&#xA;a6.setAutomaticProcessName(apiAccessor.getProcessAPI().getProcessInstance(processInstanceId).getName());&#xD;&#xA;a6.setDescription(&quot;Public Responsability&quot;);&#xD;&#xA;a6.setStatus(&quot;READY&quot;);&#xD;&#xA;a6.setEndpoint(urlPrp);&#xD;&#xA;a6.setDateStart(new Date().getTime());&#xD;&#xA;a6.setOperation(&quot;POST&quot;);&#xD;&#xA;executions.add(a6);&#xD;&#xA;&#xD;&#xA;//Execution of drools rules&#xD;&#xA;AutomaticProcessExecution a7 = new AutomaticProcessExecution();&#xD;&#xA;a7.setAutomaticProcessIdentifier(rootProcessInstanceId);&#xD;&#xA;a7.setAutomaticProcessName(apiAccessor.getProcessAPI().getProcessInstance(processInstanceId).getName());&#xD;&#xA;a7.setDescription(&quot;Drools&quot;);&#xD;&#xA;a7.setStatus(&quot;READY&quot;);&#xD;&#xA;a7.setEndpoint(&quot;N/A&quot;);&#xD;&#xA;a7.setDateStart(new Date().getTime());&#xD;&#xA;a7.setOperation(&quot;N/A&quot;);&#xD;&#xA;executions.add(a7);&#xD;&#xA;&#xD;&#xA;rootTask.setExecutions(executions);&#xD;&#xA;&#xD;&#xA;return rootTask;" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="com.bbva.model.AutomaticProcessTask">
          <referencedElements xmi:type="parameter:Parameter" xmi:id="_Tpkmzo6OEei8kvcpw0fSig" name="urlPrp" typeClassname="java.lang.String"/>
          <referencedElements xmi:type="expression:Expression" xmi:id="_Tpkmz46OEei8kvcpw0fSig" name="processInstanceId" content="processInstanceId" type="TYPE_ENGINE_CONSTANT" returnType="java.lang.Long"/>
          <referencedElements xmi:type="expression:Expression" xmi:id="_Tpkm0I6OEei8kvcpw0fSig" name="apiAccessor" content="apiAccessor" type="TYPE_ENGINE_CONSTANT" returnType="com.bonitasoft.engine.api.APIAccessor"/>
          <referencedElements xmi:type="parameter:Parameter" xmi:id="_Tpkm0Y6OEei8kvcpw0fSig" name="urlRisk" typeClassname="java.lang.String"/>
          <referencedElements xmi:type="expression:Expression" xmi:id="_Tpkm6o6OEei8kvcpw0fSig" name="rootProcessInstanceId" content="rootProcessInstanceId" type="TYPE_ENGINE_CONSTANT" returnType="java.lang.Long"/>
          <referencedElements xmi:type="parameter:Parameter" xmi:id="_Tpkm646OEei8kvcpw0fSig" name="urlImpagos" typeClassname="java.lang.String"/>
          <referencedElements xmi:type="parameter:Parameter" xmi:id="_Tpkm7I6OEei8kvcpw0fSig" name="urlInforma" typeClassname="java.lang.String"/>
          <referencedElements xmi:type="process:ContractInput" xmi:id="_CX9CyJ_MEeiV_aNwidcLeQ" name="contrato" type="COMPLEX">
            <mapping xmi:type="process:ContractInputMapping" xmi:id="_CX9p0J_MEeiV_aNwidcLeQ"/>
          </referencedElements>
        </defaultValue>
      </data>
      <data xmi:type="process:JavaObjectData" xmi:id="_Tpkm7Y6OEei8kvcpw0fSig" name="grantingTicketDTO" dataType="_TplNkY6OEei8kvcpw0fSig" className="com.bbva.cnmc.proxyaso.dto.aso.GrantingTicketDTO">
        <defaultValue xmi:type="expression:Expression" xmi:id="_hAp08I62EeiCd4A7RChmhg" name="init_grantingTicketDTO()" content="import org.springframework.asm.Context;&#xD;&#xA;import org.springframework.context.ApplicationContext&#xD;&#xA;import org.springframework.context.support.ClassPathXmlApplicationContext&#xD;&#xA;import org.springframework.http.HttpMethod;&#xD;&#xA;import org.springframework.http.MediaType;&#xD;&#xA;import com.bbva.cnmc.proxyaso.dto.aso.GrantingTicketDTO;&#xD;&#xA;&#xD;&#xA;ApplicationContext context = new ClassPathXmlApplicationContext(&quot;applicationContext.xml&quot;);&#xD;&#xA;&#xD;&#xA;GrantingTicketDTO grantingTicketDTO = (GrantingTicketDTO) context.getBean(&quot;grantingTicketDTO&quot;);&#xD;&#xA;grantingTicketDTO.setUrlGrantingTicketService(urlGrantingTicket);&#xD;&#xA;grantingTicketDTO.setConsumerID(consumerID);&#xD;&#xA;grantingTicketDTO.setAuthenticationType(authenticationType);&#xD;&#xA;grantingTicketDTO.setAuthenticationData(authenticationData);&#xD;&#xA;grantingTicketDTO.setIvUser(ivUser);&#xD;&#xA;grantingTicketDTO.setIvTicket(ivTicket);&#xD;&#xA;grantingTicketDTO.setOperacionHttpServicioGrantingTicket(HttpMethod.POST);&#xD;&#xA;grantingTicketDTO.setGrantingTicketMediaType(MediaType.APPLICATION_JSON);&#xD;&#xA;&#xD;&#xA;return grantingTicketDTO;" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="com.bbva.cnmc.proxyaso.dto.aso.GrantingTicketDTO">
          <referencedElements xmi:type="parameter:Parameter" xmi:id="_hAp08Y62EeiCd4A7RChmhg" name="authenticationData" typeClassname="java.lang.String"/>
          <referencedElements xmi:type="parameter:Parameter" xmi:id="_hAp08o62EeiCd4A7RChmhg" name="ivTicket" typeClassname="java.lang.String"/>
          <referencedElements xmi:type="parameter:Parameter" xmi:id="_hAp08462EeiCd4A7RChmhg" name="consumerID" typeClassname="java.lang.String"/>
          <referencedElements xmi:type="parameter:Parameter" xmi:id="_hAp09I62EeiCd4A7RChmhg" name="authenticationType" typeClassname="java.lang.String"/>
          <referencedElements xmi:type="parameter:Parameter" xmi:id="_hAp09Y62EeiCd4A7RChmhg" name="ivUser" typeClassname="java.lang.String"/>
        </defaultValue>
      </data>
      <data xmi:type="process:JavaObjectData" xmi:id="_Tpkm9Y6OEei8kvcpw0fSig" name="riskDTO" dataType="_TplNkY6OEei8kvcpw0fSig" className="com.bbva.drools.dto.RiskProfilesDTO">
        <defaultValue xmi:type="expression:Expression" xmi:id="_Tpkm9o6OEei8kvcpw0fSig" name="init_riskDTO()" content="import com.bbva.drools.dto.RiskProfilesDTO;&#xD;&#xA;&#xD;&#xA;RiskProfilesDTO riskDTO = new RiskProfilesDTO();&#xD;&#xA;&#xD;&#xA;return riskDTO;" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="com.bbva.drools.dto.RiskProfilesDTO"/>
      </data>
      <data xmi:type="process:JavaObjectData" xmi:id="_Tpkm946OEei8kvcpw0fSig" name="arrearDTO" dataType="_TplNkY6OEei8kvcpw0fSig" className="com.bbva.drools.dto.ArrearsDTO">
        <defaultValue xmi:type="expression:Expression" xmi:id="_Tpkm-I6OEei8kvcpw0fSig" name="init_arrearDTO()" content="import com.bbva.drools.dto.ArrearsDTO;&#xD;&#xA;&#xD;&#xA;ArrearsDTO arrearDTO = new ArrearsDTO();&#xD;&#xA;&#xD;&#xA;return arrearDTO;" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="com.bbva.drools.dto.ArrearsDTO"/>
      </data>
      <data xmi:type="process:JavaObjectData" xmi:id="_Tpkm-Y6OEei8kvcpw0fSig" name="commercialDTO" dataType="_TplNkY6OEei8kvcpw0fSig" className="com.bbva.drools.dto.CommercialReportDTO">
        <defaultValue xmi:type="expression:Expression" xmi:id="_Tpkm-o6OEei8kvcpw0fSig" name="init_commercialDTO()" content="import com.bbva.drools.dto.CommercialReportDTO;&#xD;&#xA;&#xD;&#xA;CommercialReportDTO commercialDTO = new CommercialReportDTO();&#xD;&#xA;&#xD;&#xA;return commercialDTO;" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="com.bbva.drools.dto.CommercialReportDTO"/>
      </data>
      <data xmi:type="process:JavaObjectData" xmi:id="_Tpkm-46OEei8kvcpw0fSig" name="prpDTO" dataType="_TplNkY6OEei8kvcpw0fSig" className="com.bbva.drools.dto.PublicResponsabilityDTO">
        <defaultValue xmi:type="expression:Expression" xmi:id="_Tpkm_I6OEei8kvcpw0fSig" name="init_prpDTO()" content="import com.bbva.drools.dto.PublicResponsabilityDTO;&#xD;&#xA;&#xD;&#xA;PublicResponsabilityDTO prpDTO = new PublicResponsabilityDTO();&#xD;&#xA;&#xD;&#xA;return prpDTO;" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="com.bbva.drools.dto.PublicResponsabilityDTO"/>
      </data>
      <data xmi:type="process:Data" xmi:id="_Tpkm_Y6OEei8kvcpw0fSig" name="sancionAuto" dataType="_TplNkI6OEei8kvcpw0fSig">
        <defaultValue xmi:type="expression:Expression" xmi:id="_2W1osJTzEeimyMrxtKzKVw" name="" content=""/>
      </data>
      <data xmi:type="process:JavaObjectData" xmi:id="_Tpkm_46OEei8kvcpw0fSig" name="mapContrato" dataType="_TplNkY6OEei8kvcpw0fSig" className="java.util.Map">
        <defaultValue xmi:type="expression:Expression" xmi:id="_TpknAI6OEei8kvcpw0fSig" name="init_mapContrato()" content="return contrato;" interpreter="GROOVY" type="TYPE_READ_ONLY_SCRIPT" returnType="java.util.Map">
          <referencedElements xmi:type="process:ContractInput" xmi:id="_CX8b9p_MEeiV_aNwidcLeQ" name="contrato" type="COMPLEX">
            <mapping xmi:type="process:ContractInputMapping" xmi:id="_CX9p0Z_MEeiV_aNwidcLeQ"/>
          </referencedElements>
        </defaultValue>
      </data>
      <entryRedirectionURL xmi:type="expression:Expression" xmi:id="_TpknGY6OEei8kvcpw0fSig" name="" content="" returnTypeFixed="true"/>
      <confirmationMessage xmi:type="expression:Expression" xmi:id="_TpknGo6OEei8kvcpw0fSig" name="" content="" returnTypeFixed="true"/>
      <formMapping xmi:type="process:FormMapping" xmi:id="_TpknG46OEei8kvcpw0fSig">
        <targetForm xmi:type="expression:Expression" xmi:id="_wGcdUJBAEeiNZ7jJpWh7Pw" name="" content="" type="FORM_REFERENCE_TYPE" returnTypeFixed="true"/>
      </formMapping>
      <recapPageFlowRedirectionURL xmi:type="expression:Expression" xmi:id="_TpknHY6OEei8kvcpw0fSig" name="" content="" returnTypeFixed="true"/>
      <overviewFormMapping xmi:type="process:FormMapping" xmi:id="_TpknHo6OEei8kvcpw0fSig">
        <targetForm xmi:type="expression:Expression" xmi:id="_TpknH46OEei8kvcpw0fSig" name="" content="" type="FORM_REFERENCE_TYPE" returnTypeFixed="true"/>
      </overviewFormMapping>
      <viewPageFlowRedirectionURL xmi:type="expression:Expression" xmi:id="_TpknII6OEei8kvcpw0fSig" name="" content="" returnTypeFixed="true"/>
      <connections xmi:type="process:SequenceFlow" xmi:id="_TpknMY6OEei8kvcpw0fSig" target="_Tpj_OI6OEei8kvcpw0fSig" source="_Tpj_M46OEei8kvcpw0fSig">
        <decisionTable xmi:type="decision:DecisionTable" xmi:id="_TpknMo6OEei8kvcpw0fSig"/>
        <condition xmi:type="expression:Expression" xmi:id="_TpknM46OEei8kvcpw0fSig" name="" content="" type="TYPE_CONDITION" returnType="java.lang.Boolean" returnTypeFixed="true"/>
      </connections>
      <connections xmi:type="process:SequenceFlow" xmi:id="_TpknN46OEei8kvcpw0fSig" target="_TpkmQI6OEei8kvcpw0fSig" source="_Tpj_OI6OEei8kvcpw0fSig">
        <decisionTable xmi:type="decision:DecisionTable" xmi:id="_TpknOI6OEei8kvcpw0fSig"/>
        <condition xmi:type="expression:Expression" xmi:id="_TpknOY6OEei8kvcpw0fSig" name="" content="" type="TYPE_CONDITION" returnType="java.lang.Boolean" returnTypeFixed="true"/>
      </connections>
      <connections xmi:type="process:SequenceFlow" xmi:id="_TpknOo6OEei8kvcpw0fSig" target="_TpkmWY6OEei8kvcpw0fSig" source="_TpkmQI6OEei8kvcpw0fSig">
        <decisionTable xmi:type="decision:DecisionTable" xmi:id="_TpknO46OEei8kvcpw0fSig"/>
        <condition xmi:type="expression:Expression" xmi:id="_TpknPI6OEei8kvcpw0fSig" name="" content="" type="TYPE_CONDITION" returnType="java.lang.Boolean" returnTypeFixed="true"/>
      </connections>
      <connections xmi:type="process:SequenceFlow" xmi:id="_TplNUI6OEei8kvcpw0fSig" target="_Tpj_2o6OEei8kvcpw0fSig" source="_TpkmWY6OEei8kvcpw0fSig">
        <decisionTable xmi:type="decision:DecisionTable" xmi:id="_TplNUY6OEei8kvcpw0fSig"/>
        <condition xmi:type="expression:Expression" xmi:id="_TplNUo6OEei8kvcpw0fSig" name="" content="" type="TYPE_CONDITION" returnType="java.lang.Boolean" returnTypeFixed="true"/>
      </connections>
      <connections xmi:type="process:SequenceFlow" xmi:id="_TplNU46OEei8kvcpw0fSig" target="_Tpj_Zo6OEei8kvcpw0fSig" source="_Tpj_2o6OEei8kvcpw0fSig">
        <decisionTable xmi:type="decision:DecisionTable" xmi:id="_TplNVI6OEei8kvcpw0fSig"/>
        <condition xmi:type="expression:Expression" xmi:id="_TplNVY6OEei8kvcpw0fSig" name="" content="" type="TYPE_CONDITION" returnType="java.lang.Boolean" returnTypeFixed="true"/>
      </connections>
      <connections xmi:type="process:SequenceFlow" xmi:id="_LXvnEI6bEeiCd4A7RChmhg" target="_Tpj_YY6OEei8kvcpw0fSig" source="_Tpj_Zo6OEei8kvcpw0fSig">
        <decisionTable xmi:type="decision:DecisionTable" xmi:id="_LXwOII6bEeiCd4A7RChmhg"/>
        <condition xmi:type="expression:Expression" xmi:id="_LXwOIY6bEeiCd4A7RChmhg" name="" content="" type="TYPE_CONDITION" returnType="java.lang.Boolean" returnTypeFixed="true"/>
      </connections>
      <actors xmi:type="process:Actor" xmi:id="_TplNVo6OEei8kvcpw0fSig" name="system" initiator="true"/>
      <parameters xmi:type="parameter:Parameter" xmi:id="_TplNV46OEei8kvcpw0fSig" name="urlRisk" typeClassname="java.lang.String"/>
      <parameters xmi:type="parameter:Parameter" xmi:id="_TplNWI6OEei8kvcpw0fSig" name="urlGrantingTicket" typeClassname="java.lang.String"/>
      <parameters xmi:type="parameter:Parameter" xmi:id="_TplNWY6OEei8kvcpw0fSig" name="consumerID" typeClassname="java.lang.String"/>
      <parameters xmi:type="parameter:Parameter" xmi:id="_TplNWo6OEei8kvcpw0fSig" name="authenticationType" typeClassname="java.lang.String"/>
      <parameters xmi:type="parameter:Parameter" xmi:id="_TplNW46OEei8kvcpw0fSig" name="authenticationData" typeClassname="java.lang.String"/>
      <parameters xmi:type="parameter:Parameter" xmi:id="_TplNXI6OEei8kvcpw0fSig" name="ivUser" typeClassname="java.lang.String"/>
      <parameters xmi:type="parameter:Parameter" xmi:id="_TplNXY6OEei8kvcpw0fSig" name="ivTicket" typeClassname="java.lang.String"/>
      <parameters xmi:type="parameter:Parameter" xmi:id="_TplNXo6OEei8kvcpw0fSig" name="pOperations" typeClassname="java.lang.String"/>
      <parameters xmi:type="parameter:Parameter" xmi:id="_TplNX46OEei8kvcpw0fSig" name="pImpagos" typeClassname="java.lang.String"/>
      <parameters xmi:type="parameter:Parameter" xmi:id="_TplNYI6OEei8kvcpw0fSig" name="urlImpagos" typeClassname="java.lang.String"/>
      <parameters xmi:type="parameter:Parameter" xmi:id="_TplNYY6OEei8kvcpw0fSig" name="urlInforma" typeClassname="java.lang.String"/>
      <parameters xmi:type="parameter:Parameter" xmi:id="_TplNYo6OEei8kvcpw0fSig" name="urlPrp" typeClassname="java.lang.String"/>
      <contract xmi:type="process:Contract" xmi:id="_TplNY46OEei8kvcpw0fSig">
        <inputs xmi:type="process:ContractInput" xmi:id="_TplNZI6OEei8kvcpw0fSig" name="contrato" type="COMPLEX">
          <mapping xmi:type="process:ContractInputMapping" xmi:id="_TplNZY6OEei8kvcpw0fSig"/>
          <inputs xmi:type="process:ContractInput" xmi:id="_TplNZo6OEei8kvcpw0fSig" name="taskId">
            <mapping xmi:type="process:ContractInputMapping" xmi:id="_TplNZ46OEei8kvcpw0fSig"/>
          </inputs>
          <inputs xmi:type="process:ContractInput" xmi:id="_TplNaI6OEei8kvcpw0fSig" name="userName">
            <mapping xmi:type="process:ContractInputMapping" xmi:id="_TplNaY6OEei8kvcpw0fSig"/>
          </inputs>
          <inputs xmi:type="process:ContractInput" xmi:id="_TplNao6OEei8kvcpw0fSig" name="cliente" type="COMPLEX">
            <mapping xmi:type="process:ContractInputMapping" xmi:id="_TplNa46OEei8kvcpw0fSig"/>
            <inputs xmi:type="process:ContractInput" xmi:id="_TplNbI6OEei8kvcpw0fSig" name="documentType">
              <mapping xmi:type="process:ContractInputMapping" xmi:id="_TplNbY6OEei8kvcpw0fSig"/>
            </inputs>
            <inputs xmi:type="process:ContractInput" xmi:id="_TplNbo6OEei8kvcpw0fSig" name="documentNumber">
              <mapping xmi:type="process:ContractInputMapping" xmi:id="_TplNb46OEei8kvcpw0fSig"/>
            </inputs>
            <inputs xmi:type="process:ContractInput" xmi:id="_TplNcI6OEei8kvcpw0fSig" name="firstName">
              <mapping xmi:type="process:ContractInputMapping" xmi:id="_TplNcY6OEei8kvcpw0fSig"/>
            </inputs>
            <inputs xmi:type="process:ContractInput" xmi:id="_TplNco6OEei8kvcpw0fSig" name="lastName">
              <mapping xmi:type="process:ContractInputMapping" xmi:id="_TplNc46OEei8kvcpw0fSig"/>
            </inputs>
            <inputs xmi:type="process:ContractInput" xmi:id="_TplNdI6OEei8kvcpw0fSig" name="secondLastName">
              <mapping xmi:type="process:ContractInputMapping" xmi:id="_TplNdY6OEei8kvcpw0fSig"/>
            </inputs>
          </inputs>
          <inputs xmi:type="process:ContractInput" xmi:id="_TplNdo6OEei8kvcpw0fSig" name="conyuge" type="COMPLEX">
            <mapping xmi:type="process:ContractInputMapping" xmi:id="_TplNd46OEei8kvcpw0fSig"/>
            <inputs xmi:type="process:ContractInput" xmi:id="_TplNeI6OEei8kvcpw0fSig" name="documentType">
              <mapping xmi:type="process:ContractInputMapping" xmi:id="_TplNeY6OEei8kvcpw0fSig"/>
            </inputs>
            <inputs xmi:type="process:ContractInput" xmi:id="_TplNeo6OEei8kvcpw0fSig" name="documentNumber">
              <mapping xmi:type="process:ContractInputMapping" xmi:id="_TplNe46OEei8kvcpw0fSig"/>
            </inputs>
          </inputs>
        </inputs>
      </contract>
      <searchIndexes xmi:type="process:SearchIndex" xmi:id="_TplNfI6OEei8kvcpw0fSig">
        <name xmi:type="expression:Expression" xmi:id="_TplNfY6OEei8kvcpw0fSig" content="" returnTypeFixed="true"/>
        <value xmi:type="expression:Expression" xmi:id="_TplNfo6OEei8kvcpw0fSig" content="" returnTypeFixed="true"/>
      </searchIndexes>
      <searchIndexes xmi:type="process:SearchIndex" xmi:id="_TplNf46OEei8kvcpw0fSig">
        <name xmi:type="expression:Expression" xmi:id="_TplNgI6OEei8kvcpw0fSig" content="" returnTypeFixed="true"/>
        <value xmi:type="expression:Expression" xmi:id="_TplNgY6OEei8kvcpw0fSig" content="" returnTypeFixed="true"/>
      </searchIndexes>
      <searchIndexes xmi:type="process:SearchIndex" xmi:id="_TplNgo6OEei8kvcpw0fSig">
        <name xmi:type="expression:Expression" xmi:id="_TplNg46OEei8kvcpw0fSig" content="" returnTypeFixed="true"/>
        <value xmi:type="expression:Expression" xmi:id="_TplNhI6OEei8kvcpw0fSig" content="" returnTypeFixed="true"/>
      </searchIndexes>
      <searchIndexes xmi:type="process:SearchIndex" xmi:id="_TplNhY6OEei8kvcpw0fSig">
        <name xmi:type="expression:Expression" xmi:id="_TplNho6OEei8kvcpw0fSig" content="" returnTypeFixed="true"/>
        <value xmi:type="expression:Expression" xmi:id="_TplNh46OEei8kvcpw0fSig" content="" returnTypeFixed="true"/>
      </searchIndexes>
      <searchIndexes xmi:type="process:SearchIndex" xmi:id="_TplNiI6OEei8kvcpw0fSig">
        <name xmi:type="expression:Expression" xmi:id="_TplNiY6OEei8kvcpw0fSig" content="" returnTypeFixed="true"/>
        <value xmi:type="expression:Expression" xmi:id="_TplNio6OEei8kvcpw0fSig" content="" returnTypeFixed="true"/>
      </searchIndexes>
    </elements>
    <datatypes xmi:type="process:BooleanType" xmi:id="_TplNi46OEei8kvcpw0fSig" name="Boolean"/>
    <datatypes xmi:type="process:DateType" xmi:id="_TplNjI6OEei8kvcpw0fSig" name="Date"/>
    <datatypes xmi:type="process:IntegerType" xmi:id="_TplNjY6OEei8kvcpw0fSig" name="Integer"/>
    <datatypes xmi:type="process:LongType" xmi:id="_TplNjo6OEei8kvcpw0fSig" name="Long"/>
    <datatypes xmi:type="process:DoubleType" xmi:id="_TplNj46OEei8kvcpw0fSig" name="Double"/>
    <datatypes xmi:type="process:StringType" xmi:id="_TplNkI6OEei8kvcpw0fSig" name="Text"/>
    <datatypes xmi:type="process:JavaType" xmi:id="_TplNkY6OEei8kvcpw0fSig" name="Java_object"/>
    <datatypes xmi:type="process:XMLType" xmi:id="_TplNko6OEei8kvcpw0fSig" name="XML"/>
    <datatypes xmi:type="process:BusinessObjectType" xmi:id="_TplNk46OEei8kvcpw0fSig" name="Business_Object"/>
  </process:MainProcess>
  <notation:Diagram xmi:id="_TplNlI6OEei8kvcpw0fSig" type="Process" element="_Tpj_MI6OEei8kvcpw0fSig" name="MyDiagram" measurementUnit="Pixel">
    <children xmi:type="notation:Node" xmi:id="_TplNlY6OEei8kvcpw0fSig" type="2007" element="_Tpj_MY6OEei8kvcpw0fSig">
      <children xmi:type="notation:DecorationNode" xmi:id="_TplNlo6OEei8kvcpw0fSig" type="5008" element="_Tpj_MY6OEei8kvcpw0fSig"/>
      <children xmi:type="notation:DecorationNode" xmi:id="_TplNl46OEei8kvcpw0fSig" type="7001" element="_Tpj_MY6OEei8kvcpw0fSig">
        <children xmi:type="notation:Node" xmi:id="_TplNmI6OEei8kvcpw0fSig" type="3007" element="_Tpj_Mo6OEei8kvcpw0fSig">
          <children xmi:type="notation:DecorationNode" xmi:id="_TplNmY6OEei8kvcpw0fSig" type="5007" element="_Tpj_Mo6OEei8kvcpw0fSig"/>
          <children xmi:type="notation:DecorationNode" xmi:id="_TplNmo6OEei8kvcpw0fSig" type="7002" element="_Tpj_Mo6OEei8kvcpw0fSig">
            <children xmi:type="notation:Shape" xmi:id="_TplNm46OEei8kvcpw0fSig" type="3002" element="_Tpj_M46OEei8kvcpw0fSig" fontName="Segoe UI">
              <children xmi:type="notation:DecorationNode" xmi:id="_TplNnI6OEei8kvcpw0fSig" type="5024" element="_Tpj_M46OEei8kvcpw0fSig">
                <layoutConstraint xmi:type="notation:Location" xmi:id="_TplNnY6OEei8kvcpw0fSig" y="5"/>
              </children>
              <layoutConstraint xmi:type="notation:Bounds" xmi:id="_TplNno6OEei8kvcpw0fSig" x="43" y="104"/>
            </children>
            <children xmi:type="notation:Shape" xmi:id="_TplNn46OEei8kvcpw0fSig" type="3027" element="_Tpj_OI6OEei8kvcpw0fSig" fontName="Segoe UI" fillColor="14334392" lineColor="10710316">
              <children xmi:type="notation:DecorationNode" xmi:id="_TplNoI6OEei8kvcpw0fSig" type="5017" element="_Tpj_OI6OEei8kvcpw0fSig"/>
              <layoutConstraint xmi:type="notation:Bounds" xmi:id="_TplNoY6OEei8kvcpw0fSig" x="100" y="89" width="120" height="60"/>
            </children>
            <children xmi:type="notation:Shape" xmi:id="_TplNoo6OEei8kvcpw0fSig" type="3062" element="_Tpj_YY6OEei8kvcpw0fSig" fontName="Segoe UI">
              <children xmi:type="notation:DecorationNode" xmi:id="_TplNo46OEei8kvcpw0fSig" type="5090" element="_Tpj_YY6OEei8kvcpw0fSig">
                <layoutConstraint xmi:type="notation:Location" xmi:id="_TplNpI6OEei8kvcpw0fSig" y="5"/>
              </children>
              <layoutConstraint xmi:type="notation:Bounds" xmi:id="_TplNpY6OEei8kvcpw0fSig" x="860" y="104"/>
            </children>
            <children xmi:type="notation:Shape" xmi:id="_TplNpo6OEei8kvcpw0fSig" type="3027" element="_Tpj_Zo6OEei8kvcpw0fSig" fontName="Segoe UI" fillColor="14334392" lineColor="10710316">
              <children xmi:type="notation:DecorationNode" xmi:id="_TplNp46OEei8kvcpw0fSig" type="5017" element="_Tpj_Zo6OEei8kvcpw0fSig"/>
              <layoutConstraint xmi:type="notation:Bounds" xmi:id="_TplNqI6OEei8kvcpw0fSig" x="708" y="90" width="114" height="57"/>
            </children>
            <children xmi:type="notation:Shape" xmi:id="_TplNqY6OEei8kvcpw0fSig" type="3027" element="_Tpj_2o6OEei8kvcpw0fSig" fontName="Segoe UI" fillColor="14334392" lineColor="10710316">
              <children xmi:type="notation:DecorationNode" xmi:id="_TplNqo6OEei8kvcpw0fSig" type="5017" element="_Tpj_2o6OEei8kvcpw0fSig"/>
              <layoutConstraint xmi:type="notation:Bounds" xmi:id="_TplNq46OEei8kvcpw0fSig" x="556" y="88" width="124" height="62"/>
            </children>
            <children xmi:type="notation:Shape" xmi:id="_TplNrI6OEei8kvcpw0fSig" type="3027" element="_TpkmQI6OEei8kvcpw0fSig" fontName="Segoe UI" fillColor="14334392" lineColor="10710316">
              <children xmi:type="notation:DecorationNode" xmi:id="_TplNrY6OEei8kvcpw0fSig" type="5017" element="_TpkmQI6OEei8kvcpw0fSig"/>
              <layoutConstraint xmi:type="notation:Bounds" xmi:id="_TplNro6OEei8kvcpw0fSig" x="252" y="89" width="120" height="60"/>
            </children>
            <children xmi:type="notation:Shape" xmi:id="_TplNr46OEei8kvcpw0fSig" type="3027" element="_TpkmWY6OEei8kvcpw0fSig" fontName="Segoe UI" fillColor="14334392" lineColor="10710316">
              <children xmi:type="notation:DecorationNode" xmi:id="_TplNsI6OEei8kvcpw0fSig" type="5017" element="_TpkmWY6OEei8kvcpw0fSig"/>
              <layoutConstraint xmi:type="notation:Bounds" xmi:id="_TplNsY6OEei8kvcpw0fSig" x="404" y="88" width="124" height="62"/>
            </children>
          </children>
          <styles xmi:type="notation:DescriptionStyle" xmi:id="_TplNwI6OEei8kvcpw0fSig"/>
          <styles xmi:type="notation:FontStyle" xmi:id="_TplNwY6OEei8kvcpw0fSig" fontName="Segoe UI"/>
          <styles xmi:type="notation:LineStyle" xmi:id="_TplNwo6OEei8kvcpw0fSig"/>
          <styles xmi:type="notation:FillStyle" xmi:id="_TplNw46OEei8kvcpw0fSig"/>
          <layoutConstraint xmi:type="notation:Bounds" xmi:id="_TplNxI6OEei8kvcpw0fSig" x="45" y="10" width="1393" height="237"/>
        </children>
      </children>
      <styles xmi:type="notation:DescriptionStyle" xmi:id="_TplNxY6OEei8kvcpw0fSig"/>
      <styles xmi:type="notation:FontStyle" xmi:id="_TplNxo6OEei8kvcpw0fSig" fontName="Segoe UI"/>
      <styles xmi:type="notation:LineStyle" xmi:id="_TplNx46OEei8kvcpw0fSig"/>
      <styles xmi:type="notation:FillStyle" xmi:id="_TplNyI6OEei8kvcpw0fSig"/>
      <layoutConstraint xmi:type="notation:Bounds" xmi:id="_TplNyY6OEei8kvcpw0fSig" width="1475" height="250"/>
    </children>
    <styles xmi:type="notation:DiagramStyle" xmi:id="_TplNyo6OEei8kvcpw0fSig"/>
    <edges xmi:type="notation:Connector" xmi:id="_TplN7Y6OEei8kvcpw0fSig" type="4001" element="_TpknMY6OEei8kvcpw0fSig" source="_TplNm46OEei8kvcpw0fSig" target="_TplNn46OEei8kvcpw0fSig" roundedBendpointsRadius="10" routing="Rectilinear">
      <children xmi:type="notation:DecorationNode" xmi:id="_TplN7o6OEei8kvcpw0fSig" type="6001" element="_TpknMY6OEei8kvcpw0fSig">
        <layoutConstraint xmi:type="notation:Location" xmi:id="_TplN746OEei8kvcpw0fSig" y="-10"/>
      </children>
      <styles xmi:type="notation:FontStyle" xmi:id="_TplN8I6OEei8kvcpw0fSig" fontName="Segoe UI"/>
      <bendpoints xmi:type="notation:RelativeBendpoints" xmi:id="_TplN8Y6OEei8kvcpw0fSig" points="[-1, -14, -126, -1]$[65, -14, -60, -1]"/>
      <sourceAnchor xmi:type="notation:IdentityAnchor" xmi:id="_TplN8o6OEei8kvcpw0fSig" id="(1.0,0.9333333333333333)"/>
    </edges>
    <edges xmi:type="notation:Connector" xmi:id="_TplN-Y6OEei8kvcpw0fSig" type="4001" element="_TpknN46OEei8kvcpw0fSig" source="_TplNn46OEei8kvcpw0fSig" target="_TplNrI6OEei8kvcpw0fSig" roundedBendpointsRadius="10" routing="Rectilinear">
      <children xmi:type="notation:DecorationNode" xmi:id="_TplN-o6OEei8kvcpw0fSig" type="6001" element="_TpknN46OEei8kvcpw0fSig">
        <layoutConstraint xmi:type="notation:Location" xmi:id="_TplN-46OEei8kvcpw0fSig" y="-10"/>
      </children>
      <styles xmi:type="notation:FontStyle" xmi:id="_TplN_I6OEei8kvcpw0fSig" fontName="Segoe UI"/>
      <bendpoints xmi:type="notation:RelativeBendpoints" xmi:id="_TplN_Y6OEei8kvcpw0fSig" points="[0, 2, -92, -1]$[32, 2, -60, -1]"/>
      <sourceAnchor xmi:type="notation:IdentityAnchor" xmi:id="_TplN_o6OEei8kvcpw0fSig" id="(1.0,0.45)"/>
    </edges>
    <edges xmi:type="notation:Connector" xmi:id="_TplN_46OEei8kvcpw0fSig" type="4001" element="_TpknOo6OEei8kvcpw0fSig" source="_TplNrI6OEei8kvcpw0fSig" target="_TplNr46OEei8kvcpw0fSig" roundedBendpointsRadius="10" routing="Rectilinear">
      <children xmi:type="notation:DecorationNode" xmi:id="_TplOAI6OEei8kvcpw0fSig" type="6001" element="_TpknOo6OEei8kvcpw0fSig">
        <layoutConstraint xmi:type="notation:Location" xmi:id="_TplOAY6OEei8kvcpw0fSig" y="-10"/>
      </children>
      <styles xmi:type="notation:FontStyle" xmi:id="_TplOAo6OEei8kvcpw0fSig" fontName="Segoe UI"/>
      <bendpoints xmi:type="notation:RelativeBendpoints" xmi:id="_TplOA46OEei8kvcpw0fSig" points="[0, -5, -94, -1]$[32, -5, -62, -1]"/>
      <sourceAnchor xmi:type="notation:IdentityAnchor" xmi:id="_TplOBI6OEei8kvcpw0fSig" id="(1.0,0.5666666666666667)"/>
    </edges>
    <edges xmi:type="notation:Connector" xmi:id="_TplOBY6OEei8kvcpw0fSig" type="4001" element="_TplNUI6OEei8kvcpw0fSig" source="_TplNr46OEei8kvcpw0fSig" target="_TplNqY6OEei8kvcpw0fSig" roundedBendpointsRadius="10" routing="Rectilinear">
      <children xmi:type="notation:DecorationNode" xmi:id="_TplOBo6OEei8kvcpw0fSig" type="6001" element="_TplNUI6OEei8kvcpw0fSig">
        <layoutConstraint xmi:type="notation:Location" xmi:id="_TplOB46OEei8kvcpw0fSig" y="-10"/>
      </children>
      <styles xmi:type="notation:FontStyle" xmi:id="_TplOCI6OEei8kvcpw0fSig" fontName="Segoe UI"/>
      <bendpoints xmi:type="notation:RelativeBendpoints" xmi:id="_TplOCY6OEei8kvcpw0fSig" points="[0, 2, -90, 1]$[28, 2, -62, 1]"/>
      <sourceAnchor xmi:type="notation:IdentityAnchor" xmi:id="_TplOCo6OEei8kvcpw0fSig" id="(1.0,0.4838709677419355)"/>
    </edges>
    <edges xmi:type="notation:Connector" xmi:id="_TplOC46OEei8kvcpw0fSig" type="4001" element="_TplNU46OEei8kvcpw0fSig" source="_TplNqY6OEei8kvcpw0fSig" target="_TplNpo6OEei8kvcpw0fSig" roundedBendpointsRadius="10" routing="Rectilinear">
      <children xmi:type="notation:DecorationNode" xmi:id="_TplODI6OEei8kvcpw0fSig" type="6001" element="_TplNU46OEei8kvcpw0fSig">
        <layoutConstraint xmi:type="notation:Location" xmi:id="_TplODY6OEei8kvcpw0fSig" y="-10"/>
      </children>
      <styles xmi:type="notation:FontStyle" xmi:id="_TplODo6OEei8kvcpw0fSig" fontName="Segoe UI"/>
      <bendpoints xmi:type="notation:RelativeBendpoints" xmi:id="_TplOD46OEei8kvcpw0fSig" points="[0, -2, -53, -2]$[28, -2, -25, -2]"/>
      <sourceAnchor xmi:type="notation:IdentityAnchor" xmi:id="_TplOEI6OEei8kvcpw0fSig" id="(1.0,0.5)"/>
      <targetAnchor xmi:type="notation:IdentityAnchor" xmi:id="_TplOEY6OEei8kvcpw0fSig" id="(0.21929824561403508,0.5087719298245614)"/>
    </edges>
    <edges xmi:type="notation:Connector" xmi:id="_LXw1MI6bEeiCd4A7RChmhg" type="4001" element="_LXvnEI6bEeiCd4A7RChmhg" source="_TplNpo6OEei8kvcpw0fSig" target="_TplNoo6OEei8kvcpw0fSig" roundedBendpointsRadius="10" routing="Rectilinear">
      <children xmi:type="notation:DecorationNode" xmi:id="_LXxcQI6bEeiCd4A7RChmhg" type="6001" element="_LXvnEI6bEeiCd4A7RChmhg">
        <layoutConstraint xmi:type="notation:Location" xmi:id="_LXxcQY6bEeiCd4A7RChmhg" y="-10"/>
      </children>
      <styles xmi:type="notation:FontStyle" xmi:id="_LXw1MY6bEeiCd4A7RChmhg" fontName="Segoe UI"/>
      <bendpoints xmi:type="notation:RelativeBendpoints" xmi:id="_LXw1Mo6bEeiCd4A7RChmhg" points="[0, -3, -338, -3]$[331, -14, -7, -14]"/>
      <sourceAnchor xmi:type="notation:IdentityAnchor" xmi:id="_LXzRcI6bEeiCd4A7RChmhg" id="(1.0,0.5614035087719298)"/>
    </edges>
  </notation:Diagram>
</xmi:XMI>
