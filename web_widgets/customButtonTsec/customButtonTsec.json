{"designerVersion":"1.4.34","id":"customButtonTsec","name":"ButtonTsec","lastUpdate":1526824037957,"template":"<div class=\"text-{{ properties.alignment }}\">\n    <button\n        ng-class=\"'btn btn-' + properties.buttonStyle\"\n        ng-click=\"ctrl.action()\"\n        type=\"button\"\n        ng-disabled=\"properties.disabled || ctrl.busy\" ng-bind-html=\"properties.label | uiTranslate\"></button>\n   \n</div>\n\n<br>\n","icon":"<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 50 20'><g><path fill='#CBD5E1' d='M47,15.2c0,0.7-1.7,1.8-1.7,1.8S4.8,17,3.7,17c-1.6,0-3.6-1.9-3.6-1.9s0.7,4.8,4,5c2.4,0.1,42.4,0,42.4,0 s3.5-0.2,3.5-3.6c0-1.3,0.1-11.5,0.1-12.4c-0.1-2-4-4-4-4L47,1.8C47,1.8,47,14.5,47,15.2z'/><path fill='#fff' d='M3.9,1h40.3C45.7,1,47,2.2,47,3.6v10.8c0,1.4-1.3,2.6-2.9,2.6H3.9C2.3,17,1,15.8,1,14.4V3.6 C1,2.2,2.3,1,3.9,1z M3,0C1.3,0,0,1.3,0,3v12c0,1.7,1.3,3,3,3h42c1.7,0,3-1.3,3-3V3c0-1.7-1.3-3-3-3H3z'/></g></svg>","controller":"function PbButtonCtrl($scope, $http, $location, $log, $window,utilesService) {\r\n\r\n    'use strict';\r\n        function getTag(data,value){\r\n           for(var i = 0 ; i < data.data.length ; i++){\r\n              if(data.data[i].tag == value){\r\n                  return data.data[i].data; \t\t\r\n              }\r\n           }\r\n           return ''; \r\n          }\r\n   \r\n    var vm = this;\r\n    vm.utilesService = utilesService;\r\n    var tsec = null;\r\n        \r\n    \r\n    this.action = function action() {\r\n      var id;\t\r\n  \r\n  \r\n      if ($scope.properties.action === 'Remove from collection') {\r\n        removeFromCollection();\r\n      } else if ($scope.properties.action === 'Add to collection') {\r\n        addToCollection();\r\n      } else if ($scope.properties.action === 'Start process') {\r\n        id = getUrlParam('id');      \r\n        if ($scope.properties.id) {\r\n              \r\n          doStartProcess('POST', $scope.properties.url + \"/\" + id + '/instantiation?user='+ $scope.properties.bloquear, getUserParam(),{},$scope.properties.dataToSend);\r\n          //doStartProcess('POST', $scope.properties.url + \"/\" + id + '/instantiation?');\r\n        } else {\r\n          $log.log('Impossible to retrieve the process definition id value from the URL');\r\n        }\r\n      } else if ($scope.properties.action === 'Submit task') {\r\n        id = getUrlParam('id');\r\n        if (id) {\r\n        \r\n          doRequest('POST',  $scope.properties.url + '/API/bpm/userTask/' + getUrlParam('id') + '/execution?user='+getUrlParam('userId'), getUserParam(),tsec);\r\n          console.log($scope.properties.targetUrlOnSuccess);\r\n           $window.top.location.href = $scope.properties.targetUrlOnSuccess;  \r\n        } else {\r\n          $log.log('Impossible to retrieve the task id value from the URL');\r\n        }\r\n      } else if($scope.properties.action === 'Higiene Basica'){\r\n          //getParams\r\n          vm.busy = true;\r\n          $scope.properties.bloquear = true;\r\n          $scope.hbValidator = false ; \t\t\r\n          $scope.properties.dataFromSuccess = {}; \r\n          $scope.properties.respuestas = [];\r\n          $scope.properties.errores = [];\r\n          $scope.properties.validadorHb= false ; \r\n          $scope.radicar = true ; \r\n  \r\n          try{\r\n              /**************************CIFIN COMERCIAL******************************/\r\n              var cifinCHttp = getRequestResponse('GET', $scope.properties.uriCifinC, null, tsec);\t\r\n              cifinCHttp.success(function(data, status, headers, config) {\r\n                  if (!data.data) {\r\n                      $scope.properties.errores.push(\"No existe información en cifin\");\r\n                      $scope.radicar = false;\r\n                      vm.busy = false;\r\n                      return;\r\n                  }\r\n                  $scope.properties.dataFromSuccess.cifinComercial = {\"status\": 200,\"data\": data};\t\t\t   \r\n                  var nuevaS = $scope.properties.dataFromSuccess.cifinComercial.data.data;\r\n                  Array.prototype.clean=function(t){\r\n                    for(var r=0;r<this.length;r++)\r\n                      this[r]==t&&(this.splice(r,1),r--);\r\n                      return this;\r\n                    };\r\n                  /***********************/\r\n                  var tagCuatroMilCien = null; \r\n                  for(var i = 0 ; i< nuevaS.length; i++){\r\n                     if(nuevaS[i].tag== \"4100\"){\r\n                         tagCuatroMilCien = nuevaS[i].data; \r\n                     }\r\n                  }\t\t\t   \r\n                  var tipodoc    = tagCuatroMilCien.substring(15, 21).replace(new RegExp(\"\\\\+\",\"g\") ,'');\r\n                  var estadoDoc = tagCuatroMilCien.substring(188, (188+20)).replace(new RegExp(\"\\\\+\",\"g\") ,'');\r\n                  var numeroId  = tagCuatroMilCien.substring(23, (23+15)).replace(new RegExp(\"\\\\+\",\"g\") ,'');\r\n                  var fechaExp  = tagCuatroMilCien.substring(178, (178+10)).replace(new RegExp(\"\\\\+\",\"g\") ,'');\r\n                  var lugarExp  = tagCuatroMilCien.substring(158, (158+20)).replace(new RegExp(\"\\\\+\",\"g\") ,'');\r\n                  var nombre    = tagCuatroMilCien.substring(38, 98).replace(new RegExp(\"\\\\+\",\"g\") ,'#');\t\r\n                  var rangoEdad    = tagCuatroMilCien.substring(248, (248+6)).replace(new RegExp(\"\\\\+\",\"g\") ,'');\t\r\n                  \r\n                  var nombreArray = nombre.split('#');\r\n                  nombreArray.clean('');\r\n                  var dataCifin = []; \r\n                  dataCifin.push({\"tag\":\"Nombres\", \"data\":nombreArray[2] +' '+ nombreArray[3]}); \r\n                  dataCifin.push({\"tag\":\"PrimerApellido\", \"data\":nombreArray[0]});\r\n                  dataCifin.push({\"tag\":\"SegundoApellido\", \"data\":nombreArray[1]});\r\n                  dataCifin.push({\"tag\":\"Sexo\", \"data\":\"\"});\r\n                  dataCifin.push({\"tag\":\"TipoId\", \"data\":tipodoc.replace(new RegExp(\"\\\\.\",\"g\") ,'')});\r\n                  dataCifin.push({\"tag\":\"NumId\", \"data\":numeroId.replace(/^0+/, '')});\t\t\t\t\r\n                  dataCifin.push({\"tag\":\"FechaExped\", \"data\":fechaExp.split('/')[2] +'-' + fechaExp.split('/')[1] + '-' + fechaExp.split('/')[0]});\r\n                  dataCifin.push({\"tag\":\"LugarExpedicion\", \"data\":lugarExp});\t\r\n                  dataCifin.push({\"tag\":\"RangoEdad\", \"data\":rangoEdad.replace(new RegExp(\"\\\\.\",\"g\") ,'')});\t\r\n                  dataCifin.push({\"tag\":\"EstadoDoc\", \"data\":\"0\"});\t\r\n                  dataCifin.push({\"tag\":\"ResultValidacionId\", \"data\":\"10\"});\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n                  $scope.properties.dataFromSuccess.cifinValidador = {\"status\": 200,\"data\":{\"data\":dataCifin} };\r\n                  \r\n                  /***********************/\t\t\t   \r\n                  $scope.properties.buro = buscarBuro(nuevaS);\t\t\t   \r\n                  if ($scope.properties.buro.etiqueta === \"BURO\") {\r\n                      if (parseInt($scope.properties.buro.valor) < parseInt($scope.properties.buroBase)) {\r\n                          $scope.properties.dataFromSuccess.buroValido = {\r\n                              \"valido\": false\r\n                          };\r\n                          $scope.properties.errores.push(\"Puntaje Buro insuficiente\");\r\n                          $scope.radicar = false;\r\n                          vm.busy = false;\r\n                          return;\r\n                      }else {\r\n                          $scope.properties.dataFromSuccess.buroValido = {\r\n                              \"valido\": true\r\n                          };\r\n                          vm.busy = true;\r\n                      }\r\n                  }else {\r\n                      $scope.properties.dataFromSuccess.buroValido = {\r\n                          \"valido\": true\r\n                      };\r\n                      vm.busy = true;\r\n                  }\r\n                  var response;\r\n                 \r\n                  /******************************************SARLAFT***************************************************/\t\t\t   \r\n                  response = getRequestResponse('GET', $scope.properties.uriSarlaft, tsec);\r\n                  response.success(function(data, status, headers, config) {\r\n                      $scope.properties.dataFromSuccess.sarlaft = {\r\n                          \"status\": status,\r\n                          \"data\": data\r\n                      };\r\n                      $scope.properties.respuestas.push(\"Resultado Sarlaft: 200 CLIENTE ELEGIBLE\");\r\n                      \r\n                      /*****************Base de exclusiones**************/\r\n                      var httpBase = getRequestResponse('GET', $scope.properties.otherProperties.urlBase, tsec);\r\n                      \r\n                      httpBase.error(function(data, status, headers, config) {\r\n                          //console.log(\"-> \" + status);\r\n                          if(status == 400 ){\r\n                              $scope.properties.dataFromSuccess.pep = {\r\n                                  \"status\": status,\r\n                                  \"data\":data \r\n                              };\r\n                          }else {\r\n                              $scope.properties.errores.push(\"Error técnico consultar al administrador\");\r\n                              $scope.radicar = false;\r\n                              vm.busy = false;\r\n                              return;\r\n                          }\r\n                          \r\n                          /************************PEP PRP**********************/\r\n                          $scope.properties.dataToSend = $scope.properties.otherProperties.payloadPep; \r\n                          var httpPep = getRequestResponse('POST', $scope.properties.otherProperties.urlPep, tsec);\r\n                          \r\n                          httpPep.success(function(data, status, headers, config) {\r\n                              //var pepResponse = data.data.personsExposed;\r\n                              var pepResponse;\r\n                              if( pepResponse = data.data.personsExposed)\t\t\t\r\n                                  for(var i = 0; i < pepResponse.length; i++ ){\r\n                                      if(pepResponse[i].id == 'SELF' || pepResponse[i].id == 'RELATIVE'){\r\n                                          $scope.properties.errores.push(\"Persona identificada como PEP, direccionar a la oficina\");\r\n                                          $scope.radicar = false;\r\n                                          vm.busy = false;\r\n                                          return;\r\n                                      }\r\n                                  }\r\n                              \r\n                              //SUPER FINAL\r\n                              \r\n                                  /******************PERSONAS********************/\r\n                              //personas 1 \r\n                              \r\n                              var personasHttp = getRequestResponse('GET', $scope.properties.uriPersonas, tsec);\r\n                              personasHttp.success(function(data, status, headers, config) {\r\n                                  $scope.properties.dataFromSuccess.personas1 = {\r\n                                      \"status\": 200,\r\n                                      \"data\": data\r\n                                  };\r\n                                  $scope.clientId = data.data.clientId // customerId\r\n                                  $scope.customerId = data.data.customerId // CEDULA \r\n                                  $scope.customerId = \"1\" + $scope.customerId.padStart(15, \"0\") + \"0\";\r\n  \r\n  \r\n                                  //personas2\r\n                                  var personas2Http = getRequestResponse('GET', $scope.properties.uriPerAddresses + $scope.clientId + \"/addresses\", tsec);\r\n                                  personas2Http.success(function(data, status, headers, config) {\r\n                                      $scope.properties.dataFromSuccess.personas2 = {\r\n                                          \"status\": 200,\r\n                                          \"data\": data\r\n                                      };\r\n                                  });\r\n  \r\n                                  //personas3\r\n                                  var personas3Http = getRequestResponse('GET', $scope.properties.uriPerEconomic + $scope.customerId + \"/economic-data\", tsec);\r\n                                  personas3Http.success(function(data, status, headers, config) {\r\n                                      $scope.properties.dataFromSuccess.personas3 = {\r\n                                          \"status\": 200,\r\n                                          \"data\": data\r\n                                      };\r\n                                  });\r\n  \r\n                              });\r\n                              \r\n                              /******************PERSONAS********************/\t\r\n                              var urlPreaprobados =  $scope.properties.otherProperties.urlPreaprobados; \r\n                              var httpPreaprobado = getRequestResponse('GET', urlPreaprobados, tsec);\r\n                              \r\n                              httpPreaprobado.success(\r\n                                  function(data) {\r\n                                      $scope.properties.resuPrueba = data;\r\n                                      console.log(\"pepito: \" + data.data[0].id);\r\n                                  \r\n                                  }\r\n                              );\r\n                              \r\n                              \r\n                              \r\n                              \r\n                              console.log(\"FINAL\");\r\n                              $scope.properties.variableFinal = !$scope.properties.variableFinal;\r\n                              vm.busy = false;\r\n                              return;\r\n  \r\n                              /*****************Base de exclusiones**************/\r\n                          \r\n  \r\n                          });\r\n                          \r\n                          /************************PEP PRP********************* */\r\n                          \r\n                      })\r\n                      httpBase.success(function(data, status, headers, config) {\r\n                          $scope.properties.errores.push(\"No cumple politicas internas de Crédito\"); \r\n                          $scope.radicar = false;\r\n                          vm.busy = false;\r\n                          $scope.radicar = false;\r\n                          return;   \r\n                      })\t\t\t\t\t\r\n                          \r\n                  })\r\n  \r\n                  response.error(function(data, status, headers, config) {\r\n                      $scope.properties.errores.push(\"Sarlaft \" + status + \":\" + data['error-message']);\r\n                      $scope.hbValidator = true;\r\n                      $scope.properties.dataFromSuccess.sarlaft = {\r\n                          \"status\": status,\r\n                          \"data\": data\r\n                      }\r\n                      statusService = status\r\n                      $scope.radicar = false;\r\n                      vm.busy = false;\r\n                      return;\r\n                  });\r\n  /******************************************SARLAFT***************************************************/\t\t\t   \t\t\t   \r\n                 \r\n          \r\n      });\t\r\n      cifinCHttp.error(function(data, status, headers, config) {\r\n                  $scope.properties.dataFromSuccess.cifinComercial = {\"status\": 500,\"data\": data}\r\n                  if (status == 500) {\r\n                      $scope.properties.errores.push(\"Error técnico persistente al consumir el servicio de Cifin Comercial. Intente Nuevamente\");\r\n                  } else if (status == 409) {\r\n                      $scope.properties.errores.push(\"Cifin comercial: 409 Cliente no elegible\");\r\n                  } else {\r\n                      $scope.properties.errores.push(\"Cifin comercial: Cliente no elegible\");\r\n                  }\r\n                  $scope.properties.validadorHb = false;\r\n                  $scope.radicar = false;\r\n                  $scope.hbValidator = true;\r\n                  vm.busy = false;\r\n                  return;\t\t\r\n      });\r\n  /******************************CIFIN COMERCIAL*********************************/\t\r\n  }catch (err) {\r\n      vm.busy = false;\r\n      notifyParentFrame({\r\n          message: 'error',\r\n          status: status,\r\n          dataFromError: data\r\n      });\r\n  } finally {\r\n      vm.busy = false;\r\n      notifyParentFrame({\r\n          message: 'success',\r\n          status: status,\r\n          //dataFromSuccess: data\r\n      });\r\n      $scope.properties.bloquear = false;\r\n  }\t\r\n  \r\n      }else if ($scope.properties.url) {\r\n          \r\n          //lanzar SCORING\r\n      doRequest($scope.properties.action, $scope.properties.url,null,tsec);\r\n        \r\n  \r\n      }\r\n    };\r\n  \r\n    function removeFromCollection() {\r\n      if ($scope.properties.collectionToModify) {\r\n        if (!Array.isArray($scope.properties.collectionToModify)) {\r\n          throw 'Collection property for widget button should be an array, but was ' + $scope.properties.collectionToModify;\r\n        }\r\n        var index = -1;\r\n        if ($scope.properties.collectionPosition === 'First') {\r\n          index = 0;\r\n        } else if ($scope.properties.collectionPosition === 'Last') {\r\n          index = $scope.properties.collectionToModify.length - 1;\r\n        } else if ($scope.properties.collectionPosition === 'Item') {\r\n          index = $scope.properties.collectionToModify.indexOf($scope.properties.removeItem);\r\n        }\r\n  \r\n        // Only remove element for valid index\r\n        if (index !== -1) {\r\n          $scope.properties.collectionToModify.splice(index, 1);\r\n        }\r\n      }\r\n    }\r\n  \r\n    function addToCollection() {\r\n      if (!$scope.properties.collectionToModify) {\r\n        $scope.properties.collectionToModify = [];\r\n      }\r\n      if (!Array.isArray($scope.properties.collectionToModify)) {\r\n        throw 'Collection property for widget button should be an array, but was ' + $scope.properties.collectionToModify;\r\n      }\r\n      var item = angular.copy($scope.properties.valueToAdd);\r\n  \r\n      if ($scope.properties.collectionPosition === 'First') {\r\n        $scope.properties.collectionToModify.unshift(item);\r\n      } else {\r\n        $scope.properties.collectionToModify.push(item);\r\n      }\r\n    }\r\n    \r\n    \r\n      /**\r\n     * Execute a get/post request to an URL\r\n     * It also bind custom data from success|error to a data\r\n     * @return {void}\r\n     */\r\n    function doStartProcess(method, url, params,tsec,data) {\r\n      vm.busy = true;\r\n      $scope.properties.bloquear = vm.busy;\r\n      var req = {\r\n        method: method,\r\n        url: url,\r\n        data: angular.copy(data),\r\n        params: params,\r\n        headers: {'tsec': tsec}\r\n      };\r\n      \r\n  \r\n      return $http(req)\r\n        .success(function(data, status) {\r\n          $scope.properties.dataFromSuccess = data;\r\n          notifyParentFrame({ message: 'success', status: status, dataFromSuccess: data });\r\n          if ($scope.properties.targetUrlOnSuccess && method !== 'GET') {\r\n           // $window.location.assign($scope.properties.targetUrlOnSuccess);\r\n            $window.top.location.href = $scope.properties.targetUrlOnSuccess; \r\n          }\r\n        })\r\n        .error(function(data, status) {\r\n          $scope.properties.dataFromError = data;\r\n          notifyParentFrame({ message: 'error', status: status, dataFromError: data  });\r\n        })\r\n        .finally(function() {\r\n          vm.busy = false;\r\n           $scope.properties.bloquear = vm.busy;\r\n        });\r\n    }\r\n  \r\n    /**\r\n     * Execute a get/post request to an URL\r\n     * It also bind custom data from success|error to a data\r\n     * @return {void}\r\n     */\r\n    function doRequest(method, url, params,tsec,data) {\r\n      vm.busy = true;\r\n      var req = {\r\n        method: method,\r\n        url: url,\r\n        data: angular.copy($scope.properties.dataToSend),\r\n        params: params,\r\n        headers: {'tsec': tsec, \"Content-Type\": \"application/json\"}\r\n      };\r\n      \r\n  \r\n      return $http(req)\r\n        .success(function(data, status) {\r\n          $scope.properties.dataFromSuccess = data;\r\n        /// \r\n       {\r\n        $scope.properties.tramaScoringGlobal.relatedContract.contractNumber=data.relatedContract.contractNumber;\r\n        \r\n        //condicion con participe adicional\r\n        if($scope.properties.participeAdicional===true){\r\n        \r\n        $scope.properties.tramaParticipe.relatedContract.contractNumber=data.relatedContract.contractNumber;\r\n                                   console.log(\"asigno el contrato a la trama de participe\");\r\n                                    console.log($scope.properties.tramaParticipe.relatedContract.contractNumber);\r\n  \r\n           var req = {\r\n                                method: \"POST\",\r\n                                url:  $scope.properties.urlScoringGlobal,\r\n                                data: $scope.properties.tramaParticipe,\r\n                                headers: {\"Content-Type\": \"application/json\" }\r\n                              };\r\n                              \r\n                                    $http(req)\r\n                                .success(function(data, status) {\r\n                                   console.log(\"si entro a scoring participe\");\r\n                                    console.log(status);\r\n                                  $scope.properties.respuestaParticipe= data;\r\n  ///scoring global\r\n  \r\n  \r\n                                     var req = {\r\n                                method: \"POST\",\r\n                                url:  $scope.properties.urlScoringGlobal,\r\n                                data: $scope.properties.tramaScoringGlobal,\r\n                                headers: {\"Content-Type\": \"application/json\" }\r\n                               };\r\n                              \r\n                              $http(req)\r\n                                .success(function(data, status) {\r\n                                    console.log(status);\r\n                                  $scope.properties.respuestaScoringGlobal= data;\r\n  \r\n                                  \r\n                                  })\r\n                                .error(function(data, status) {\r\n                                  $scope.properties.errores.push(\"Error al consumir Scoring Global\");\r\n                                })\r\n                          \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  ///fin ggl0bal\r\n                                  \r\n                                  \r\n                                  \r\n                                  \r\n                                  \r\n                                  \r\n                                  })\r\n                                .error(function(data, status) {\r\n                                  $scope.properties.errores.push(\"Error al consumir Scoring Global\");\r\n                                })\r\n       }\r\n        //condicion sin participe adicional\r\n                else{ \r\n                            var req = {\r\n                                method: \"POST\",\r\n                                url:  $scope.properties.urlScoringGlobal,\r\n                                data: $scope.properties.tramaScoringGlobal,\r\n                                headers: {\"Content-Type\": \"application/json\" }\r\n                               };\r\n                              \r\n                              $http(req)\r\n                                .success(function(data, status) {\r\n                                    console.log(status);\r\n                                  $scope.properties.respuestaScoringGlobal= data;\r\n  \r\n                                  \r\n                                  })\r\n                                .error(function(data, status) {\r\n                                  $scope.properties.errores.push(\"Error al consumir Scoring Global\");\r\n                                })\r\n                          \r\n                \r\n                }\t\r\n          // fin condicion sin participe adicional\t\t\t\t\r\n        }\r\n    \r\n        ////\r\n          notifyParentFrame({ message: 'success', status: status, dataFromSuccess: data });\r\n          if ($scope.properties.targetUrlOnSuccess && method !== 'GET' && \r\n              ( window.location.href.indexOf(\"validacion\") > -1 ||  window.location.href.indexOf(\"scoring\") > -1 \r\n              || window.location.href.indexOf(\"alta-cliente\") > -1 || window.location.href.indexOf(\"alta-de-contrato\") > -1) ) \r\n              \r\n              \r\n              \r\n              {\r\n            window.top.location.href = $scope.properties.targetUrlOnSuccess;\r\n          }\r\n        })\r\n        .error(function(data, status) {\r\n          $scope.properties.dataFromError = data;\r\n          notifyParentFrame({ message: 'error', status: status, dataFromError: data  });\r\n        })\r\n        .finally(function() {\r\n          vm.busy = false;\r\n        });\r\n    }\r\n    \r\n    function buscarBuro(cifin){\r\n      var tagsCincoMil = [];\r\n      var tags = cifin;\t\r\n      var tagData;\r\n      var valoresTagCincoMil;\r\n      var resp = {};\r\n      var flag = false;\r\n      \r\n      for(var i = 0 ; i<tags.length ; i++ ){\r\n          if(tags[i].tag== \"5000\"){\r\n              tagsCincoMil.push(tags[i]);\r\n          }\r\n      }\r\n      \r\n      if(tagsCincoMil.length >  0 ){\r\n              if(tagsCincoMil[1]){\r\n                  //console.log(\"TTT A \");\r\n                  tagData = tagsCincoMil[1].data;\r\n                  console.log(\"TTTtagsCincoMil[1].data\" + tagsCincoMil[1].data);\r\n                  valoresTagCincoMil = tagData.split(\"*\");\r\n                        if(valoresTagCincoMil[2]){\r\n                                if(valoresTagCincoMil[2].replace(/\\s/g,'').replace(/\\+/g , \"\") !== \"\"){\r\n                                    //console.log(\"TTT TEST A\");\r\n                                    flag = true;\r\n                                    resp.valor = valoresTagCincoMil[2].replace(/\\s/g,'').replace(/\\+/g , \"\");\r\n                                    resp.etiqueta = \"PUNTAJE-PEC\";\r\n                                    return resp;\r\n                                }\r\n                        }\r\n              }\r\n              if (tagsCincoMil[0]){\r\n                  //console.log(\"TTT B \");\r\n                  tagData = tagsCincoMil[0].data;\r\n                  console.log(\"TTTtagsCincoMil[0].data\" + tagsCincoMil[0].data);\r\n                  valoresTagCincoMil = tagData.split(\"*\");\r\n                        if(valoresTagCincoMil[2]){\r\n                                if(valoresTagCincoMil[2].replace(/\\s/g,'').replace(/\\+/g , \"\") !== \"\"){\r\n                                    //console.log(\"TTT TEST B\");\r\n                                    flag = true;\r\n                                    resp.valor = valoresTagCincoMil[2].replace(/\\s/g,'').replace(/\\+/g , \"\");\r\n                                    resp.etiqueta = \"BURO\";\r\n                                    //return valoresTagCincoMil[2].replace(/\\s/g,'').replace(/\\+/g , \"\");\r\n                                }\r\n                        }\r\n              }\r\n              if(flag === false){\r\n                  //console.log(\"TTT TEST C\");\r\n                  resp.valor = 0;\r\n              }\r\n              return resp;\r\n       }\r\n  }\r\n    \r\n    function getRequestResponse(method, url,tsec,data) {\r\n      vm.busy = true;\r\n      var req = {\r\n        method: method,\r\n        url: url,\r\n        data: angular.copy($scope.properties.dataToSend),    \r\n        headers: {'tsec': tsec}\r\n      };\t\r\n      var response = $http(req);\t\r\n      return response;     \r\n    }\r\n  \r\n    function notifyParentFrame(additionalProperties) {\r\n      if ($window.parent !== $window.self) {\r\n        var dataToSend = angular.extend({}, $scope.properties, additionalProperties);\r\n        $window.parent.postMessage(JSON.stringify(dataToSend), '*');\r\n      }\r\n    }\r\n  \r\n    function getUserParam() {\r\n      var userId = getUrlParam('user');\r\n      if (userId) {\r\n        return { 'user': userId };\r\n      }\r\n      return {};\r\n    }\r\n  \r\n    /**\r\n     * Extract the param value from a URL query\r\n     * e.g. if param = \"id\", it extracts the id value in the following cases:\r\n     *  1. http://localhost/bonita/portal/resource/process/ProcName/1.0/content/?id=8880000\r\n     *  2. http://localhost/bonita/portal/resource/process/ProcName/1.0/content/?param=value&id=8880000&locale=en\r\n     *  3. http://localhost/bonita/portal/resource/process/ProcName/1.0/content/?param=value&id=8880000&locale=en#hash=value\r\n     * @returns {id}\r\n     */\r\n    function getUrlParam(param) {\r\n      var paramValue = $location.absUrl().match('[//?&]' + param + '=([^&#]*)($|[&#])');\r\n      if (paramValue) {\r\n        return paramValue[1];\r\n      }\r\n      return '';\r\n    }\r\n  }","description":"Trigger for an action in a page or form","custom":true,"order":10,"properties":[{"label":"Disabled","name":"disabled","type":"boolean","defaultValue":false,"bond":"expression"},{"label":"Label","name":"label","type":"text","defaultValue":"Submit","bond":"interpolation"},{"label":"Alignment","name":"alignment","type":"choice","defaultValue":"left","choiceValues":["left","center","right"],"bond":"constant"},{"label":"Style","name":"buttonStyle","type":"choice","defaultValue":"default","choiceValues":["default","primary","success","info","warning","danger","link"],"bond":"constant"},{"label":"Action","name":"action","type":"choice","defaultValue":"Submit task","choiceValues":[{"value":"Submit task","label":"Submit task","group":"Bonita BPM"},{"value":"Start process","label":"Start process","group":"Bonita BPM"},{"value":"POST","label":"POST","group":"HTTP request"},{"value":"PUT","label":"PUT","group":"HTTP request"},{"value":"PATCH","label":"PATCH","group":"HTTP request"},{"value":"GET","label":"GET","group":"HTTP request"},{"value":"DELETE","label":"DELETE","group":"HTTP request"},{"value":"Add to collection","label":"Add to collection","group":"Collection"},{"value":"Remove from collection","label":"Remove from collection","group":"Collection"},{"value":"Higiene Basica","label":"Higiene Basica","group":"trycore"}],"bond":"constant"},{"label":"Data sent on click","name":"dataToSend","help":"Can be used to fulfill a contract","showFor":"properties.action.value === 'PATCH' || properties.action.value === 'POST' || properties.action.value === 'PUT' || properties.action.value === 'Submit task' || properties.action.value ===  'Start process'","type":"text","bond":"expression"},{"label":"Successful response value","name":"dataFromSuccess","help":"Holds the response when the request is successful","showFor":"['POST','PATCH', 'PUT', 'GET', 'DELETE', 'Submit task', 'Start process','Higiene Basica'].indexOf(properties.action.value) > -1","type":"text","bond":"variable"},{"label":"Failed response value","name":"dataFromError","help":"Holds the response when the request has failed","showFor":"['POST','PATCH', 'PUT', 'GET', 'DELETE', 'Submit task', 'Start process'].indexOf(properties.action.value) > -1","type":"text","bond":"variable"},{"label":"Target URL on success","name":"targetUrlOnSuccess","help":"Next page to display, for applications. In the Portal, it is ignored as navigation is managed automatically","showFor":"['POST','PATCH', 'PUT', 'DELETE', 'Submit task', 'Start process'].indexOf(properties.action.value) > -1","type":"text","bond":"interpolation"},{"label":"Collection","name":"collectionToModify","caption":"Variable of type array","help":"Use $collection to act on the collection of a repeated content","showFor":"properties.action.value === 'Remove from collection' || properties.action.value === 'Add to collection'","type":"collection","bond":"variable"},{"label":"Add","name":"collectionPosition","showFor":"properties.action.value === 'Add to collection'","type":"choice","defaultValue":"Last","choiceValues":["First","Last"],"bond":"constant"},{"label":"Value to add","name":"valueToAdd","showFor":"properties.action.value === 'Add to collection'","type":"text","bond":"expression"},{"label":"Remove","name":"collectionPosition","showFor":"properties.action.value === 'Remove from collection'","type":"choice","defaultValue":"Last","choiceValues":["First","Item","Last"],"bond":"constant"},{"label":"Item to remove","name":"removeItem","help":"Use $item to remove the current item in a repeated collection","showFor":"properties.action.value === 'Remove from collection' && properties.collectionPosition.value === 'Item'","type":"text","bond":"variable"},{"label":"id","name":"id","caption":"id","help":"id","showFor":"properties.action.value !== 'Higiene Basica'","type":"text","bond":"expression"},{"label":"url","name":"url","caption":"url","help":"url","showFor":"properties.action.value !== 'Higiene Basica'","type":"text","bond":"expression"},{"label":"URL Sarlaft","name":"uriSarlaft","help":"URL ya construida para llamar el servicio de Sarlaft","showFor":"properties.action.value === 'Higiene Basica'","type":"text","bond":"expression"},{"label":"buroBase","name":"buroBase","help":"Buro minimo para aprobar higiene","showFor":"properties.action.value === 'Higiene Basica'","type":"text","bond":"expression"},{"label":"URL Cifin Validador","name":"uriCifinV","help":"URL ya construida para llamar el servicio de cifin validador","showFor":"properties.action.value === 'Higiene Basica'","type":"text","bond":"expression"},{"label":"URL Cifin Comercial","name":"uriCifinC","help":"URL ya construida para llamar el servicio de cifin Comercial","showFor":"properties.action.value === 'Higiene Basica'","type":"text","bond":"expression"},{"label":"URL personas","name":"uriPersonas","help":"URL ya construida para llamar el servicio de personas","showFor":"properties.action.value === 'Higiene Basica'","type":"text","bond":"expression"},{"label":"URL personas Addresses","name":"uriPerAddresses","help":"URL ya construida para llamar el servicio de personas Addresses","showFor":"properties.action.value === 'Higiene Basica'","type":"text","bond":"expression"},{"label":"URL personas datos economicos","name":"uriPerEconomic","help":"URL ya construida para llamar el servicio de  personas datos economicos","showFor":"properties.action.value === 'Higiene Basica'","type":"text","bond":"expression"},{"label":"bloquear","name":"bloquear","caption":"bloquear","help":"bloquear","type":"text","bond":"variable"},{"label":"Respuestas","name":"respuestas","help":"Respuestas","showFor":"properties.action.value === 'Higiene Basica'","type":"text","bond":"variable"},{"label":"errores","name":"errores","caption":"errores","help":"errores","showFor":"properties.action.value === 'Higiene Basica'","type":"text","bond":"variable"},{"label":"urlScoringGlobal","name":"urlScoringGlobal","type":"text","bond":"variable"},{"label":"tramaScoringGlobal","name":"tramaScoringGlobal","type":"text","bond":"variable"},{"label":"respuestaScoringGlobal","name":"respuestaScoringGlobal","type":"text","bond":"variable"},{"label":"respuestaParticipe","name":"respuestaParticipe","help":"respuestaParticipe","type":"text","bond":"variable"},{"label":"tramaParticipe","name":"tramaParticipe","help":"tramaParticipe","type":"text","bond":"variable"},{"label":"participeAdicional","name":"participeAdicional","help":"participeAdicional","type":"text","bond":"variable"},{"label":"buro","name":"buro","caption":"buro","help":"buro obtenido de cifin","type":"text","bond":"variable"},{"label":"otherProperties","name":"otherProperties","help":"otherProperties","type":"text","bond":"variable"},{"label":"variableFinal","name":"variableFinal","type":"text","bond":"variable"},{"label":"resuPrueba","name":"resuPrueba","type":"text","bond":"variable"}],"assets":[{"id":"538d16d2-d502-498a-a40f-861b3f583377","name":"cnmcUtiles.js","type":"js","order":1,"external":false}],"requiredModules":["CNMCUtiles"],"type":"widget"}